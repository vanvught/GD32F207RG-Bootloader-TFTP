
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	20040000 	andcs	r0, r4, r0
 8000004:	080007e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl}
 8000008:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800000c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000010:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000014:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000018:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
	...
 800002c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000030:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800003c:	08004985 	stmdaeq	r0, {r0, r2, r7, r8, fp, lr}
 8000040:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000044:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000048:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800004c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000050:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000054:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000058:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800005c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000060:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000064:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000068:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800006c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000070:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000074:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000078:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800007c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000080:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000084:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000088:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800008c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000090:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000094:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000098:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800009c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000a0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000a4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000a8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000ac:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000b0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000b4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000b8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000bc:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000c0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000c4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000c8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000cc:	00000000 	andeq	r0, r0, r0
 80000d0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000d4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000d8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000dc:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000e0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000e4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000e8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000ec:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000f0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000f4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000f8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80000fc:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000100:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000104:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000108:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800010c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000110:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000114:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000118:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800011c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000120:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000124:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000128:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800012c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000130:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000134:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000138:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800013c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000140:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000144:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000148:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800014c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000150:	00000000 	andeq	r0, r0, r0
 8000154:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000158:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800015c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000160:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000164:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
	...
 8000178:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800017c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000180:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 8000184:	00000000 	andeq	r0, r0, r0
 8000188:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 800018c:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
	...
 80001a0:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80001a4:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}

Disassembly of section .text:

080001a8 <net_init>:
 80001a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80001ac:	460c      	mov	r4, r1
 80001ae:	4616      	mov	r6, r2
 80001b0:	9f06      	ldr	r7, [sp, #24]
 80001b2:	4a22      	ldr	r2, [pc, #136]	; (800023c <net_init+0x94>)
 80001b4:	461d      	mov	r5, r3
 80001b6:	1e43      	subs	r3, r0, #1
 80001b8:	3005      	adds	r0, #5
 80001ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80001be:	4283      	cmp	r3, r0
 80001c0:	f802 1b01 	strb.w	r1, [r2], #1
 80001c4:	d1f9      	bne.n	80001ba <net_init+0x12>
 80001c6:	4623      	mov	r3, r4
 80001c8:	4a1d      	ldr	r2, [pc, #116]	; (8000240 <net_init+0x98>)
 80001ca:	f104 010c 	add.w	r1, r4, #12
 80001ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80001d2:	428b      	cmp	r3, r1
 80001d4:	f802 0b01 	strb.w	r0, [r2], #1
 80001d8:	d1f9      	bne.n	80001ce <net_init+0x26>
 80001da:	f04f 0800 	mov.w	r8, #0
 80001de:	4918      	ldr	r1, [pc, #96]	; (8000240 <net_init+0x98>)
 80001e0:	4816      	ldr	r0, [pc, #88]	; (800023c <net_init+0x94>)
 80001e2:	f000 f995 	bl	8000510 <ip_init>
 80001e6:	4815      	ldr	r0, [pc, #84]	; (800023c <net_init+0x94>)
 80001e8:	f000 f83c 	bl	8000264 <rfc3927_init>
 80001ec:	f887 8000 	strb.w	r8, [r7]
 80001f0:	782b      	ldrb	r3, [r5, #0]
 80001f2:	b163      	cbz	r3, 800020e <net_init+0x66>
 80001f4:	4632      	mov	r2, r6
 80001f6:	4912      	ldr	r1, [pc, #72]	; (8000240 <net_init+0x98>)
 80001f8:	4810      	ldr	r0, [pc, #64]	; (800023c <net_init+0x94>)
 80001fa:	f003 fe8b 	bl	8003f14 <dhcp_client>
 80001fe:	4540      	cmp	r0, r8
 8000200:	da05      	bge.n	800020e <net_init+0x66>
 8000202:	480f      	ldr	r0, [pc, #60]	; (8000240 <net_init+0x98>)
 8000204:	f885 8000 	strb.w	r8, [r5]
 8000208:	f002 feac 	bl	8002f64 <rfc3927>
 800020c:	7038      	strb	r0, [r7, #0]
 800020e:	490c      	ldr	r1, [pc, #48]	; (8000240 <net_init+0x98>)
 8000210:	480a      	ldr	r0, [pc, #40]	; (800023c <net_init+0x94>)
 8000212:	f000 f87f 	bl	8000314 <arp_init>
 8000216:	480a      	ldr	r0, [pc, #40]	; (8000240 <net_init+0x98>)
 8000218:	f004 f862 	bl	80042e0 <ip_set_ip>
 800021c:	f000 f82e 	bl	800027c <tcp_init>
 8000220:	4a07      	ldr	r2, [pc, #28]	; (8000240 <net_init+0x98>)
 8000222:	1e63      	subs	r3, r4, #1
 8000224:	340b      	adds	r4, #11
 8000226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800022a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800022e:	429c      	cmp	r4, r3
 8000230:	d1f9      	bne.n	8000226 <net_init+0x7e>
 8000232:	782a      	ldrb	r2, [r5, #0]
 8000234:	4b03      	ldr	r3, [pc, #12]	; (8000244 <net_init+0x9c>)
 8000236:	701a      	strb	r2, [r3, #0]
 8000238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800023c:	20001198 	mulcs	r0, r8, r1
 8000240:	2000118c 	andcs	r1, r0, ip, lsl #3
 8000244:	2000119e 	mulcs	r0, lr, r1

08000248 <net_shutdown>:
 8000248:	b508      	push	{r3, lr}
 800024a:	f000 f96c 	bl	8000526 <ip_shutdown>
 800024e:	4b04      	ldr	r3, [pc, #16]	; (8000260 <net_shutdown+0x18>)
 8000250:	781b      	ldrb	r3, [r3, #0]
 8000252:	b11b      	cbz	r3, 800025c <net_shutdown+0x14>
 8000254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000258:	f003 bf64 	b.w	8004124 <dhcp_client_release>
 800025c:	bd08      	pop	{r3, pc}
 800025e:	bf00      	nop
 8000260:	2000119e 	mulcs	r0, lr, r1

08000264 <rfc3927_init>:
 8000264:	4b04      	ldr	r3, [pc, #16]	; (8000278 <rfc3927_init+0x14>)
 8000266:	1d82      	adds	r2, r0, #6
 8000268:	4290      	cmp	r0, r2
 800026a:	d100      	bne.n	800026e <rfc3927_init+0xa>
 800026c:	4770      	bx	lr
 800026e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8000272:	f803 1b01 	strb.w	r1, [r3], #1
 8000276:	e7f7      	b.n	8000268 <rfc3927_init+0x4>
 8000278:	200011a8 	andcs	r1, r0, r8, lsr #3

0800027c <tcp_init>:
 800027c:	2206      	movs	r2, #6
 800027e:	b513      	push	{r0, r1, r4, lr}
 8000280:	4c0b      	ldr	r4, [pc, #44]	; (80002b0 <tcp_init+0x34>)
 8000282:	490c      	ldr	r1, [pc, #48]	; (80002b4 <tcp_init+0x38>)
 8000284:	18a0      	adds	r0, r4, r2
 8000286:	f002 fead 	bl	8002fe4 <memcpy.isra.0>
 800028a:	2308      	movs	r3, #8
 800028c:	2204      	movs	r2, #4
 800028e:	81a3      	strh	r3, [r4, #12]
 8000290:	4b09      	ldr	r3, [pc, #36]	; (80002b8 <tcp_init+0x3c>)
 8000292:	eb0d 0102 	add.w	r1, sp, r2
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	f104 001a 	add.w	r0, r4, #26
 800029c:	9301      	str	r3, [sp, #4]
 800029e:	f002 fea1 	bl	8002fe4 <memcpy.isra.0>
 80002a2:	2345      	movs	r3, #69	; 0x45
 80002a4:	81e3      	strh	r3, [r4, #14]
 80002a6:	4b05      	ldr	r3, [pc, #20]	; (80002bc <tcp_init+0x40>)
 80002a8:	6163      	str	r3, [r4, #20]
 80002aa:	b002      	add	sp, #8
 80002ac:	bd10      	pop	{r4, pc}
 80002ae:	bf00      	nop
 80002b0:	200011b8 			; <UNDEFINED> instruction: 0x200011b8
 80002b4:	20001198 	mulcs	r0, r8, r1
 80002b8:	2000118c 	andcs	r1, r0, ip, lsl #3
 80002bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080002c0 <udp_init>:
 80002c0:	b570      	push	{r4, r5, r6, lr}
 80002c2:	2400      	movs	r4, #0
 80002c4:	4a0c      	ldr	r2, [pc, #48]	; (80002f8 <udp_init+0x38>)
 80002c6:	460e      	mov	r6, r1
 80002c8:	6014      	str	r4, [r2, #0]
 80002ca:	6054      	str	r4, [r2, #4]
 80002cc:	2206      	movs	r2, #6
 80002ce:	4b0b      	ldr	r3, [pc, #44]	; (80002fc <udp_init+0x3c>)
 80002d0:	4d0b      	ldr	r5, [pc, #44]	; (8000300 <udp_init+0x40>)
 80002d2:	601c      	str	r4, [r3, #0]
 80002d4:	f8c3 4b94 	str.w	r4, [r3, #2964]	; 0xb94
 80002d8:	4b0a      	ldr	r3, [pc, #40]	; (8000304 <udp_init+0x44>)
 80002da:	4601      	mov	r1, r0
 80002dc:	18a8      	adds	r0, r5, r2
 80002de:	801c      	strh	r4, [r3, #0]
 80002e0:	f002 fe8a 	bl	8002ff8 <memcpy.isra.0>
 80002e4:	4b08      	ldr	r3, [pc, #32]	; (8000308 <udp_init+0x48>)
 80002e6:	4630      	mov	r0, r6
 80002e8:	60eb      	str	r3, [r5, #12]
 80002ea:	4b08      	ldr	r3, [pc, #32]	; (800030c <udp_init+0x4c>)
 80002ec:	616b      	str	r3, [r5, #20]
 80002ee:	f002 feab 	bl	8003048 <udp_set_ip>
 80002f2:	852c      	strh	r4, [r5, #40]	; 0x28
 80002f4:	bd70      	pop	{r4, r5, r6, pc}
 80002f6:	bf00      	nop
 80002f8:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 80002fc:	200017bc 			; <UNDEFINED> instruction: 0x200017bc
 8000300:	20002ee4 	andcs	r2, r0, r4, ror #29
 8000304:	200017b0 			; <UNDEFINED> instruction: 0x200017b0
 8000308:	00450008 	subeq	r0, r5, r8
 800030c:	11400040 	cmpne	r0, r0, asr #32

08000310 <udp_shutdown>:
 8000310:	4770      	bx	lr
	...

08000314 <arp_init>:
 8000314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000318:	4604      	mov	r4, r0
 800031a:	460d      	mov	r5, r1
 800031c:	f000 f876 	bl	800040c <arp_cache_init>
 8000320:	2206      	movs	r2, #6
 8000322:	4621      	mov	r1, r4
 8000324:	482e      	ldr	r0, [pc, #184]	; (80003e0 <arp_init+0xcc>)
 8000326:	682f      	ldr	r7, [r5, #0]
 8000328:	f003 fc75 	bl	8003c16 <memcpy.isra.0>
 800032c:	4b2d      	ldr	r3, [pc, #180]	; (80003e4 <arp_init+0xd0>)
 800032e:	2507      	movs	r5, #7
 8000330:	461e      	mov	r6, r3
 8000332:	22ff      	movs	r2, #255	; 0xff
 8000334:	3d01      	subs	r5, #1
 8000336:	d146      	bne.n	80003c6 <arp_init+0xb2>
 8000338:	4b2b      	ldr	r3, [pc, #172]	; (80003e8 <arp_init+0xd4>)
 800033a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80003ec <arp_init+0xd8>
 800033e:	2206      	movs	r2, #6
 8000340:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8000344:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000348:	4621      	mov	r1, r4
 800034a:	4829      	ldr	r0, [pc, #164]	; (80003f0 <arp_init+0xdc>)
 800034c:	82b3      	strh	r3, [r6, #20]
 800034e:	f003 fc62 	bl	8003c16 <memcpy.isra.0>
 8000352:	2307      	movs	r3, #7
 8000354:	4a27      	ldr	r2, [pc, #156]	; (80003f4 <arp_init+0xe0>)
 8000356:	61f7      	str	r7, [r6, #28]
 8000358:	3b01      	subs	r3, #1
 800035a:	d137      	bne.n	80003cc <arp_init+0xb8>
 800035c:	2206      	movs	r2, #6
 800035e:	4621      	mov	r1, r4
 8000360:	4825      	ldr	r0, [pc, #148]	; (80003f8 <arp_init+0xe4>)
 8000362:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8000366:	f003 fc56 	bl	8003c16 <memcpy.isra.0>
 800036a:	4a24      	ldr	r2, [pc, #144]	; (80003fc <arp_init+0xe8>)
 800036c:	2306      	movs	r3, #6
 800036e:	4615      	mov	r5, r2
 8000370:	21ff      	movs	r1, #255	; 0xff
 8000372:	3b01      	subs	r3, #1
 8000374:	d22d      	bcs.n	80003d2 <arp_init+0xbe>
 8000376:	4b1c      	ldr	r3, [pc, #112]	; (80003e8 <arp_init+0xd4>)
 8000378:	2206      	movs	r2, #6
 800037a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800037e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000382:	4621      	mov	r1, r4
 8000384:	481e      	ldr	r0, [pc, #120]	; (8000400 <arp_init+0xec>)
 8000386:	82ab      	strh	r3, [r5, #20]
 8000388:	f003 fc45 	bl	8003c16 <memcpy.isra.0>
 800038c:	2307      	movs	r3, #7
 800038e:	2100      	movs	r1, #0
 8000390:	4a1c      	ldr	r2, [pc, #112]	; (8000404 <arp_init+0xf0>)
 8000392:	61ef      	str	r7, [r5, #28]
 8000394:	3b01      	subs	r3, #1
 8000396:	d11f      	bne.n	80003d8 <arp_init+0xc4>
 8000398:	2206      	movs	r2, #6
 800039a:	4d1b      	ldr	r5, [pc, #108]	; (8000408 <arp_init+0xf4>)
 800039c:	4621      	mov	r1, r4
 800039e:	18a8      	adds	r0, r5, r2
 80003a0:	f003 fc39 	bl	8003c16 <memcpy.isra.0>
 80003a4:	4b10      	ldr	r3, [pc, #64]	; (80003e8 <arp_init+0xd4>)
 80003a6:	4621      	mov	r1, r4
 80003a8:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80003ac:	f44f 7300 	mov.w	r3, #512	; 0x200
 80003b0:	f105 0016 	add.w	r0, r5, #22
 80003b4:	2206      	movs	r2, #6
 80003b6:	82ab      	strh	r3, [r5, #20]
 80003b8:	f003 fc2d 	bl	8003c16 <memcpy.isra.0>
 80003bc:	61ef      	str	r7, [r5, #28]
 80003be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80003c2:	f003 bc33 	b.w	8003c2c <arp_announce>
 80003c6:	f803 2b01 	strb.w	r2, [r3], #1
 80003ca:	e7b3      	b.n	8000334 <arp_init+0x20>
 80003cc:	f802 5b01 	strb.w	r5, [r2], #1
 80003d0:	e7c2      	b.n	8000358 <arp_init+0x44>
 80003d2:	f802 1b01 	strb.w	r1, [r2], #1
 80003d6:	e7cc      	b.n	8000372 <arp_init+0x5e>
 80003d8:	f802 1b01 	strb.w	r1, [r2], #1
 80003dc:	e7da      	b.n	8000394 <arp_init+0x80>
 80003de:	bf00      	nop
 80003e0:	200034de 	ldrdcs	r3, [r0], -lr
 80003e4:	200034d8 	ldrdcs	r3, [r0], -r8
 80003e8:	01000608 	tsteq	r0, r8, lsl #12
 80003ec:	04060008 	streq	r0, [r6], #-8
 80003f0:	200034ee 	andcs	r3, r0, lr, ror #9
 80003f4:	200034f8 	strdcs	r3, [r0], -r8
 80003f8:	20003536 	andcs	r3, r0, r6, lsr r5
 80003fc:	20003530 	andcs	r3, r0, r0, lsr r5
 8000400:	20003546 	andcs	r3, r0, r6, asr #10
 8000404:	20003550 	andcs	r3, r0, r0, asr r5
 8000408:	20003504 	andcs	r3, r0, r4, lsl #10

0800040c <arp_cache_init>:
 800040c:	2300      	movs	r3, #0
 800040e:	4618      	mov	r0, r3
 8000410:	4a09      	ldr	r2, [pc, #36]	; (8000438 <arp_cache_init+0x2c>)
 8000412:	b510      	push	{r4, lr}
 8000414:	8013      	strh	r3, [r2, #0]
 8000416:	4a09      	ldr	r2, [pc, #36]	; (800043c <arp_cache_init+0x30>)
 8000418:	4611      	mov	r1, r2
 800041a:	f842 0c04 	str.w	r0, [r2, #-4]
 800041e:	1d94      	adds	r4, r2, #6
 8000420:	42a1      	cmp	r1, r4
 8000422:	d105      	bne.n	8000430 <arp_cache_init+0x24>
 8000424:	3303      	adds	r3, #3
 8000426:	2b60      	cmp	r3, #96	; 0x60
 8000428:	f102 020c 	add.w	r2, r2, #12
 800042c:	d1f4      	bne.n	8000418 <arp_cache_init+0xc>
 800042e:	bd10      	pop	{r4, pc}
 8000430:	f801 0b01 	strb.w	r0, [r1], #1
 8000434:	e7f4      	b.n	8000420 <arp_cache_init+0x14>
 8000436:	bf00      	nop
 8000438:	200036dc 	ldrdcs	r3, [r0], -ip
 800043c:	20003560 	andcs	r3, r0, r0, ror #10

08000440 <igmp_init>:
 8000440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000444:	2200      	movs	r2, #0
 8000446:	4606      	mov	r6, r0
 8000448:	2509      	movs	r5, #9
 800044a:	4608      	mov	r0, r1
 800044c:	4b20      	ldr	r3, [pc, #128]	; (80004d0 <igmp_init+0x90>)
 800044e:	3d01      	subs	r5, #1
 8000450:	d13a      	bne.n	80004c8 <igmp_init+0x88>
 8000452:	4b20      	ldr	r3, [pc, #128]	; (80004d4 <igmp_init+0x94>)
 8000454:	4c20      	ldr	r4, [pc, #128]	; (80004d8 <igmp_init+0x98>)
 8000456:	601d      	str	r5, [r3, #0]
 8000458:	4b20      	ldr	r3, [pc, #128]	; (80004dc <igmp_init+0x9c>)
 800045a:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800045e:	801d      	strh	r5, [r3, #0]
 8000460:	f003 fed8 	bl	8004214 <igmp_set_ip>
 8000464:	2201      	movs	r2, #1
 8000466:	4b1e      	ldr	r3, [pc, #120]	; (80004e0 <igmp_init+0xa0>)
 8000468:	4631      	mov	r1, r6
 800046a:	801a      	strh	r2, [r3, #0]
 800046c:	225e      	movs	r2, #94	; 0x5e
 800046e:	709a      	strb	r2, [r3, #2]
 8000470:	2206      	movs	r2, #6
 8000472:	18a0      	adds	r0, r4, r2
 8000474:	f003 fe84 	bl	8004180 <memcpy.isra.0>
 8000478:	f240 4394 	movw	r3, #1172	; 0x494
 800047c:	8463      	strh	r3, [r4, #34]	; 0x22
 800047e:	2316      	movs	r3, #22
 8000480:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80004e4 <igmp_init+0xa4>
 8000484:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80004e8 <igmp_init+0xa8>
 8000488:	84e3      	strh	r3, [r4, #38]	; 0x26
 800048a:	f8c4 9014 	str.w	r9, [r4, #20]
 800048e:	4b17      	ldr	r3, [pc, #92]	; (80004ec <igmp_init+0xac>)
 8000490:	f8c4 800c 	str.w	r8, [r4, #12]
 8000494:	8227      	strh	r7, [r4, #16]
 8000496:	84a5      	strh	r5, [r4, #36]	; 0x24
 8000498:	4c15      	ldr	r4, [pc, #84]	; (80004f0 <igmp_init+0xb0>)
 800049a:	2206      	movs	r2, #6
 800049c:	6023      	str	r3, [r4, #0]
 800049e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80004a2:	18a0      	adds	r0, r4, r2
 80004a4:	80a3      	strh	r3, [r4, #4]
 80004a6:	4631      	mov	r1, r6
 80004a8:	f003 fe6a 	bl	8004180 <memcpy.isra.0>
 80004ac:	23e0      	movs	r3, #224	; 0xe0
 80004ae:	83e3      	strh	r3, [r4, #30]
 80004b0:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80004b4:	4a0f      	ldr	r2, [pc, #60]	; (80004f4 <igmp_init+0xb4>)
 80004b6:	f8c4 9014 	str.w	r9, [r4, #20]
 80004ba:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80004be:	f8c4 800c 	str.w	r8, [r4, #12]
 80004c2:	8227      	strh	r7, [r4, #16]
 80004c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80004c8:	f803 2b01 	strb.w	r2, [r3], #1
 80004cc:	e7bf      	b.n	800044e <igmp_init+0xe>
 80004ce:	bf00      	nop
 80004d0:	20003914 	andcs	r3, r0, r4, lsl r9
 80004d4:	20003920 	andcs	r3, r0, r0, lsr #18
 80004d8:	2000395c 	andcs	r3, r0, ip, asr r9
 80004dc:	2000391c 	andcs	r3, r0, ip, lsl r9
 80004e0:	20003954 	andcs	r3, r0, r4, asr r9
 80004e4:	02010040 	andeq	r0, r1, #64	; 0x40
 80004e8:	00460008 	subeq	r0, r6, r8
 80004ec:	005e0001 	subseq	r0, lr, r1
 80004f0:	20003924 	andcs	r3, r0, r4, lsr #18
 80004f4:	04940200 	ldreq	r0, [r4], #512	; 0x200

080004f8 <igmp_shutdown>:
 80004f8:	b510      	push	{r4, lr}
 80004fa:	4c04      	ldr	r4, [pc, #16]	; (800050c <igmp_shutdown+0x14>)
 80004fc:	6820      	ldr	r0, [r4, #0]
 80004fe:	b120      	cbz	r0, 800050a <igmp_shutdown+0x12>
 8000500:	f003 feb8 	bl	8004274 <igmp_leave>
 8000504:	2300      	movs	r3, #0
 8000506:	6023      	str	r3, [r4, #0]
 8000508:	80a3      	strh	r3, [r4, #4]
 800050a:	bd10      	pop	{r4, pc}
 800050c:	20003914 	andcs	r3, r0, r4, lsl r9

08000510 <ip_init>:
 8000510:	b538      	push	{r3, r4, r5, lr}
 8000512:	4604      	mov	r4, r0
 8000514:	460d      	mov	r5, r1
 8000516:	f7ff fed3 	bl	80002c0 <udp_init>
 800051a:	4629      	mov	r1, r5
 800051c:	4620      	mov	r0, r4
 800051e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000522:	f7ff bf8d 	b.w	8000440 <igmp_init>

08000526 <ip_shutdown>:
 8000526:	b508      	push	{r3, lr}
 8000528:	f7ff ffe6 	bl	80004f8 <igmp_shutdown>
 800052c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000530:	f7ff beee 	b.w	8000310 <udp_shutdown>

08000534 <console_init>:
 8000534:	b508      	push	{r3, lr}
 8000536:	f004 f9c7 	bl	80048c8 <uart0_init>
 800053a:	4804      	ldr	r0, [pc, #16]	; (800054c <console_init+0x18>)
 800053c:	f004 f9f4 	bl	8004928 <uart0_puts>
 8000540:	4803      	ldr	r0, [pc, #12]	; (8000550 <console_init+0x1c>)
 8000542:	f004 f9f1 	bl	8004928 <uart0_puts>
 8000546:	2000      	movs	r0, #0
 8000548:	bd08      	pop	{r3, pc}
 800054a:	bf00      	nop
 800054c:	08007630 	stmdaeq	r0, {r4, r5, r9, sl, ip, sp, lr}
 8000550:	08007636 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, ip, sp, lr}

08000554 <net_handle>:
 8000554:	b510      	push	{r4, lr}
 8000556:	4c0c      	ldr	r4, [pc, #48]	; (8000588 <net_handle+0x34>)
 8000558:	4620      	mov	r0, r4
 800055a:	f005 fb09 	bl	8005b70 <emac_eth_recv>
 800055e:	2800      	cmp	r0, #0
 8000560:	dd07      	ble.n	8000572 <net_handle+0x1e>
 8000562:	6820      	ldr	r0, [r4, #0]
 8000564:	8983      	ldrh	r3, [r0, #12]
 8000566:	2b08      	cmp	r3, #8
 8000568:	d107      	bne.n	800057a <net_handle+0x26>
 800056a:	f000 f8c1 	bl	80006f0 <ip_handle>
 800056e:	f005 fb13 	bl	8005b98 <emac_free_pkt>
 8000572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000576:	f002 bce5 	b.w	8002f44 <net_timers_run>
 800057a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800057e:	d1f6      	bne.n	800056e <net_handle+0x1a>
 8000580:	f000 f85a 	bl	8000638 <arp_handle>
 8000584:	e7f3      	b.n	800056e <net_handle+0x1a>
 8000586:	bf00      	nop
 8000588:	200011a0 	andcs	r1, r0, r0, lsr #3

0800058c <udp_handle>:
 800058c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000590:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8000592:	4606      	mov	r6, r0
 8000594:	ba5b      	rev16	r3, r3
 8000596:	b29b      	uxth	r3, r3
 8000598:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800059c:	2a01      	cmp	r2, #1
 800059e:	d901      	bls.n	80005a4 <udp_handle+0x18>
 80005a0:	2b7b      	cmp	r3, #123	; 0x7b
 80005a2:	d108      	bne.n	80005b6 <udp_handle+0x2a>
 80005a4:	4a22      	ldr	r2, [pc, #136]	; (8000630 <udp_handle+0xa4>)
 80005a6:	6811      	ldr	r1, [r2, #0]
 80005a8:	4299      	cmp	r1, r3
 80005aa:	d00a      	beq.n	80005c2 <udp_handle+0x36>
 80005ac:	6852      	ldr	r2, [r2, #4]
 80005ae:	4293      	cmp	r3, r2
 80005b0:	d104      	bne.n	80005bc <udp_handle+0x30>
 80005b2:	2701      	movs	r7, #1
 80005b4:	e006      	b.n	80005c4 <udp_handle+0x38>
 80005b6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80005ba:	d2f3      	bcs.n	80005a4 <udp_handle+0x18>
 80005bc:	b002      	add	sp, #8
 80005be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80005c2:	2700      	movs	r7, #0
 80005c4:	f640 3394 	movw	r3, #2964	; 0xb94
 80005c8:	8cf5      	ldrh	r5, [r6, #38]	; 0x26
 80005ca:	435f      	muls	r7, r3
 80005cc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80005d0:	ba6d      	rev16	r5, r5
 80005d2:	3d08      	subs	r5, #8
 80005d4:	b2ad      	uxth	r5, r5
 80005d6:	f5b5 6fb8 	cmp.w	r5, #1472	; 0x5c0
 80005da:	bf28      	it	cs
 80005dc:	f44f 65b8 	movcs.w	r5, #1472	; 0x5c0
 80005e0:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8000634 <udp_handle+0xa8>
 80005e4:	1d38      	adds	r0, r7, #4
 80005e6:	f838 4007 	ldrh.w	r4, [r8, r7]
 80005ea:	462a      	mov	r2, r5
 80005ec:	435c      	muls	r4, r3
 80005ee:	4420      	add	r0, r4
 80005f0:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 80005f4:	4440      	add	r0, r8
 80005f6:	f002 fcff 	bl	8002ff8 <memcpy.isra.0>
 80005fa:	2204      	movs	r2, #4
 80005fc:	f106 011a 	add.w	r1, r6, #26
 8000600:	eb0d 0002 	add.w	r0, sp, r2
 8000604:	f002 fcf8 	bl	8002ff8 <memcpy.isra.0>
 8000608:	9a01      	ldr	r2, [sp, #4]
 800060a:	19e3      	adds	r3, r4, r7
 800060c:	4443      	add	r3, r8
 800060e:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8000612:	8c72      	ldrh	r2, [r6, #34]	; 0x22
 8000614:	f8a3 55ca 	strh.w	r5, [r3, #1482]	; 0x5ca
 8000618:	ba52      	rev16	r2, r2
 800061a:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800061e:	f838 3007 	ldrh.w	r3, [r8, r7]
 8000622:	3301      	adds	r3, #1
 8000624:	f003 0301 	and.w	r3, r3, #1
 8000628:	f828 3007 	strh.w	r3, [r8, r7]
 800062c:	e7c6      	b.n	80005bc <udp_handle+0x30>
 800062e:	bf00      	nop
 8000630:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 8000634:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

08000638 <arp_handle>:
 8000638:	8a83      	ldrh	r3, [r0, #20]
 800063a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800063e:	d003      	beq.n	8000648 <arp_handle+0x10>
 8000640:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000644:	d002      	beq.n	800064c <arp_handle+0x14>
 8000646:	4770      	bx	lr
 8000648:	f003 bafa 	b.w	8003c40 <arp_handle_request>
 800064c:	f003 bb20 	b.w	8003c90 <arp_handle_reply>

08000650 <igmp_handle>:
 8000650:	7b83      	ldrb	r3, [r0, #14]
 8000652:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000656:	2b45      	cmp	r3, #69	; 0x45
 8000658:	d116      	bne.n	8000688 <igmp_handle+0x38>
 800065a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800065e:	2b11      	cmp	r3, #17
 8000660:	d112      	bne.n	8000688 <igmp_handle+0x38>
 8000662:	4b20      	ldr	r3, [pc, #128]	; (80006e4 <igmp_handle+0x94>)
 8000664:	f100 051d 	add.w	r5, r0, #29
 8000668:	9300      	str	r3, [sp, #0]
 800066a:	466a      	mov	r2, sp
 800066c:	462b      	mov	r3, r5
 800066e:	f100 0621 	add.w	r6, r0, #33	; 0x21
 8000672:	42b3      	cmp	r3, r6
 8000674:	d10b      	bne.n	800068e <igmp_handle+0x3e>
 8000676:	2401      	movs	r4, #1
 8000678:	2100      	movs	r1, #0
 800067a:	f04f 0c01 	mov.w	ip, #1
 800067e:	4b1a      	ldr	r3, [pc, #104]	; (80006e8 <igmp_handle+0x98>)
 8000680:	4a1a      	ldr	r2, [pc, #104]	; (80006ec <igmp_handle+0x9c>)
 8000682:	681f      	ldr	r7, [r3, #0]
 8000684:	428f      	cmp	r7, r1
 8000686:	d10a      	bne.n	800069e <igmp_handle+0x4e>
 8000688:	b003      	add	sp, #12
 800068a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800068e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000692:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8000696:	428c      	cmp	r4, r1
 8000698:	d0eb      	beq.n	8000672 <igmp_handle+0x22>
 800069a:	2400      	movs	r4, #0
 800069c:	e7ec      	b.n	8000678 <igmp_handle+0x28>
 800069e:	6813      	ldr	r3, [r2, #0]
 80006a0:	9301      	str	r3, [sp, #4]
 80006a2:	b924      	cbnz	r4, 80006ae <igmp_handle+0x5e>
 80006a4:	462b      	mov	r3, r5
 80006a6:	f10d 0e04 	add.w	lr, sp, #4
 80006aa:	42b3      	cmp	r3, r6
 80006ac:	d10e      	bne.n	80006cc <igmp_handle+0x7c>
 80006ae:	f892 e005 	ldrb.w	lr, [r2, #5]
 80006b2:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80006b6:	f1be 0f01 	cmp.w	lr, #1
 80006ba:	d110      	bne.n	80006de <igmp_handle+0x8e>
 80006bc:	f892 e004 	ldrb.w	lr, [r2, #4]
 80006c0:	459e      	cmp	lr, r3
 80006c2:	d909      	bls.n	80006d8 <igmp_handle+0x88>
 80006c4:	085b      	lsrs	r3, r3, #1
 80006c6:	3301      	adds	r3, #1
 80006c8:	7113      	strb	r3, [r2, #4]
 80006ca:	e005      	b.n	80006d8 <igmp_handle+0x88>
 80006cc:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80006d0:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80006d4:	45c1      	cmp	r9, r8
 80006d6:	d0e8      	beq.n	80006aa <igmp_handle+0x5a>
 80006d8:	3101      	adds	r1, #1
 80006da:	3208      	adds	r2, #8
 80006dc:	e7d2      	b.n	8000684 <igmp_handle+0x34>
 80006de:	f882 c005 	strb.w	ip, [r2, #5]
 80006e2:	e7ef      	b.n	80006c4 <igmp_handle+0x74>
 80006e4:	010000e0 	smlatteq	r0, r0, r0, r0
 80006e8:	20003920 	andcs	r3, r0, r0, lsr #18
 80006ec:	20003914 	andcs	r3, r0, r4, lsl r9

080006f0 <ip_handle>:
 80006f0:	7b82      	ldrb	r2, [r0, #14]
 80006f2:	7dc3      	ldrb	r3, [r0, #23]
 80006f4:	2a45      	cmp	r2, #69	; 0x45
 80006f6:	d003      	beq.n	8000700 <ip_handle+0x10>
 80006f8:	2b02      	cmp	r3, #2
 80006fa:	d10b      	bne.n	8000714 <ip_handle+0x24>
 80006fc:	f7ff bfa8 	b.w	8000650 <igmp_handle>
 8000700:	2b02      	cmp	r3, #2
 8000702:	d0fb      	beq.n	80006fc <ip_handle+0xc>
 8000704:	2b11      	cmp	r3, #17
 8000706:	d003      	beq.n	8000710 <ip_handle+0x20>
 8000708:	2b01      	cmp	r3, #1
 800070a:	d103      	bne.n	8000714 <ip_handle+0x24>
 800070c:	f000 b804 	b.w	8000718 <icmp_handle>
 8000710:	f7ff bf3c 	b.w	800058c <udp_handle>
 8000714:	4770      	bx	lr
	...

08000718 <icmp_handle>:
 8000718:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800071a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800071e:	4604      	mov	r4, r0
 8000720:	2b08      	cmp	r3, #8
 8000722:	d13e      	bne.n	80007a2 <icmp_handle+0x8a>
 8000724:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8000728:	2d00      	cmp	r5, #0
 800072a:	d13a      	bne.n	80007a2 <icmp_handle+0x8a>
 800072c:	1d86      	adds	r6, r0, #6
 800072e:	4631      	mov	r1, r6
 8000730:	2206      	movs	r2, #6
 8000732:	f003 fdf7 	bl	8004324 <memcpy.isra.0>
 8000736:	4630      	mov	r0, r6
 8000738:	2206      	movs	r2, #6
 800073a:	491b      	ldr	r1, [pc, #108]	; (80007a8 <icmp_handle+0x90>)
 800073c:	f003 fdf2 	bl	8004324 <memcpy.isra.0>
 8000740:	8a63      	ldrh	r3, [r4, #18]
 8000742:	f104 061a 	add.w	r6, r4, #26
 8000746:	43db      	mvns	r3, r3
 8000748:	4631      	mov	r1, r6
 800074a:	2204      	movs	r2, #4
 800074c:	8263      	strh	r3, [r4, #18]
 800074e:	f104 001e 	add.w	r0, r4, #30
 8000752:	f003 fde7 	bl	8004324 <memcpy.isra.0>
 8000756:	2204      	movs	r2, #4
 8000758:	4b14      	ldr	r3, [pc, #80]	; (80007ac <icmp_handle+0x94>)
 800075a:	eb0d 0102 	add.w	r1, sp, r2
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	4630      	mov	r0, r6
 8000762:	f104 060e 	add.w	r6, r4, #14
 8000766:	9301      	str	r3, [sp, #4]
 8000768:	f003 fddc 	bl	8004324 <memcpy.isra.0>
 800076c:	2114      	movs	r1, #20
 800076e:	4630      	mov	r0, r6
 8000770:	7625      	strb	r5, [r4, #24]
 8000772:	7665      	strb	r5, [r4, #25]
 8000774:	f003 fdbd 	bl	80042f2 <net_chksum>
 8000778:	8a21      	ldrh	r1, [r4, #16]
 800077a:	8320      	strh	r0, [r4, #24]
 800077c:	ba49      	rev16	r1, r1
 800077e:	b289      	uxth	r1, r1
 8000780:	4630      	mov	r0, r6
 8000782:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8000786:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800078a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800078e:	f003 fdb0 	bl	80042f2 <net_chksum>
 8000792:	8a21      	ldrh	r1, [r4, #16]
 8000794:	84a0      	strh	r0, [r4, #36]	; 0x24
 8000796:	ba49      	rev16	r1, r1
 8000798:	b289      	uxth	r1, r1
 800079a:	4620      	mov	r0, r4
 800079c:	310e      	adds	r1, #14
 800079e:	f005 f9ff 	bl	8005ba0 <emac_eth_send>
 80007a2:	b002      	add	sp, #8
 80007a4:	bd70      	pop	{r4, r5, r6, pc}
 80007a6:	bf00      	nop
 80007a8:	20001198 	mulcs	r0, r8, r1
 80007ac:	2000118c 	andcs	r1, r0, ip, lsl #3

080007b0 <__aeabi_uldivmod>:
 80007b0:	b953      	cbnz	r3, 80007c8 <__aeabi_uldivmod+0x18>
 80007b2:	b94a      	cbnz	r2, 80007c8 <__aeabi_uldivmod+0x18>
 80007b4:	2900      	cmp	r1, #0
 80007b6:	bf08      	it	eq
 80007b8:	2800      	cmpeq	r0, #0
 80007ba:	bf1c      	itt	ne
 80007bc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80007c0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80007c4:	f000 b80c 	b.w	80007e0 <__aeabi_idiv0>
 80007c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80007cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80007d0:	f000 fc28 	bl	8001024 <__udivmoddi4>
 80007d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80007d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80007dc:	b004      	add	sp, #16
 80007de:	4770      	bx	lr

080007e0 <__aeabi_idiv0>:
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop

080007e4 <Reset_Handler>:
 80007e4:	2100      	movs	r1, #0
 80007e6:	e003      	b.n	80007f0 <DataInit>

080007e8 <CopyData>:
 80007e8:	4b0a      	ldr	r3, [pc, #40]	; (8000814 <Zerobss+0x10>)
 80007ea:	585b      	ldr	r3, [r3, r1]
 80007ec:	5043      	str	r3, [r0, r1]
 80007ee:	3104      	adds	r1, #4

080007f0 <DataInit>:
 80007f0:	4809      	ldr	r0, [pc, #36]	; (8000818 <Zerobss+0x14>)
 80007f2:	4b0a      	ldr	r3, [pc, #40]	; (800081c <Zerobss+0x18>)
 80007f4:	1842      	adds	r2, r0, r1
 80007f6:	429a      	cmp	r2, r3
 80007f8:	d3f6      	bcc.n	80007e8 <CopyData>
 80007fa:	4a09      	ldr	r2, [pc, #36]	; (8000820 <Zerobss+0x1c>)
 80007fc:	e002      	b.n	8000804 <Zerobss>

080007fe <FillZerobss>:
 80007fe:	2300      	movs	r3, #0
 8000800:	f842 3b04 	str.w	r3, [r2], #4

08000804 <Zerobss>:
 8000804:	4b07      	ldr	r3, [pc, #28]	; (8000824 <Zerobss+0x20>)
 8000806:	429a      	cmp	r2, r3
 8000808:	d3f9      	bcc.n	80007fe <FillZerobss>
 800080a:	f004 f8c3 	bl	8004994 <SystemInit>
 800080e:	f000 f829 	bl	8000864 <main>
 8000812:	4770      	bx	lr
 8000814:	080076b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, ip, sp, lr}
 8000818:	20000000 	andcs	r0, r0, r0
 800081c:	20000084 	andcs	r0, r0, r4, lsl #1
 8000820:	20000088 	andcs	r0, r0, r8, lsl #1
 8000824:	20004c5c 	andcs	r4, r0, ip, asr ip

08000828 <ADC0_1_IRQHandler>:
 8000828:	e7fe      	b.n	8000828 <ADC0_1_IRQHandler>

0800082a <Display::Printf(unsigned char, char const*, ...)>:
 800082a:	b40c      	push	{r2, r3}
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	6984      	ldr	r4, [r0, #24]
 8000830:	4605      	mov	r5, r0
 8000832:	460e      	mov	r6, r1
 8000834:	b08a      	sub	sp, #40	; 0x28
 8000836:	b174      	cbz	r4, 8000856 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8000838:	ab0f      	add	r3, sp, #60	; 0x3c
 800083a:	2120      	movs	r1, #32
 800083c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800083e:	a802      	add	r0, sp, #8
 8000840:	9301      	str	r3, [sp, #4]
 8000842:	f000 fbdf 	bl	8001004 <vsnprintf>
 8000846:	4604      	mov	r4, r0
 8000848:	69a8      	ldr	r0, [r5, #24]
 800084a:	4631      	mov	r1, r6
 800084c:	6803      	ldr	r3, [r0, #0]
 800084e:	aa02      	add	r2, sp, #8
 8000850:	69dd      	ldr	r5, [r3, #28]
 8000852:	b2a3      	uxth	r3, r4
 8000854:	47a8      	blx	r5
 8000856:	4620      	mov	r0, r4
 8000858:	b00a      	add	sp, #40	; 0x28
 800085a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800085e:	b002      	add	sp, #8
 8000860:	4770      	bx	lr

08000862 <Hardware::RebootHandler()>:
 8000862:	4770      	bx	lr

08000864 <main>:
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	f240 6002 	movw	r0, #1538	; 0x602
 800086a:	b0e2      	sub	sp, #392	; 0x188
 800086c:	f004 fe22 	bl	80054b4 <rcu_periph_clock_enable>
 8000870:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8000874:	f004 fe1e 	bl	80054b4 <rcu_periph_clock_enable>
 8000878:	f240 6002 	movw	r0, #1538	; 0x602
 800087c:	f004 fe1a 	bl	80054b4 <rcu_periph_clock_enable>
 8000880:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000884:	2203      	movs	r2, #3
 8000886:	2148      	movs	r1, #72	; 0x48
 8000888:	485b      	ldr	r0, [pc, #364]	; (80009f8 <main+0x194>)
 800088a:	f004 fd71 	bl	8005370 <gpio_init>
 800088e:	2002      	movs	r0, #2
 8000890:	f004 f914 	bl	8004abc <bkp_data_read>
 8000894:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8000898:	4298      	cmp	r0, r3
 800089a:	d02c      	beq.n	80008f6 <main+0x92>
 800089c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008a0:	4855      	ldr	r0, [pc, #340]	; (80009f8 <main+0x194>)
 80008a2:	f004 fdbd 	bl	8005420 <gpio_input_bit_get>
 80008a6:	b330      	cbz	r0, 80008f6 <main+0x92>
 80008a8:	b672      	cpsid	i
 80008aa:	20ff      	movs	r0, #255	; 0xff
 80008ac:	4b53      	ldr	r3, [pc, #332]	; (80009fc <main+0x198>)
 80008ae:	4a54      	ldr	r2, [pc, #336]	; (8000a00 <main+0x19c>)
 80008b0:	4619      	mov	r1, r3
 80008b2:	3301      	adds	r3, #1
 80008b4:	4293      	cmp	r3, r2
 80008b6:	7008      	strb	r0, [r1, #0]
 80008b8:	d1fa      	bne.n	80008b0 <main+0x4c>
 80008ba:	20ff      	movs	r0, #255	; 0xff
 80008bc:	4b51      	ldr	r3, [pc, #324]	; (8000a04 <main+0x1a0>)
 80008be:	4a52      	ldr	r2, [pc, #328]	; (8000a08 <main+0x1a4>)
 80008c0:	4619      	mov	r1, r3
 80008c2:	3301      	adds	r3, #1
 80008c4:	4293      	cmp	r3, r2
 80008c6:	7008      	strb	r0, [r1, #0]
 80008c8:	d1fa      	bne.n	80008c0 <main+0x5c>
 80008ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80008ce:	2100      	movs	r1, #0
 80008d0:	6119      	str	r1, [r3, #16]
 80008d2:	f8d3 2d04 	ldr.w	r2, [r3, #3332]	; 0xd04
 80008d6:	f503 6350 	add.w	r3, r3, #3328	; 0xd00
 80008da:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80008de:	605a      	str	r2, [r3, #4]
 80008e0:	4a4a      	ldr	r2, [pc, #296]	; (8000a0c <main+0x1a8>)
 80008e2:	609a      	str	r2, [r3, #8]
 80008e4:	689b      	ldr	r3, [r3, #8]
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	f383 8808 	msr	MSP, r3
 80008ec:	f381 8814 	msr	CONTROL, r1
 80008f0:	b662      	cpsie	i
 80008f2:	6853      	ldr	r3, [r2, #4]
 80008f4:	4718      	bx	r3
 80008f6:	a801      	add	r0, sp, #4
 80008f8:	f003 fe0a 	bl	8004510 <Hardware::Hardware()>
 80008fc:	a830      	add	r0, sp, #192	; 0xc0
 80008fe:	f002 ff21 	bl	8003744 <Network::Network()>
 8000902:	2104      	movs	r1, #4
 8000904:	a80d      	add	r0, sp, #52	; 0x34
 8000906:	f001 fd1b 	bl	8002340 <Display::Display(unsigned int)>
 800090a:	a807      	add	r0, sp, #28
 800090c:	f003 fdaa 	bl	8004464 <LedBlink::LedBlink()>
 8000910:	4a3f      	ldr	r2, [pc, #252]	; (8000a10 <main+0x1ac>)
 8000912:	4b40      	ldr	r3, [pc, #256]	; (8000a14 <main+0x1b0>)
 8000914:	4940      	ldr	r1, [pc, #256]	; (8000a18 <main+0x1b4>)
 8000916:	a802      	add	r0, sp, #8
 8000918:	f003 fd5e 	bl	80043d8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800091c:	493f      	ldr	r1, [pc, #252]	; (8000a1c <main+0x1b8>)
 800091e:	a802      	add	r0, sp, #8
 8000920:	f003 fd92 	bl	8004448 <FirmwareVersion::Print(char const*)>
 8000924:	a814      	add	r0, sp, #80	; 0x50
 8000926:	f001 f979 	bl	8001c1c <FlashCodeInstall::FlashCodeInstall()>
 800092a:	a803      	add	r0, sp, #12
 800092c:	f001 fa5a 	bl	8001de4 <ConfigStore::ConfigStore()>
 8000930:	a805      	add	r0, sp, #20
 8000932:	f001 fbf9 	bl	8002128 <StoreNetwork::StoreNetwork()>
 8000936:	ab06      	add	r3, sp, #24
 8000938:	a905      	add	r1, sp, #20
 800093a:	a830      	add	r0, sp, #192	; 0xc0
 800093c:	935e      	str	r3, [sp, #376]	; 0x178
 800093e:	f002 ff53 	bl	80037e8 <Network::Init(NetworkParamsStore*)>
 8000942:	a830      	add	r0, sp, #192	; 0xc0
 8000944:	f003 f8d2 	bl	8003aec <Network::Print()>
 8000948:	2101      	movs	r1, #1
 800094a:	a807      	add	r0, sp, #28
 800094c:	f003 fdac 	bl	80044a8 <LedBlink::SetMode(ledblink::Mode)>
 8000950:	2300      	movs	r3, #0
 8000952:	2206      	movs	r2, #6
 8000954:	2109      	movs	r1, #9
 8000956:	a824      	add	r0, sp, #144	; 0x90
 8000958:	f000 fe90 	bl	800167c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 800095c:	a804      	add	r0, sp, #16
 800095e:	f001 fc1b 	bl	8002198 <StoreRemoteConfig::StoreRemoteConfig()>
 8000962:	a904      	add	r1, sp, #16
 8000964:	a81b      	add	r0, sp, #108	; 0x6c
 8000966:	f000 ff9b 	bl	80018a0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800096a:	a81b      	add	r0, sp, #108	; 0x6c
 800096c:	f000 ffa2 	bl	80018b4 <RemoteConfigParams::Load()>
 8000970:	b118      	cbz	r0, 800097a <main+0x116>
 8000972:	a924      	add	r1, sp, #144	; 0x90
 8000974:	a81b      	add	r0, sp, #108	; 0x6c
 8000976:	f000 ffa9 	bl	80018cc <RemoteConfigParams::Set(RemoteConfig*)>
 800097a:	2301      	movs	r3, #1
 800097c:	2104      	movs	r1, #4
 800097e:	a807      	add	r0, sp, #28
 8000980:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
 8000984:	f003 fd90 	bl	80044a8 <LedBlink::SetMode(ledblink::Mode)>
 8000988:	2103      	movs	r1, #3
 800098a:	4a25      	ldr	r2, [pc, #148]	; (8000a20 <main+0x1bc>)
 800098c:	a80d      	add	r0, sp, #52	; 0x34
 800098e:	f7ff ff4c 	bl	800082a <Display::Printf(unsigned char, char const*, ...)>
 8000992:	2102      	movs	r1, #2
 8000994:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000998:	f004 fcc0 	bl	800531c <fwdgt_config>
 800099c:	2801      	cmp	r0, #1
 800099e:	bf0c      	ite	eq
 80009a0:	2301      	moveq	r3, #1
 80009a2:	2300      	movne	r3, #0
 80009a4:	f88d 3004 	strb.w	r3, [sp, #4]
 80009a8:	d101      	bne.n	80009ae <main+0x14a>
 80009aa:	f004 fca7 	bl	80052fc <fwdgt_enable>
 80009ae:	2601      	movs	r6, #1
 80009b0:	4d1c      	ldr	r5, [pc, #112]	; (8000a24 <main+0x1c0>)
 80009b2:	4c1d      	ldr	r4, [pc, #116]	; (8000a28 <main+0x1c4>)
 80009b4:	f004 fcaa 	bl	800530c <fwdgt_counter_reload>
 80009b8:	f7ff fdcc 	bl	8000554 <net_handle>
 80009bc:	f002 fcae 	bl	800331c <net::link_register_read()>
 80009c0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80009c2:	4290      	cmp	r0, r2
 80009c4:	d002      	beq.n	80009cc <main+0x168>
 80009c6:	9030      	str	r0, [sp, #192]	; 0xc0
 80009c8:	f002 fea0 	bl	800370c <net::link_handle_change(net::Link)>
 80009cc:	a824      	add	r0, sp, #144	; 0x90
 80009ce:	f000 fec3 	bl	8001758 <RemoteConfig::Run()>
 80009d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80009d4:	2a00      	cmp	r2, #0
 80009d6:	d0ed      	beq.n	80009b4 <main+0x150>
 80009d8:	682b      	ldr	r3, [r5, #0]
 80009da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80009dc:	1a5b      	subs	r3, r3, r1
 80009de:	429a      	cmp	r2, r3
 80009e0:	d8e8      	bhi.n	80009b4 <main+0x150>
 80009e2:	682b      	ldr	r3, [r5, #0]
 80009e4:	930c      	str	r3, [sp, #48]	; 0x30
 80009e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80009e8:	2b01      	cmp	r3, #1
 80009ea:	f083 0201 	eor.w	r2, r3, #1
 80009ee:	920b      	str	r2, [sp, #44]	; 0x2c
 80009f0:	bf14      	ite	ne
 80009f2:	6126      	strne	r6, [r4, #16]
 80009f4:	6163      	streq	r3, [r4, #20]
 80009f6:	e7dd      	b.n	80009b4 <main+0x150>
 80009f8:	40010800 	andmi	r0, r1, r0, lsl #16
 80009fc:	e000e180 	and	lr, r0, r0, lsl #3
 8000a00:	e000e1a0 	and	lr, r0, r0, lsr #3
 8000a04:	e000e280 	and	lr, r0, r0, lsl #5
 8000a08:	e000e2a0 	and	lr, r0, r0, lsr #5
 8000a0c:	08008000 	stmdaeq	r0, {pc}
 8000a10:	08006945 	stmdaeq	r0, {r0, r2, r6, r8, fp, sp, lr}
 8000a14:	0800693c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, sp, lr}
 8000a18:	0800697d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, sp, lr}
 8000a1c:	08006951 	stmdaeq	r0, {r0, r4, r6, r8, fp, sp, lr}
 8000a20:	08006968 	stmdaeq	r0, {r3, r5, r6, r8, fp, sp, lr}
 8000a24:	200039fc 	strdcs	r3, [r0], -ip
 8000a28:	40011000 	andmi	r1, r1, r0

08000a2c <Display::PutString(char const*) [clone .isra.0]>:
 8000a2c:	b110      	cbz	r0, 8000a34 <Display::PutString(char const*) [clone .isra.0]+0x8>
 8000a2e:	6803      	ldr	r3, [r0, #0]
 8000a30:	699b      	ldr	r3, [r3, #24]
 8000a32:	4718      	bx	r3
 8000a34:	4770      	bx	lr

08000a36 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8000a36:	b110      	cbz	r0, 8000a3e <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8000a38:	6803      	ldr	r3, [r0, #0]
 8000a3a:	691b      	ldr	r3, [r3, #16]
 8000a3c:	4718      	bx	r3
 8000a3e:	4770      	bx	lr

08000a40 <Display::Status(Display7SegmentMessage)>:
 8000a40:	7c43      	ldrb	r3, [r0, #17]
 8000a42:	b513      	push	{r0, r1, r4, lr}
 8000a44:	4604      	mov	r4, r0
 8000a46:	b19b      	cbz	r3, 8000a70 <Display::Status(Display7SegmentMessage)+0x30>
 8000a48:	43c9      	mvns	r1, r1
 8000a4a:	2312      	movs	r3, #18
 8000a4c:	7a00      	ldrb	r0, [r0, #8]
 8000a4e:	f88d 3004 	strb.w	r3, [sp, #4]
 8000a52:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8000a56:	f88d 1006 	strb.w	r1, [sp, #6]
 8000a5a:	f88d 3005 	strb.w	r3, [sp, #5]
 8000a5e:	f005 f937 	bl	8005cd0 <gd32_i2c_set_address>
 8000a62:	68e0      	ldr	r0, [r4, #12]
 8000a64:	f005 f92c 	bl	8005cc0 <gd32_i2c_set_baudrate>
 8000a68:	2103      	movs	r1, #3
 8000a6a:	a801      	add	r0, sp, #4
 8000a6c:	f005 f936 	bl	8005cdc <gd32_i2c_write>
 8000a70:	b002      	add	sp, #8
 8000a72:	bd10      	pop	{r4, pc}

08000a74 <network::display_emac_start()>:
 8000a74:	b510      	push	{r4, lr}
 8000a76:	4c06      	ldr	r4, [pc, #24]	; (8000a90 <network::display_emac_start()+0x1c>)
 8000a78:	2102      	movs	r1, #2
 8000a7a:	6823      	ldr	r3, [r4, #0]
 8000a7c:	6998      	ldr	r0, [r3, #24]
 8000a7e:	f7ff ffda 	bl	8000a36 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8000a82:	6823      	ldr	r3, [r4, #0]
 8000a84:	4903      	ldr	r1, [pc, #12]	; (8000a94 <network::display_emac_start()+0x20>)
 8000a86:	6998      	ldr	r0, [r3, #24]
 8000a88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000a8c:	f7ff bfce 	b.w	8000a2c <Display::PutString(char const*) [clone .isra.0]>
 8000a90:	200010e0 	andcs	r1, r0, r0, ror #1
 8000a94:	08006981 	stmdaeq	r0, {r0, r7, r8, fp, sp, lr}

08000a98 <network::display_ip()>:
 8000a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000a9c:	4c15      	ldr	r4, [pc, #84]	; (8000af4 <network::display_ip()+0x5c>)
 8000a9e:	2102      	movs	r1, #2
 8000aa0:	6823      	ldr	r3, [r4, #0]
 8000aa2:	b087      	sub	sp, #28
 8000aa4:	6998      	ldr	r0, [r3, #24]
 8000aa6:	f7ff ffc6 	bl	8000a36 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8000aaa:	4b13      	ldr	r3, [pc, #76]	; (8000af8 <network::display_ip()+0x60>)
 8000aac:	6826      	ldr	r6, [r4, #0]
 8000aae:	681d      	ldr	r5, [r3, #0]
 8000ab0:	69e8      	ldr	r0, [r5, #28]
 8000ab2:	696c      	ldr	r4, [r5, #20]
 8000ab4:	f000 f872 	bl	8000b9c <__popcountsi2>
 8000ab8:	79eb      	ldrb	r3, [r5, #7]
 8000aba:	b2e7      	uxtb	r7, r4
 8000abc:	f3c4 2807 	ubfx	r8, r4, #8, #8
 8000ac0:	f3c4 4907 	ubfx	r9, r4, #16, #8
 8000ac4:	0e24      	lsrs	r4, r4, #24
 8000ac6:	b99b      	cbnz	r3, 8000af0 <network::display_ip()+0x58>
 8000ac8:	796b      	ldrb	r3, [r5, #5]
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	bf14      	ite	ne
 8000ace:	2244      	movne	r2, #68	; 0x44
 8000ad0:	2253      	moveq	r2, #83	; 0x53
 8000ad2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8000ad6:	463b      	mov	r3, r7
 8000ad8:	2102      	movs	r1, #2
 8000ada:	4630      	mov	r0, r6
 8000adc:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8000ae0:	4a06      	ldr	r2, [pc, #24]	; (8000afc <network::display_ip()+0x64>)
 8000ae2:	f8cd 8000 	str.w	r8, [sp]
 8000ae6:	f7ff fea0 	bl	800082a <Display::Printf(unsigned char, char const*, ...)>
 8000aea:	b007      	add	sp, #28
 8000aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000af0:	225a      	movs	r2, #90	; 0x5a
 8000af2:	e7ee      	b.n	8000ad2 <network::display_ip()+0x3a>
 8000af4:	200010e0 	andcs	r1, r0, r0, ror #1
 8000af8:	200034d4 	ldrdcs	r3, [r0], -r4
 8000afc:	08006990 	stmdaeq	r0, {r4, r7, r8, fp, sp, lr}

08000b00 <network::display_netmask()>:
 8000b00:	f7ff bfca 	b.w	8000a98 <network::display_ip()>

08000b04 <network::display_gateway()>:
 8000b04:	4770      	bx	lr
	...

08000b08 <network::display_emac_shutdown()>:
 8000b08:	b510      	push	{r4, lr}
 8000b0a:	4c06      	ldr	r4, [pc, #24]	; (8000b24 <network::display_emac_shutdown()+0x1c>)
 8000b0c:	2102      	movs	r1, #2
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	6998      	ldr	r0, [r3, #24]
 8000b12:	f7ff ff90 	bl	8000a36 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8000b16:	6823      	ldr	r3, [r4, #0]
 8000b18:	4903      	ldr	r1, [pc, #12]	; (8000b28 <network::display_emac_shutdown()+0x20>)
 8000b1a:	6998      	ldr	r0, [r3, #24]
 8000b1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b20:	f7ff bf84 	b.w	8000a2c <Display::PutString(char const*) [clone .isra.0]>
 8000b24:	200010e0 	andcs	r1, r0, r0, ror #1
 8000b28:	080069a2 	stmdaeq	r0, {r1, r5, r7, r8, fp, sp, lr}

08000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 8000b2c:	b538      	push	{r3, r4, r5, lr}
 8000b2e:	4605      	mov	r5, r0
 8000b30:	4c15      	ldr	r4, [pc, #84]	; (8000b88 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x5c>)
 8000b32:	2102      	movs	r1, #2
 8000b34:	6823      	ldr	r3, [r4, #0]
 8000b36:	6998      	ldr	r0, [r3, #24]
 8000b38:	f7ff ff7d 	bl	8000a36 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8000b3c:	1e68      	subs	r0, r5, #1
 8000b3e:	2803      	cmp	r0, #3
 8000b40:	d815      	bhi.n	8000b6e <network::display_dhcp_status(network::dhcp::ClientStatus)+0x42>
 8000b42:	e8df f000 	tbb	[pc, r0]
 8000b46:	18150a02 	ldmdane	r5, {r1, r9, fp}
 8000b4a:	6823      	ldr	r3, [r4, #0]
 8000b4c:	490f      	ldr	r1, [pc, #60]	; (8000b8c <network::display_dhcp_status(network::dhcp::ClientStatus)+0x60>)
 8000b4e:	6998      	ldr	r0, [r3, #24]
 8000b50:	f7ff ff6c 	bl	8000a2c <Display::PutString(char const*) [clone .isra.0]>
 8000b54:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8000b58:	e006      	b.n	8000b68 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x3c>
 8000b5a:	6823      	ldr	r3, [r4, #0]
 8000b5c:	490c      	ldr	r1, [pc, #48]	; (8000b90 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x64>)
 8000b5e:	6998      	ldr	r0, [r3, #24]
 8000b60:	f7ff ff64 	bl	8000a2c <Display::PutString(char const*) [clone .isra.0]>
 8000b64:	f248 0180 	movw	r1, #32896	; 0x8080
 8000b68:	6820      	ldr	r0, [r4, #0]
 8000b6a:	f7ff ff69 	bl	8000a40 <Display::Status(Display7SegmentMessage)>
 8000b6e:	bd38      	pop	{r3, r4, r5, pc}
 8000b70:	6823      	ldr	r3, [r4, #0]
 8000b72:	4908      	ldr	r1, [pc, #32]	; (8000b94 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x68>)
 8000b74:	e7eb      	b.n	8000b4e <network::display_dhcp_status(network::dhcp::ClientStatus)+0x22>
 8000b76:	6823      	ldr	r3, [r4, #0]
 8000b78:	4907      	ldr	r1, [pc, #28]	; (8000b98 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x6c>)
 8000b7a:	6998      	ldr	r0, [r3, #24]
 8000b7c:	f7ff ff56 	bl	8000a2c <Display::PutString(char const*) [clone .isra.0]>
 8000b80:	f645 3179 	movw	r1, #23417	; 0x5b79
 8000b84:	e7f0      	b.n	8000b68 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x3c>
 8000b86:	bf00      	nop
 8000b88:	200010e0 	andcs	r1, r0, r0, ror #1
 8000b8c:	080069b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, sp, lr}
 8000b90:	080069c2 	stmdaeq	r0, {r1, r6, r7, r8, fp, sp, lr}
 8000b94:	080069c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp, sp, lr}
 8000b98:	080069d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, fp, sp, lr}

08000b9c <__popcountsi2>:
 8000b9c:	0843      	lsrs	r3, r0, #1
 8000b9e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8000ba2:	1ac0      	subs	r0, r0, r3
 8000ba4:	0883      	lsrs	r3, r0, #2
 8000ba6:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8000baa:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8000bae:	4418      	add	r0, r3
 8000bb0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8000bb4:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8000bb8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8000bbc:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8000bc0:	0e00      	lsrs	r0, r0, #24
 8000bc2:	4770      	bx	lr

08000bc4 <_xputch>:
 8000bc4:	4603      	mov	r3, r0
 8000bc6:	b410      	push	{r4}
 8000bc8:	4c08      	ldr	r4, [pc, #32]	; (8000bec <_xputch+0x28>)
 8000bca:	68da      	ldr	r2, [r3, #12]
 8000bcc:	4608      	mov	r0, r1
 8000bce:	6821      	ldr	r1, [r4, #0]
 8000bd0:	3201      	adds	r2, #1
 8000bd2:	60da      	str	r2, [r3, #12]
 8000bd4:	b139      	cbz	r1, 8000be6 <_xputch+0x22>
 8000bd6:	691b      	ldr	r3, [r3, #16]
 8000bd8:	429a      	cmp	r2, r3
 8000bda:	da02      	bge.n	8000be2 <_xputch+0x1e>
 8000bdc:	1c4b      	adds	r3, r1, #1
 8000bde:	6023      	str	r3, [r4, #0]
 8000be0:	7008      	strb	r0, [r1, #0]
 8000be2:	bc10      	pop	{r4}
 8000be4:	4770      	bx	lr
 8000be6:	bc10      	pop	{r4}
 8000be8:	f003 bba6 	b.w	8004338 <console_putc>
 8000bec:	20000088 	andcs	r0, r0, r8, lsl #1

08000bf0 <_format_int>:
 8000bf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000bf4:	4698      	mov	r8, r3
 8000bf6:	b091      	sub	sp, #68	; 0x44
 8000bf8:	ea52 0308 	orrs.w	r3, r2, r8
 8000bfc:	4606      	mov	r6, r0
 8000bfe:	4617      	mov	r7, r2
 8000c00:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8000c04:	d133      	bne.n	8000c6e <_format_int+0x7e>
 8000c06:	2330      	movs	r3, #48	; 0x30
 8000c08:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8000c0c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000c10:	6833      	ldr	r3, [r6, #0]
 8000c12:	07d8      	lsls	r0, r3, #31
 8000c14:	d507      	bpl.n	8000c26 <_format_int+0x36>
 8000c16:	466a      	mov	r2, sp
 8000c18:	2030      	movs	r0, #48	; 0x30
 8000c1a:	6871      	ldr	r1, [r6, #4]
 8000c1c:	1b2f      	subs	r7, r5, r4
 8000c1e:	428f      	cmp	r7, r1
 8000c20:	da01      	bge.n	8000c26 <_format_int+0x36>
 8000c22:	4294      	cmp	r4, r2
 8000c24:	d839      	bhi.n	8000c9a <_format_int+0xaa>
 8000c26:	0699      	lsls	r1, r3, #26
 8000c28:	d507      	bpl.n	8000c3a <_format_int+0x4a>
 8000c2a:	466a      	mov	r2, sp
 8000c2c:	2030      	movs	r0, #48	; 0x30
 8000c2e:	68b1      	ldr	r1, [r6, #8]
 8000c30:	1b2f      	subs	r7, r5, r4
 8000c32:	428f      	cmp	r7, r1
 8000c34:	da01      	bge.n	8000c3a <_format_int+0x4a>
 8000c36:	4294      	cmp	r4, r2
 8000c38:	d832      	bhi.n	8000ca0 <_format_int+0xb0>
 8000c3a:	071a      	lsls	r2, r3, #28
 8000c3c:	bf44      	itt	mi
 8000c3e:	222d      	movmi	r2, #45	; 0x2d
 8000c40:	f804 2901 	strbmi.w	r2, [r4], #-1
 8000c44:	065b      	lsls	r3, r3, #25
 8000c46:	d407      	bmi.n	8000c58 <_format_int+0x68>
 8000c48:	466b      	mov	r3, sp
 8000c4a:	2120      	movs	r1, #32
 8000c4c:	68b2      	ldr	r2, [r6, #8]
 8000c4e:	1b28      	subs	r0, r5, r4
 8000c50:	4290      	cmp	r0, r2
 8000c52:	da01      	bge.n	8000c58 <_format_int+0x68>
 8000c54:	429c      	cmp	r4, r3
 8000c56:	d826      	bhi.n	8000ca6 <_format_int+0xb6>
 8000c58:	1b2d      	subs	r5, r5, r4
 8000c5a:	3401      	adds	r4, #1
 8000c5c:	ab10      	add	r3, sp, #64	; 0x40
 8000c5e:	429c      	cmp	r4, r3
 8000c60:	d324      	bcc.n	8000cac <_format_int+0xbc>
 8000c62:	68b3      	ldr	r3, [r6, #8]
 8000c64:	42ab      	cmp	r3, r5
 8000c66:	dc27      	bgt.n	8000cb8 <_format_int+0xc8>
 8000c68:	b011      	add	sp, #68	; 0x44
 8000c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000c6e:	462c      	mov	r4, r5
 8000c70:	46e9      	mov	r9, sp
 8000c72:	4638      	mov	r0, r7
 8000c74:	4641      	mov	r1, r8
 8000c76:	220a      	movs	r2, #10
 8000c78:	2300      	movs	r3, #0
 8000c7a:	f7ff fd99 	bl	80007b0 <__aeabi_uldivmod>
 8000c7e:	3230      	adds	r2, #48	; 0x30
 8000c80:	f804 2901 	strb.w	r2, [r4], #-1
 8000c84:	463a      	mov	r2, r7
 8000c86:	4643      	mov	r3, r8
 8000c88:	2a0a      	cmp	r2, #10
 8000c8a:	f173 0300 	sbcs.w	r3, r3, #0
 8000c8e:	4607      	mov	r7, r0
 8000c90:	4688      	mov	r8, r1
 8000c92:	d3bd      	bcc.n	8000c10 <_format_int+0x20>
 8000c94:	454c      	cmp	r4, r9
 8000c96:	d1ec      	bne.n	8000c72 <_format_int+0x82>
 8000c98:	e7ba      	b.n	8000c10 <_format_int+0x20>
 8000c9a:	f804 0901 	strb.w	r0, [r4], #-1
 8000c9e:	e7bd      	b.n	8000c1c <_format_int+0x2c>
 8000ca0:	f804 0901 	strb.w	r0, [r4], #-1
 8000ca4:	e7c4      	b.n	8000c30 <_format_int+0x40>
 8000ca6:	f804 1901 	strb.w	r1, [r4], #-1
 8000caa:	e7d0      	b.n	8000c4e <_format_int+0x5e>
 8000cac:	4630      	mov	r0, r6
 8000cae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cb2:	f7ff ff87 	bl	8000bc4 <_xputch>
 8000cb6:	e7d1      	b.n	8000c5c <_format_int+0x6c>
 8000cb8:	2120      	movs	r1, #32
 8000cba:	4630      	mov	r0, r6
 8000cbc:	f7ff ff82 	bl	8000bc4 <_xputch>
 8000cc0:	3501      	adds	r5, #1
 8000cc2:	e7ce      	b.n	8000c62 <_format_int+0x72>

08000cc4 <_format_hex>:
 8000cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cc6:	b091      	sub	sp, #68	; 0x44
 8000cc8:	4606      	mov	r6, r0
 8000cca:	6804      	ldr	r4, [r0, #0]
 8000ccc:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8000cd0:	bb61      	cbnz	r1, 8000d2c <_format_hex+0x68>
 8000cd2:	2330      	movs	r3, #48	; 0x30
 8000cd4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000cd8:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8000cdc:	07e5      	lsls	r5, r4, #31
 8000cde:	d507      	bpl.n	8000cf0 <_format_hex+0x2c>
 8000ce0:	4669      	mov	r1, sp
 8000ce2:	2530      	movs	r5, #48	; 0x30
 8000ce4:	6870      	ldr	r0, [r6, #4]
 8000ce6:	1ad7      	subs	r7, r2, r3
 8000ce8:	4287      	cmp	r7, r0
 8000cea:	da01      	bge.n	8000cf0 <_format_hex+0x2c>
 8000cec:	428b      	cmp	r3, r1
 8000cee:	d831      	bhi.n	8000d54 <_format_hex+0x90>
 8000cf0:	06a0      	lsls	r0, r4, #26
 8000cf2:	d507      	bpl.n	8000d04 <_format_hex+0x40>
 8000cf4:	4669      	mov	r1, sp
 8000cf6:	2530      	movs	r5, #48	; 0x30
 8000cf8:	68b0      	ldr	r0, [r6, #8]
 8000cfa:	1ad7      	subs	r7, r2, r3
 8000cfc:	4287      	cmp	r7, r0
 8000cfe:	da01      	bge.n	8000d04 <_format_hex+0x40>
 8000d00:	428b      	cmp	r3, r1
 8000d02:	d82a      	bhi.n	8000d5a <_format_hex+0x96>
 8000d04:	0661      	lsls	r1, r4, #25
 8000d06:	d407      	bmi.n	8000d18 <_format_hex+0x54>
 8000d08:	4669      	mov	r1, sp
 8000d0a:	2420      	movs	r4, #32
 8000d0c:	68b0      	ldr	r0, [r6, #8]
 8000d0e:	1ad5      	subs	r5, r2, r3
 8000d10:	4285      	cmp	r5, r0
 8000d12:	da01      	bge.n	8000d18 <_format_hex+0x54>
 8000d14:	428b      	cmp	r3, r1
 8000d16:	d823      	bhi.n	8000d60 <_format_hex+0x9c>
 8000d18:	1ad5      	subs	r5, r2, r3
 8000d1a:	1c5c      	adds	r4, r3, #1
 8000d1c:	ab10      	add	r3, sp, #64	; 0x40
 8000d1e:	429c      	cmp	r4, r3
 8000d20:	d321      	bcc.n	8000d66 <_format_hex+0xa2>
 8000d22:	68b3      	ldr	r3, [r6, #8]
 8000d24:	429d      	cmp	r5, r3
 8000d26:	db24      	blt.n	8000d72 <_format_hex+0xae>
 8000d28:	b011      	add	sp, #68	; 0x44
 8000d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d2c:	f014 0f02 	tst.w	r4, #2
 8000d30:	bf0c      	ite	eq
 8000d32:	2757      	moveq	r7, #87	; 0x57
 8000d34:	2737      	movne	r7, #55	; 0x37
 8000d36:	4613      	mov	r3, r2
 8000d38:	466d      	mov	r5, sp
 8000d3a:	f001 000f 	and.w	r0, r1, #15
 8000d3e:	2809      	cmp	r0, #9
 8000d40:	bf94      	ite	ls
 8000d42:	3030      	addls	r0, #48	; 0x30
 8000d44:	19c0      	addhi	r0, r0, r7
 8000d46:	0909      	lsrs	r1, r1, #4
 8000d48:	f803 0901 	strb.w	r0, [r3], #-1
 8000d4c:	d0c6      	beq.n	8000cdc <_format_hex+0x18>
 8000d4e:	42ab      	cmp	r3, r5
 8000d50:	d1f3      	bne.n	8000d3a <_format_hex+0x76>
 8000d52:	e7c3      	b.n	8000cdc <_format_hex+0x18>
 8000d54:	f803 5901 	strb.w	r5, [r3], #-1
 8000d58:	e7c5      	b.n	8000ce6 <_format_hex+0x22>
 8000d5a:	f803 5901 	strb.w	r5, [r3], #-1
 8000d5e:	e7cc      	b.n	8000cfa <_format_hex+0x36>
 8000d60:	f803 4901 	strb.w	r4, [r3], #-1
 8000d64:	e7d3      	b.n	8000d0e <_format_hex+0x4a>
 8000d66:	4630      	mov	r0, r6
 8000d68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d6c:	f7ff ff2a 	bl	8000bc4 <_xputch>
 8000d70:	e7d4      	b.n	8000d1c <_format_hex+0x58>
 8000d72:	2120      	movs	r1, #32
 8000d74:	4630      	mov	r0, r6
 8000d76:	f7ff ff25 	bl	8000bc4 <_xputch>
 8000d7a:	3501      	adds	r5, #1
 8000d7c:	e7d1      	b.n	8000d22 <_format_hex+0x5e>
	...

08000d80 <_vprintf>:
 8000d80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d84:	2700      	movs	r7, #0
 8000d86:	460b      	mov	r3, r1
 8000d88:	4614      	mov	r4, r2
 8000d8a:	f04f 080a 	mov.w	r8, #10
 8000d8e:	b086      	sub	sp, #24
 8000d90:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8000d94:	7819      	ldrb	r1, [r3, #0]
 8000d96:	b919      	cbnz	r1, 8000da0 <_vprintf+0x20>
 8000d98:	9804      	ldr	r0, [sp, #16]
 8000d9a:	b006      	add	sp, #24
 8000d9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da0:	2925      	cmp	r1, #37	; 0x25
 8000da2:	f103 0601 	add.w	r6, r3, #1
 8000da6:	d004      	beq.n	8000db2 <_vprintf+0x32>
 8000da8:	a801      	add	r0, sp, #4
 8000daa:	f7ff ff0b 	bl	8000bc4 <_xputch>
 8000dae:	4633      	mov	r3, r6
 8000db0:	e7f0      	b.n	8000d94 <_vprintf+0x14>
 8000db2:	785a      	ldrb	r2, [r3, #1]
 8000db4:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8000db8:	2a30      	cmp	r2, #48	; 0x30
 8000dba:	9703      	str	r7, [sp, #12]
 8000dbc:	d126      	bne.n	8000e0c <_vprintf+0x8c>
 8000dbe:	2220      	movs	r2, #32
 8000dc0:	9201      	str	r2, [sp, #4]
 8000dc2:	1c9e      	adds	r6, r3, #2
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	4635      	mov	r5, r6
 8000dc8:	4613      	mov	r3, r2
 8000dca:	7829      	ldrb	r1, [r5, #0]
 8000dcc:	462e      	mov	r6, r5
 8000dce:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8000dd2:	2809      	cmp	r0, #9
 8000dd4:	f105 0501 	add.w	r5, r5, #1
 8000dd8:	d91c      	bls.n	8000e14 <_vprintf+0x94>
 8000dda:	b12a      	cbz	r2, 8000de8 <_vprintf+0x68>
 8000ddc:	9303      	str	r3, [sp, #12]
 8000dde:	b11b      	cbz	r3, 8000de8 <_vprintf+0x68>
 8000de0:	9b01      	ldr	r3, [sp, #4]
 8000de2:	f043 0310 	orr.w	r3, r3, #16
 8000de6:	9301      	str	r3, [sp, #4]
 8000de8:	292e      	cmp	r1, #46	; 0x2e
 8000dea:	d122      	bne.n	8000e32 <_vprintf+0xb2>
 8000dec:	7873      	ldrb	r3, [r6, #1]
 8000dee:	2b2a      	cmp	r3, #42	; 0x2a
 8000df0:	d014      	beq.n	8000e1c <_vprintf+0x9c>
 8000df2:	2100      	movs	r1, #0
 8000df4:	460a      	mov	r2, r1
 8000df6:	1c70      	adds	r0, r6, #1
 8000df8:	7803      	ldrb	r3, [r0, #0]
 8000dfa:	4606      	mov	r6, r0
 8000dfc:	3b30      	subs	r3, #48	; 0x30
 8000dfe:	2b09      	cmp	r3, #9
 8000e00:	f100 0001 	add.w	r0, r0, #1
 8000e04:	d930      	bls.n	8000e68 <_vprintf+0xe8>
 8000e06:	b181      	cbz	r1, 8000e2a <_vprintf+0xaa>
 8000e08:	9202      	str	r2, [sp, #8]
 8000e0a:	e00e      	b.n	8000e2a <_vprintf+0xaa>
 8000e0c:	2a2d      	cmp	r2, #45	; 0x2d
 8000e0e:	d1d9      	bne.n	8000dc4 <_vprintf+0x44>
 8000e10:	2240      	movs	r2, #64	; 0x40
 8000e12:	e7d5      	b.n	8000dc0 <_vprintf+0x40>
 8000e14:	2201      	movs	r2, #1
 8000e16:	fb08 0303 	mla	r3, r8, r3, r0
 8000e1a:	e7d6      	b.n	8000dca <_vprintf+0x4a>
 8000e1c:	f854 3b04 	ldr.w	r3, [r4], #4
 8000e20:	3602      	adds	r6, #2
 8000e22:	2b00      	cmp	r3, #0
 8000e24:	bfb8      	it	lt
 8000e26:	425b      	neglt	r3, r3
 8000e28:	9302      	str	r3, [sp, #8]
 8000e2a:	9b01      	ldr	r3, [sp, #4]
 8000e2c:	f043 0301 	orr.w	r3, r3, #1
 8000e30:	9301      	str	r3, [sp, #4]
 8000e32:	7833      	ldrb	r3, [r6, #0]
 8000e34:	2b6c      	cmp	r3, #108	; 0x6c
 8000e36:	bf04      	itt	eq
 8000e38:	9b01      	ldreq	r3, [sp, #4]
 8000e3a:	3601      	addeq	r6, #1
 8000e3c:	7831      	ldrb	r1, [r6, #0]
 8000e3e:	bf04      	itt	eq
 8000e40:	f043 0304 	orreq.w	r3, r3, #4
 8000e44:	9301      	streq	r3, [sp, #4]
 8000e46:	2978      	cmp	r1, #120	; 0x78
 8000e48:	d8ae      	bhi.n	8000da8 <_vprintf+0x28>
 8000e4a:	296f      	cmp	r1, #111	; 0x6f
 8000e4c:	d810      	bhi.n	8000e70 <_vprintf+0xf0>
 8000e4e:	2963      	cmp	r1, #99	; 0x63
 8000e50:	d048      	beq.n	8000ee4 <_vprintf+0x164>
 8000e52:	d827      	bhi.n	8000ea4 <_vprintf+0x124>
 8000e54:	2958      	cmp	r1, #88	; 0x58
 8000e56:	d1a7      	bne.n	8000da8 <_vprintf+0x28>
 8000e58:	9b01      	ldr	r3, [sp, #4]
 8000e5a:	f043 0302 	orr.w	r3, r3, #2
 8000e5e:	9301      	str	r3, [sp, #4]
 8000e60:	4625      	mov	r5, r4
 8000e62:	f855 1b04 	ldr.w	r1, [r5], #4
 8000e66:	e056      	b.n	8000f16 <_vprintf+0x196>
 8000e68:	2101      	movs	r1, #1
 8000e6a:	fb08 3202 	mla	r2, r8, r2, r3
 8000e6e:	e7c3      	b.n	8000df8 <_vprintf+0x78>
 8000e70:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 8000e74:	2b08      	cmp	r3, #8
 8000e76:	d897      	bhi.n	8000da8 <_vprintf+0x28>
 8000e78:	a201      	add	r2, pc, #4	; (adr r2, 8000e80 <_vprintf+0x100>)
 8000e7a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e7e:	bf00      	nop
 8000e80:	08000ef7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9, sl, fp}
 8000e84:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000e88:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000e8c:	08000f1f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, r9, sl, fp}
 8000e90:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000e94:	08000f93 	stmdaeq	r0, {r0, r1, r4, r7, r8, r9, sl, fp}
 8000e98:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000e9c:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000ea0:	08000e61 	stmdaeq	r0, {r0, r5, r6, r9, sl, fp}
 8000ea4:	2964      	cmp	r1, #100	; 0x64
 8000ea6:	d002      	beq.n	8000eae <_vprintf+0x12e>
 8000ea8:	2969      	cmp	r1, #105	; 0x69
 8000eaa:	f47f af7d 	bne.w	8000da8 <_vprintf+0x28>
 8000eae:	9901      	ldr	r1, [sp, #4]
 8000eb0:	074d      	lsls	r5, r1, #29
 8000eb2:	bf51      	iteee	pl
 8000eb4:	4625      	movpl	r5, r4
 8000eb6:	3407      	addmi	r4, #7
 8000eb8:	f024 0407 	bicmi.w	r4, r4, #7
 8000ebc:	4625      	movmi	r5, r4
 8000ebe:	bf55      	itete	pl
 8000ec0:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8000ec4:	6863      	ldrmi	r3, [r4, #4]
 8000ec6:	17d3      	asrpl	r3, r2, #31
 8000ec8:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	da05      	bge.n	8000edc <_vprintf+0x15c>
 8000ed0:	f041 0108 	orr.w	r1, r1, #8
 8000ed4:	4252      	negs	r2, r2
 8000ed6:	9101      	str	r1, [sp, #4]
 8000ed8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000edc:	a801      	add	r0, sp, #4
 8000ede:	f7ff fe87 	bl	8000bf0 <_format_int>
 8000ee2:	e005      	b.n	8000ef0 <_vprintf+0x170>
 8000ee4:	4625      	mov	r5, r4
 8000ee6:	a801      	add	r0, sp, #4
 8000ee8:	f855 1b04 	ldr.w	r1, [r5], #4
 8000eec:	f7ff fe6a 	bl	8000bc4 <_xputch>
 8000ef0:	462c      	mov	r4, r5
 8000ef2:	3601      	adds	r6, #1
 8000ef4:	e75b      	b.n	8000dae <_vprintf+0x2e>
 8000ef6:	2308      	movs	r3, #8
 8000ef8:	4625      	mov	r5, r4
 8000efa:	9303      	str	r3, [sp, #12]
 8000efc:	2320      	movs	r3, #32
 8000efe:	2130      	movs	r1, #48	; 0x30
 8000f00:	f855 4b04 	ldr.w	r4, [r5], #4
 8000f04:	a801      	add	r0, sp, #4
 8000f06:	9301      	str	r3, [sp, #4]
 8000f08:	f7ff fe5c 	bl	8000bc4 <_xputch>
 8000f0c:	2178      	movs	r1, #120	; 0x78
 8000f0e:	a801      	add	r0, sp, #4
 8000f10:	f7ff fe58 	bl	8000bc4 <_xputch>
 8000f14:	4621      	mov	r1, r4
 8000f16:	a801      	add	r0, sp, #4
 8000f18:	f7ff fed4 	bl	8000cc4 <_format_hex>
 8000f1c:	e7e8      	b.n	8000ef0 <_vprintf+0x170>
 8000f1e:	4625      	mov	r5, r4
 8000f20:	2400      	movs	r4, #0
 8000f22:	f855 9b04 	ldr.w	r9, [r5], #4
 8000f26:	f819 3004 	ldrb.w	r3, [r9, r4]
 8000f2a:	b993      	cbnz	r3, 8000f52 <_vprintf+0x1d2>
 8000f2c:	9b01      	ldr	r3, [sp, #4]
 8000f2e:	07d9      	lsls	r1, r3, #31
 8000f30:	d503      	bpl.n	8000f3a <_vprintf+0x1ba>
 8000f32:	9b02      	ldr	r3, [sp, #8]
 8000f34:	429c      	cmp	r4, r3
 8000f36:	bfa8      	it	ge
 8000f38:	461c      	movge	r4, r3
 8000f3a:	9b01      	ldr	r3, [sp, #4]
 8000f3c:	f104 0a01 	add.w	sl, r4, #1
 8000f40:	065a      	lsls	r2, r3, #25
 8000f42:	d403      	bmi.n	8000f4c <_vprintf+0x1cc>
 8000f44:	9b03      	ldr	r3, [sp, #12]
 8000f46:	429c      	cmp	r4, r3
 8000f48:	db05      	blt.n	8000f56 <_vprintf+0x1d6>
 8000f4a:	4654      	mov	r4, sl
 8000f4c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8000f50:	e00d      	b.n	8000f6e <_vprintf+0x1ee>
 8000f52:	3401      	adds	r4, #1
 8000f54:	e7e7      	b.n	8000f26 <_vprintf+0x1a6>
 8000f56:	2120      	movs	r1, #32
 8000f58:	a801      	add	r0, sp, #4
 8000f5a:	f7ff fe33 	bl	8000bc4 <_xputch>
 8000f5e:	4654      	mov	r4, sl
 8000f60:	e7eb      	b.n	8000f3a <_vprintf+0x1ba>
 8000f62:	a801      	add	r0, sp, #4
 8000f64:	f7ff fe2e 	bl	8000bc4 <_xputch>
 8000f68:	9b02      	ldr	r3, [sp, #8]
 8000f6a:	3b01      	subs	r3, #1
 8000f6c:	9302      	str	r3, [sp, #8]
 8000f6e:	9b01      	ldr	r3, [sp, #4]
 8000f70:	07db      	lsls	r3, r3, #31
 8000f72:	d501      	bpl.n	8000f78 <_vprintf+0x1f8>
 8000f74:	9b02      	ldr	r3, [sp, #8]
 8000f76:	b11b      	cbz	r3, 8000f80 <_vprintf+0x200>
 8000f78:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8000f7c:	2900      	cmp	r1, #0
 8000f7e:	d1f0      	bne.n	8000f62 <_vprintf+0x1e2>
 8000f80:	9b03      	ldr	r3, [sp, #12]
 8000f82:	42a3      	cmp	r3, r4
 8000f84:	ddb4      	ble.n	8000ef0 <_vprintf+0x170>
 8000f86:	2120      	movs	r1, #32
 8000f88:	a801      	add	r0, sp, #4
 8000f8a:	f7ff fe1b 	bl	8000bc4 <_xputch>
 8000f8e:	3401      	adds	r4, #1
 8000f90:	e7f6      	b.n	8000f80 <_vprintf+0x200>
 8000f92:	9b01      	ldr	r3, [sp, #4]
 8000f94:	f013 0304 	ands.w	r3, r3, #4
 8000f98:	bf1d      	ittte	ne
 8000f9a:	3407      	addne	r4, #7
 8000f9c:	f024 0407 	bicne.w	r4, r4, #7
 8000fa0:	4625      	movne	r5, r4
 8000fa2:	4625      	moveq	r5, r4
 8000fa4:	bf1a      	itte	ne
 8000fa6:	f855 2b08 	ldrne.w	r2, [r5], #8
 8000faa:	6863      	ldrne	r3, [r4, #4]
 8000fac:	f855 2b04 	ldreq.w	r2, [r5], #4
 8000fb0:	e794      	b.n	8000edc <_vprintf+0x15c>
 8000fb2:	bf00      	nop

08000fb4 <printf>:
 8000fb4:	b40f      	push	{r0, r1, r2, r3}
 8000fb6:	b507      	push	{r0, r1, r2, lr}
 8000fb8:	aa04      	add	r2, sp, #16
 8000fba:	f852 1b04 	ldr.w	r1, [r2], #4
 8000fbe:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8000fc2:	9201      	str	r2, [sp, #4]
 8000fc4:	f7ff fedc 	bl	8000d80 <_vprintf>
 8000fc8:	b003      	add	sp, #12
 8000fca:	f85d eb04 	ldr.w	lr, [sp], #4
 8000fce:	b004      	add	sp, #16
 8000fd0:	4770      	bx	lr
	...

08000fd4 <snprintf>:
 8000fd4:	b40c      	push	{r2, r3}
 8000fd6:	460b      	mov	r3, r1
 8000fd8:	b513      	push	{r0, r1, r4, lr}
 8000fda:	4c09      	ldr	r4, [pc, #36]	; (8001000 <snprintf+0x2c>)
 8000fdc:	aa04      	add	r2, sp, #16
 8000fde:	f852 1b04 	ldr.w	r1, [r2], #4
 8000fe2:	6020      	str	r0, [r4, #0]
 8000fe4:	4618      	mov	r0, r3
 8000fe6:	9201      	str	r2, [sp, #4]
 8000fe8:	f7ff feca 	bl	8000d80 <_vprintf>
 8000fec:	2300      	movs	r3, #0
 8000fee:	6822      	ldr	r2, [r4, #0]
 8000ff0:	6023      	str	r3, [r4, #0]
 8000ff2:	7013      	strb	r3, [r2, #0]
 8000ff4:	b002      	add	sp, #8
 8000ff6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ffa:	b002      	add	sp, #8
 8000ffc:	4770      	bx	lr
 8000ffe:	bf00      	nop
 8001000:	20000088 	andcs	r0, r0, r8, lsl #1

08001004 <vsnprintf>:
 8001004:	b538      	push	{r3, r4, r5, lr}
 8001006:	4605      	mov	r5, r0
 8001008:	4c05      	ldr	r4, [pc, #20]	; (8001020 <vsnprintf+0x1c>)
 800100a:	4608      	mov	r0, r1
 800100c:	4611      	mov	r1, r2
 800100e:	461a      	mov	r2, r3
 8001010:	6025      	str	r5, [r4, #0]
 8001012:	f7ff feb5 	bl	8000d80 <_vprintf>
 8001016:	2300      	movs	r3, #0
 8001018:	6822      	ldr	r2, [r4, #0]
 800101a:	6023      	str	r3, [r4, #0]
 800101c:	7013      	strb	r3, [r2, #0]
 800101e:	bd38      	pop	{r3, r4, r5, pc}
 8001020:	20000088 	andcs	r0, r0, r8, lsl #1

08001024 <__udivmoddi4>:
 8001024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001028:	9e08      	ldr	r6, [sp, #32]
 800102a:	460d      	mov	r5, r1
 800102c:	4604      	mov	r4, r0
 800102e:	468e      	mov	lr, r1
 8001030:	2b00      	cmp	r3, #0
 8001032:	d14c      	bne.n	80010ce <__udivmoddi4+0xaa>
 8001034:	428a      	cmp	r2, r1
 8001036:	4694      	mov	ip, r2
 8001038:	d967      	bls.n	800110a <__udivmoddi4+0xe6>
 800103a:	fab2 f382 	clz	r3, r2
 800103e:	b153      	cbz	r3, 8001056 <__udivmoddi4+0x32>
 8001040:	fa02 fc03 	lsl.w	ip, r2, r3
 8001044:	f1c3 0220 	rsb	r2, r3, #32
 8001048:	fa01 fe03 	lsl.w	lr, r1, r3
 800104c:	fa20 f202 	lsr.w	r2, r0, r2
 8001050:	ea42 0e0e 	orr.w	lr, r2, lr
 8001054:	409c      	lsls	r4, r3
 8001056:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800105a:	fbbe f1f7 	udiv	r1, lr, r7
 800105e:	fa1f f58c 	uxth.w	r5, ip
 8001062:	fb07 ee11 	mls	lr, r7, r1, lr
 8001066:	fb01 f005 	mul.w	r0, r1, r5
 800106a:	0c22      	lsrs	r2, r4, #16
 800106c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8001070:	4290      	cmp	r0, r2
 8001072:	d90a      	bls.n	800108a <__udivmoddi4+0x66>
 8001074:	eb1c 0202 	adds.w	r2, ip, r2
 8001078:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 800107c:	f080 8119 	bcs.w	80012b2 <__udivmoddi4+0x28e>
 8001080:	4290      	cmp	r0, r2
 8001082:	f240 8116 	bls.w	80012b2 <__udivmoddi4+0x28e>
 8001086:	3902      	subs	r1, #2
 8001088:	4462      	add	r2, ip
 800108a:	1a12      	subs	r2, r2, r0
 800108c:	fbb2 f0f7 	udiv	r0, r2, r7
 8001090:	fb07 2210 	mls	r2, r7, r0, r2
 8001094:	fb00 f505 	mul.w	r5, r0, r5
 8001098:	b2a4      	uxth	r4, r4
 800109a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800109e:	42a5      	cmp	r5, r4
 80010a0:	d90a      	bls.n	80010b8 <__udivmoddi4+0x94>
 80010a2:	eb1c 0404 	adds.w	r4, ip, r4
 80010a6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80010aa:	f080 8104 	bcs.w	80012b6 <__udivmoddi4+0x292>
 80010ae:	42a5      	cmp	r5, r4
 80010b0:	f240 8101 	bls.w	80012b6 <__udivmoddi4+0x292>
 80010b4:	4464      	add	r4, ip
 80010b6:	3802      	subs	r0, #2
 80010b8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80010bc:	2100      	movs	r1, #0
 80010be:	1b64      	subs	r4, r4, r5
 80010c0:	b11e      	cbz	r6, 80010ca <__udivmoddi4+0xa6>
 80010c2:	40dc      	lsrs	r4, r3
 80010c4:	2300      	movs	r3, #0
 80010c6:	e9c6 4300 	strd	r4, r3, [r6]
 80010ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010ce:	428b      	cmp	r3, r1
 80010d0:	d908      	bls.n	80010e4 <__udivmoddi4+0xc0>
 80010d2:	2e00      	cmp	r6, #0
 80010d4:	f000 80ea 	beq.w	80012ac <__udivmoddi4+0x288>
 80010d8:	2100      	movs	r1, #0
 80010da:	e9c6 0500 	strd	r0, r5, [r6]
 80010de:	4608      	mov	r0, r1
 80010e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010e4:	fab3 f183 	clz	r1, r3
 80010e8:	2900      	cmp	r1, #0
 80010ea:	d148      	bne.n	800117e <__udivmoddi4+0x15a>
 80010ec:	42ab      	cmp	r3, r5
 80010ee:	d302      	bcc.n	80010f6 <__udivmoddi4+0xd2>
 80010f0:	4282      	cmp	r2, r0
 80010f2:	f200 80f8 	bhi.w	80012e6 <__udivmoddi4+0x2c2>
 80010f6:	1a84      	subs	r4, r0, r2
 80010f8:	eb65 0203 	sbc.w	r2, r5, r3
 80010fc:	2001      	movs	r0, #1
 80010fe:	4696      	mov	lr, r2
 8001100:	2e00      	cmp	r6, #0
 8001102:	d0e2      	beq.n	80010ca <__udivmoddi4+0xa6>
 8001104:	e9c6 4e00 	strd	r4, lr, [r6]
 8001108:	e7df      	b.n	80010ca <__udivmoddi4+0xa6>
 800110a:	b902      	cbnz	r2, 800110e <__udivmoddi4+0xea>
 800110c:	deff      	udf	#255	; 0xff
 800110e:	fab2 f382 	clz	r3, r2
 8001112:	2b00      	cmp	r3, #0
 8001114:	f040 808e 	bne.w	8001234 <__udivmoddi4+0x210>
 8001118:	1a88      	subs	r0, r1, r2
 800111a:	2101      	movs	r1, #1
 800111c:	0c17      	lsrs	r7, r2, #16
 800111e:	fa1f fe82 	uxth.w	lr, r2
 8001122:	fbb0 f5f7 	udiv	r5, r0, r7
 8001126:	fb07 0015 	mls	r0, r7, r5, r0
 800112a:	0c22      	lsrs	r2, r4, #16
 800112c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8001130:	fb0e f005 	mul.w	r0, lr, r5
 8001134:	4290      	cmp	r0, r2
 8001136:	d908      	bls.n	800114a <__udivmoddi4+0x126>
 8001138:	eb1c 0202 	adds.w	r2, ip, r2
 800113c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8001140:	d202      	bcs.n	8001148 <__udivmoddi4+0x124>
 8001142:	4290      	cmp	r0, r2
 8001144:	f200 80cc 	bhi.w	80012e0 <__udivmoddi4+0x2bc>
 8001148:	4645      	mov	r5, r8
 800114a:	1a12      	subs	r2, r2, r0
 800114c:	fbb2 f0f7 	udiv	r0, r2, r7
 8001150:	fb07 2210 	mls	r2, r7, r0, r2
 8001154:	fb0e fe00 	mul.w	lr, lr, r0
 8001158:	b2a4      	uxth	r4, r4
 800115a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800115e:	45a6      	cmp	lr, r4
 8001160:	d908      	bls.n	8001174 <__udivmoddi4+0x150>
 8001162:	eb1c 0404 	adds.w	r4, ip, r4
 8001166:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800116a:	d202      	bcs.n	8001172 <__udivmoddi4+0x14e>
 800116c:	45a6      	cmp	lr, r4
 800116e:	f200 80b4 	bhi.w	80012da <__udivmoddi4+0x2b6>
 8001172:	4610      	mov	r0, r2
 8001174:	eba4 040e 	sub.w	r4, r4, lr
 8001178:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800117c:	e7a0      	b.n	80010c0 <__udivmoddi4+0x9c>
 800117e:	f1c1 0720 	rsb	r7, r1, #32
 8001182:	408b      	lsls	r3, r1
 8001184:	fa22 fc07 	lsr.w	ip, r2, r7
 8001188:	ea4c 0c03 	orr.w	ip, ip, r3
 800118c:	fa25 fa07 	lsr.w	sl, r5, r7
 8001190:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001194:	fbba f8f9 	udiv	r8, sl, r9
 8001198:	408d      	lsls	r5, r1
 800119a:	fa20 f307 	lsr.w	r3, r0, r7
 800119e:	fb09 aa18 	mls	sl, r9, r8, sl
 80011a2:	fa1f fe8c 	uxth.w	lr, ip
 80011a6:	432b      	orrs	r3, r5
 80011a8:	fa00 f501 	lsl.w	r5, r0, r1
 80011ac:	fb08 f00e 	mul.w	r0, r8, lr
 80011b0:	0c1c      	lsrs	r4, r3, #16
 80011b2:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80011b6:	42a0      	cmp	r0, r4
 80011b8:	fa02 f201 	lsl.w	r2, r2, r1
 80011bc:	d90b      	bls.n	80011d6 <__udivmoddi4+0x1b2>
 80011be:	eb1c 0404 	adds.w	r4, ip, r4
 80011c2:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80011c6:	f080 8086 	bcs.w	80012d6 <__udivmoddi4+0x2b2>
 80011ca:	42a0      	cmp	r0, r4
 80011cc:	f240 8083 	bls.w	80012d6 <__udivmoddi4+0x2b2>
 80011d0:	f1a8 0802 	sub.w	r8, r8, #2
 80011d4:	4464      	add	r4, ip
 80011d6:	1a24      	subs	r4, r4, r0
 80011d8:	b298      	uxth	r0, r3
 80011da:	fbb4 f3f9 	udiv	r3, r4, r9
 80011de:	fb09 4413 	mls	r4, r9, r3, r4
 80011e2:	fb03 fe0e 	mul.w	lr, r3, lr
 80011e6:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80011ea:	45a6      	cmp	lr, r4
 80011ec:	d908      	bls.n	8001200 <__udivmoddi4+0x1dc>
 80011ee:	eb1c 0404 	adds.w	r4, ip, r4
 80011f2:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80011f6:	d26a      	bcs.n	80012ce <__udivmoddi4+0x2aa>
 80011f8:	45a6      	cmp	lr, r4
 80011fa:	d968      	bls.n	80012ce <__udivmoddi4+0x2aa>
 80011fc:	3b02      	subs	r3, #2
 80011fe:	4464      	add	r4, ip
 8001200:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8001204:	fba0 9302 	umull	r9, r3, r0, r2
 8001208:	eba4 040e 	sub.w	r4, r4, lr
 800120c:	429c      	cmp	r4, r3
 800120e:	46c8      	mov	r8, r9
 8001210:	469e      	mov	lr, r3
 8001212:	d354      	bcc.n	80012be <__udivmoddi4+0x29a>
 8001214:	d051      	beq.n	80012ba <__udivmoddi4+0x296>
 8001216:	2e00      	cmp	r6, #0
 8001218:	d067      	beq.n	80012ea <__udivmoddi4+0x2c6>
 800121a:	ebb5 0308 	subs.w	r3, r5, r8
 800121e:	eb64 040e 	sbc.w	r4, r4, lr
 8001222:	40cb      	lsrs	r3, r1
 8001224:	fa04 f707 	lsl.w	r7, r4, r7
 8001228:	431f      	orrs	r7, r3
 800122a:	40cc      	lsrs	r4, r1
 800122c:	e9c6 7400 	strd	r7, r4, [r6]
 8001230:	2100      	movs	r1, #0
 8001232:	e74a      	b.n	80010ca <__udivmoddi4+0xa6>
 8001234:	fa02 fc03 	lsl.w	ip, r2, r3
 8001238:	f1c3 0020 	rsb	r0, r3, #32
 800123c:	40c1      	lsrs	r1, r0
 800123e:	409d      	lsls	r5, r3
 8001240:	fa24 f000 	lsr.w	r0, r4, r0
 8001244:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001248:	4328      	orrs	r0, r5
 800124a:	fbb1 f5f7 	udiv	r5, r1, r7
 800124e:	fb07 1115 	mls	r1, r7, r5, r1
 8001252:	fa1f fe8c 	uxth.w	lr, ip
 8001256:	0c02      	lsrs	r2, r0, #16
 8001258:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800125c:	fb05 f10e 	mul.w	r1, r5, lr
 8001260:	4291      	cmp	r1, r2
 8001262:	fa04 f403 	lsl.w	r4, r4, r3
 8001266:	d908      	bls.n	800127a <__udivmoddi4+0x256>
 8001268:	eb1c 0202 	adds.w	r2, ip, r2
 800126c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8001270:	d22f      	bcs.n	80012d2 <__udivmoddi4+0x2ae>
 8001272:	4291      	cmp	r1, r2
 8001274:	d92d      	bls.n	80012d2 <__udivmoddi4+0x2ae>
 8001276:	3d02      	subs	r5, #2
 8001278:	4462      	add	r2, ip
 800127a:	1a52      	subs	r2, r2, r1
 800127c:	fbb2 f1f7 	udiv	r1, r2, r7
 8001280:	fb07 2211 	mls	r2, r7, r1, r2
 8001284:	b280      	uxth	r0, r0
 8001286:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800128a:	fb01 f20e 	mul.w	r2, r1, lr
 800128e:	4282      	cmp	r2, r0
 8001290:	d908      	bls.n	80012a4 <__udivmoddi4+0x280>
 8001292:	eb1c 0000 	adds.w	r0, ip, r0
 8001296:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 800129a:	d216      	bcs.n	80012ca <__udivmoddi4+0x2a6>
 800129c:	4282      	cmp	r2, r0
 800129e:	d914      	bls.n	80012ca <__udivmoddi4+0x2a6>
 80012a0:	3902      	subs	r1, #2
 80012a2:	4460      	add	r0, ip
 80012a4:	1a80      	subs	r0, r0, r2
 80012a6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80012aa:	e73a      	b.n	8001122 <__udivmoddi4+0xfe>
 80012ac:	4631      	mov	r1, r6
 80012ae:	4630      	mov	r0, r6
 80012b0:	e70b      	b.n	80010ca <__udivmoddi4+0xa6>
 80012b2:	4671      	mov	r1, lr
 80012b4:	e6e9      	b.n	800108a <__udivmoddi4+0x66>
 80012b6:	4610      	mov	r0, r2
 80012b8:	e6fe      	b.n	80010b8 <__udivmoddi4+0x94>
 80012ba:	454d      	cmp	r5, r9
 80012bc:	d2ab      	bcs.n	8001216 <__udivmoddi4+0x1f2>
 80012be:	ebb9 0802 	subs.w	r8, r9, r2
 80012c2:	eb63 0e0c 	sbc.w	lr, r3, ip
 80012c6:	3801      	subs	r0, #1
 80012c8:	e7a5      	b.n	8001216 <__udivmoddi4+0x1f2>
 80012ca:	4641      	mov	r1, r8
 80012cc:	e7ea      	b.n	80012a4 <__udivmoddi4+0x280>
 80012ce:	4603      	mov	r3, r0
 80012d0:	e796      	b.n	8001200 <__udivmoddi4+0x1dc>
 80012d2:	4645      	mov	r5, r8
 80012d4:	e7d1      	b.n	800127a <__udivmoddi4+0x256>
 80012d6:	46d0      	mov	r8, sl
 80012d8:	e77d      	b.n	80011d6 <__udivmoddi4+0x1b2>
 80012da:	4464      	add	r4, ip
 80012dc:	3802      	subs	r0, #2
 80012de:	e749      	b.n	8001174 <__udivmoddi4+0x150>
 80012e0:	3d02      	subs	r5, #2
 80012e2:	4462      	add	r2, ip
 80012e4:	e731      	b.n	800114a <__udivmoddi4+0x126>
 80012e6:	4608      	mov	r0, r1
 80012e8:	e70a      	b.n	8001100 <__udivmoddi4+0xdc>
 80012ea:	4631      	mov	r1, r6
 80012ec:	e6ed      	b.n	80010ca <__udivmoddi4+0xa6>
 80012ee:	bf00      	nop

080012f0 <RemoteConfig::HandleList()>:
 80012f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80012f4:	6801      	ldr	r1, [r0, #0]
 80012f6:	4604      	mov	r4, r0
 80012f8:	2012      	movs	r0, #18
 80012fa:	f04f 080c 	mov.w	r8, #12
 80012fe:	4a29      	ldr	r2, [pc, #164]	; (80013a4 <RemoteConfig::HandleList()+0xb4>)
 8001300:	4b29      	ldr	r3, [pc, #164]	; (80013a8 <RemoteConfig::HandleList()+0xb8>)
 8001302:	fb00 2201 	mla	r2, r0, r1, r2
 8001306:	6860      	ldr	r0, [r4, #4]
 8001308:	4928      	ldr	r1, [pc, #160]	; (80013ac <RemoteConfig::HandleList()+0xbc>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	fb08 1100 	mla	r1, r8, r0, r1
 8001310:	4e27      	ldr	r6, [pc, #156]	; (80013b0 <RemoteConfig::HandleList()+0xc0>)
 8001312:	4828      	ldr	r0, [pc, #160]	; (80013b4 <RemoteConfig::HandleList()+0xc4>)
 8001314:	695f      	ldr	r7, [r3, #20]
 8001316:	6835      	ldr	r5, [r6, #0]
 8001318:	f890 9009 	ldrb.w	r9, [r0, #9]
 800131c:	b2fb      	uxtb	r3, r7
 800131e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8001322:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8001326:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800132a:	b089      	sub	sp, #36	; 0x24
 800132c:	3507      	adds	r5, #7
 800132e:	0e3f      	lsrs	r7, r7, #24
 8001330:	f1b9 0f00 	cmp.w	r9, #0
 8001334:	d01d      	beq.n	8001372 <RemoteConfig::HandleList()+0x82>
 8001336:	3009      	adds	r0, #9
 8001338:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800133c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8001340:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8001344:	4628      	mov	r0, r5
 8001346:	e9cd e701 	strd	lr, r7, [sp, #4]
 800134a:	4a1b      	ldr	r2, [pc, #108]	; (80013b8 <RemoteConfig::HandleList()+0xc8>)
 800134c:	f8cd c000 	str.w	ip, [sp]
 8001350:	f7ff fe40 	bl	8000fd4 <snprintf>
 8001354:	8ba3      	ldrh	r3, [r4, #28]
 8001356:	2b05      	cmp	r3, #5
 8001358:	d118      	bne.n	800138c <RemoteConfig::HandleList()+0x9c>
 800135a:	f642 1305 	movw	r3, #10501	; 0x2905
 800135e:	9300      	str	r3, [sp, #0]
 8001360:	69a3      	ldr	r3, [r4, #24]
 8001362:	b282      	uxth	r2, r0
 8001364:	4629      	mov	r1, r5
 8001366:	7d20      	ldrb	r0, [r4, #20]
 8001368:	f001 ff28 	bl	80031bc <udp_send>
 800136c:	b009      	add	sp, #36	; 0x24
 800136e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001372:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8001376:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800137a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800137e:	4628      	mov	r0, r5
 8001380:	e9cd ce00 	strd	ip, lr, [sp]
 8001384:	4a0d      	ldr	r2, [pc, #52]	; (80013bc <RemoteConfig::HandleList()+0xcc>)
 8001386:	f7ff fe25 	bl	8000fd4 <snprintf>
 800138a:	e7e3      	b.n	8001354 <RemoteConfig::HandleList()+0x64>
 800138c:	2b06      	cmp	r3, #6
 800138e:	d1ed      	bne.n	800136c <RemoteConfig::HandleList()+0x7c>
 8001390:	6833      	ldr	r3, [r6, #0]
 8001392:	799b      	ldrb	r3, [r3, #6]
 8001394:	2b2a      	cmp	r3, #42	; 0x2a
 8001396:	d1e9      	bne.n	800136c <RemoteConfig::HandleList()+0x7c>
 8001398:	f642 1305 	movw	r3, #10501	; 0x2905
 800139c:	9300      	str	r3, [sp, #0]
 800139e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80013a2:	e7de      	b.n	8001362 <RemoteConfig::HandleList()+0x72>
 80013a4:	08006abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp, sp, lr}
 80013a8:	200034d4 	ldrdcs	r3, [r0], -r4
 80013ac:	08006b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp, sp, lr}
 80013b0:	2000008c 	andcs	r0, r0, ip, lsl #1
 80013b4:	20000090 	mulcs	r0, r0, r0
 80013b8:	080069e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, fp, sp, lr}
 80013bc:	080069fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, fp, sp, lr}

080013c0 <RemoteConfig::HandleTftpGet()>:
 80013c0:	8b83      	ldrh	r3, [r0, #28]
 80013c2:	2b05      	cmp	r3, #5
 80013c4:	d11a      	bne.n	80013fc <RemoteConfig::HandleTftpGet()+0x3c>
 80013c6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013c8:	4b0d      	ldr	r3, [pc, #52]	; (8001400 <RemoteConfig::HandleTftpGet()+0x40>)
 80013ca:	f890 102c 	ldrb.w	r1, [r0, #44]	; 0x2c
 80013ce:	4d0d      	ldr	r5, [pc, #52]	; (8001404 <RemoteConfig::HandleTftpGet()+0x44>)
 80013d0:	4a0d      	ldr	r2, [pc, #52]	; (8001408 <RemoteConfig::HandleTftpGet()+0x48>)
 80013d2:	4604      	mov	r4, r0
 80013d4:	2900      	cmp	r1, #0
 80013d6:	bf08      	it	eq
 80013d8:	4613      	moveq	r3, r2
 80013da:	6828      	ldr	r0, [r5, #0]
 80013dc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80013e0:	4a0a      	ldr	r2, [pc, #40]	; (800140c <RemoteConfig::HandleTftpGet()+0x4c>)
 80013e2:	f7ff fdf7 	bl	8000fd4 <snprintf>
 80013e6:	f642 1305 	movw	r3, #10501	; 0x2905
 80013ea:	9300      	str	r3, [sp, #0]
 80013ec:	b282      	uxth	r2, r0
 80013ee:	69a3      	ldr	r3, [r4, #24]
 80013f0:	6829      	ldr	r1, [r5, #0]
 80013f2:	7d20      	ldrb	r0, [r4, #20]
 80013f4:	f001 fee2 	bl	80031bc <udp_send>
 80013f8:	b003      	add	sp, #12
 80013fa:	bd30      	pop	{r4, r5, pc}
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	08006a4a 	stmdaeq	r0, {r1, r3, r6, r9, fp, sp, lr}
 8001404:	2000008c 	andcs	r0, r0, ip, lsl #1
 8001408:	08006a71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, sp, lr}
 800140c:	08006a11 	stmdaeq	r0, {r0, r4, r9, fp, sp, lr}

08001410 <RemoteConfig::HandleVersion()>:
 8001410:	8b83      	ldrh	r3, [r0, #28]
 8001412:	2b08      	cmp	r3, #8
 8001414:	d114      	bne.n	8001440 <RemoteConfig::HandleVersion()+0x30>
 8001416:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001418:	4d0a      	ldr	r5, [pc, #40]	; (8001444 <RemoteConfig::HandleVersion()+0x34>)
 800141a:	4604      	mov	r4, r0
 800141c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8001420:	4b09      	ldr	r3, [pc, #36]	; (8001448 <RemoteConfig::HandleVersion()+0x38>)
 8001422:	4a0a      	ldr	r2, [pc, #40]	; (800144c <RemoteConfig::HandleVersion()+0x3c>)
 8001424:	6828      	ldr	r0, [r5, #0]
 8001426:	f7ff fdd5 	bl	8000fd4 <snprintf>
 800142a:	f642 1305 	movw	r3, #10501	; 0x2905
 800142e:	9300      	str	r3, [sp, #0]
 8001430:	b282      	uxth	r2, r0
 8001432:	69a3      	ldr	r3, [r4, #24]
 8001434:	6829      	ldr	r1, [r5, #0]
 8001436:	7d20      	ldrb	r0, [r4, #20]
 8001438:	f001 fec0 	bl	80031bc <udp_send>
 800143c:	b003      	add	sp, #12
 800143e:	bd30      	pop	{r4, r5, pc}
 8001440:	4770      	bx	lr
 8001442:	bf00      	nop
 8001444:	2000008c 	andcs	r0, r0, ip, lsl #1
 8001448:	200039a0 	andcs	r3, r0, r0, lsr #19
 800144c:	08006a1a 	stmdaeq	r0, {r1, r3, r4, r9, fp, sp, lr}

08001450 <RemoteConfig::HandleUptime()>:
 8001450:	7bc3      	ldrb	r3, [r0, #15]
 8001452:	b1e3      	cbz	r3, 800148e <RemoteConfig::HandleUptime()+0x3e>
 8001454:	4b0e      	ldr	r3, [pc, #56]	; (8001490 <RemoteConfig::HandleUptime()+0x40>)
 8001456:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001458:	681a      	ldr	r2, [r3, #0]
 800145a:	8b83      	ldrh	r3, [r0, #28]
 800145c:	4604      	mov	r4, r0
 800145e:	2b07      	cmp	r3, #7
 8001460:	d113      	bne.n	800148a <RemoteConfig::HandleUptime()+0x3a>
 8001462:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001466:	4d0b      	ldr	r5, [pc, #44]	; (8001494 <RemoteConfig::HandleUptime()+0x44>)
 8001468:	fbb2 f3f3 	udiv	r3, r2, r3
 800146c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8001470:	4a09      	ldr	r2, [pc, #36]	; (8001498 <RemoteConfig::HandleUptime()+0x48>)
 8001472:	6828      	ldr	r0, [r5, #0]
 8001474:	f7ff fdae 	bl	8000fd4 <snprintf>
 8001478:	f642 1305 	movw	r3, #10501	; 0x2905
 800147c:	9300      	str	r3, [sp, #0]
 800147e:	b282      	uxth	r2, r0
 8001480:	69a3      	ldr	r3, [r4, #24]
 8001482:	6829      	ldr	r1, [r5, #0]
 8001484:	7d20      	ldrb	r0, [r4, #20]
 8001486:	f001 fe99 	bl	80031bc <udp_send>
 800148a:	b003      	add	sp, #12
 800148c:	bd30      	pop	{r4, r5, pc}
 800148e:	4770      	bx	lr
 8001490:	200039fc 	strdcs	r3, [r0], -ip
 8001494:	2000008c 	andcs	r0, r0, ip, lsl #1
 8001498:	08006a25 	stmdaeq	r0, {r0, r2, r5, r9, fp, sp, lr}

0800149c <Display::TextStatus(char const*)>:
 800149c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014a0:	4604      	mov	r4, r0
 80014a2:	6980      	ldr	r0, [r0, #24]
 80014a4:	2800      	cmp	r0, #0
 80014a6:	d032      	beq.n	800150e <Display::TextStatus(char const*)+0x72>
 80014a8:	7947      	ldrb	r7, [r0, #5]
 80014aa:	6803      	ldr	r3, [r0, #0]
 80014ac:	1e7e      	subs	r6, r7, #1
 80014ae:	b2f6      	uxtb	r6, r6
 80014b0:	460d      	mov	r5, r1
 80014b2:	4632      	mov	r2, r6
 80014b4:	2100      	movs	r1, #0
 80014b6:	6a1b      	ldr	r3, [r3, #32]
 80014b8:	f890 9004 	ldrb.w	r9, [r0, #4]
 80014bc:	f04f 0800 	mov.w	r8, #0
 80014c0:	4798      	blx	r3
 80014c2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80014c6:	45c1      	cmp	r9, r8
 80014c8:	69a0      	ldr	r0, [r4, #24]
 80014ca:	d818      	bhi.n	80014fe <Display::TextStatus(char const*)+0x62>
 80014cc:	b120      	cbz	r0, 80014d8 <Display::TextStatus(char const*)+0x3c>
 80014ce:	6803      	ldr	r3, [r0, #0]
 80014d0:	4632      	mov	r2, r6
 80014d2:	2100      	movs	r1, #0
 80014d4:	6a1b      	ldr	r3, [r3, #32]
 80014d6:	4798      	blx	r3
 80014d8:	69a0      	ldr	r0, [r4, #24]
 80014da:	b1c0      	cbz	r0, 800150e <Display::TextStatus(char const*)+0x72>
 80014dc:	2300      	movs	r3, #0
 80014de:	7901      	ldrb	r1, [r0, #4]
 80014e0:	5cea      	ldrb	r2, [r5, r3]
 80014e2:	b11a      	cbz	r2, 80014ec <Display::TextStatus(char const*)+0x50>
 80014e4:	1c5a      	adds	r2, r3, #1
 80014e6:	4299      	cmp	r1, r3
 80014e8:	4613      	mov	r3, r2
 80014ea:	dcf9      	bgt.n	80014e0 <Display::TextStatus(char const*)+0x44>
 80014ec:	6802      	ldr	r2, [r0, #0]
 80014ee:	4639      	mov	r1, r7
 80014f0:	69d4      	ldr	r4, [r2, #28]
 80014f2:	b2db      	uxtb	r3, r3
 80014f4:	462a      	mov	r2, r5
 80014f6:	46a4      	mov	ip, r4
 80014f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014fc:	4760      	bx	ip
 80014fe:	b118      	cbz	r0, 8001508 <Display::TextStatus(char const*)+0x6c>
 8001500:	6803      	ldr	r3, [r0, #0]
 8001502:	2120      	movs	r1, #32
 8001504:	695b      	ldr	r3, [r3, #20]
 8001506:	4798      	blx	r3
 8001508:	f108 0801 	add.w	r8, r8, #1
 800150c:	e7db      	b.n	80014c6 <Display::TextStatus(char const*)+0x2a>
 800150e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8001512:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001514:	4605      	mov	r5, r0
 8001516:	461e      	mov	r6, r3
 8001518:	460f      	mov	r7, r1
 800151a:	4614      	mov	r4, r2
 800151c:	f7ff ffbe 	bl	800149c <Display::TextStatus(char const*)>
 8001520:	7c6b      	ldrb	r3, [r5, #17]
 8001522:	b19b      	cbz	r3, 800154c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8001524:	43e2      	mvns	r2, r4
 8001526:	2312      	movs	r3, #18
 8001528:	7a28      	ldrb	r0, [r5, #8]
 800152a:	f88d 3004 	strb.w	r3, [sp, #4]
 800152e:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8001532:	f88d 3005 	strb.w	r3, [sp, #5]
 8001536:	f88d 2006 	strb.w	r2, [sp, #6]
 800153a:	f004 fbc9 	bl	8005cd0 <gd32_i2c_set_address>
 800153e:	68e8      	ldr	r0, [r5, #12]
 8001540:	f004 fbbe 	bl	8005cc0 <gd32_i2c_set_baudrate>
 8001544:	2103      	movs	r1, #3
 8001546:	a801      	add	r0, sp, #4
 8001548:	f004 fbc8 	bl	8005cdc <gd32_i2c_write>
 800154c:	1c73      	adds	r3, r6, #1
 800154e:	d006      	beq.n	800155e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8001550:	4639      	mov	r1, r7
 8001552:	4630      	mov	r0, r6
 8001554:	b003      	add	sp, #12
 8001556:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800155a:	f002 bf25 	b.w	80043a8 <console_status>
 800155e:	b003      	add	sp, #12
 8001560:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08001564 <RemoteConfig::HandleTftpSet()>:
 8001564:	8b83      	ldrh	r3, [r0, #28]
 8001566:	2b06      	cmp	r3, #6
 8001568:	d172      	bne.n	8001650 <RemoteConfig::HandleTftpSet()+0xec>
 800156a:	b570      	push	{r4, r5, r6, lr}
 800156c:	4b39      	ldr	r3, [pc, #228]	; (8001654 <RemoteConfig::HandleTftpSet()+0xf0>)
 800156e:	4604      	mov	r4, r0
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	799b      	ldrb	r3, [r3, #6]
 8001574:	2b30      	cmp	r3, #48	; 0x30
 8001576:	bf14      	ite	ne
 8001578:	2301      	movne	r3, #1
 800157a:	2300      	moveq	r3, #0
 800157c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8001580:	d02d      	beq.n	80015de <RemoteConfig::HandleTftpSet()+0x7a>
 8001582:	4e35      	ldr	r6, [pc, #212]	; (8001658 <RemoteConfig::HandleTftpSet()+0xf4>)
 8001584:	6835      	ldr	r5, [r6, #0]
 8001586:	69a8      	ldr	r0, [r5, #24]
 8001588:	b9e8      	cbnz	r0, 80015c6 <RemoteConfig::HandleTftpSet()+0x62>
 800158a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800158c:	b9d3      	cbnz	r3, 80015c4 <RemoteConfig::HandleTftpSet()+0x60>
 800158e:	4833      	ldr	r0, [pc, #204]	; (800165c <RemoteConfig::HandleTftpSet()+0xf8>)
 8001590:	f003 f8d2 	bl	8004738 <puts>
 8001594:	f44f 306a 	mov.w	r0, #239616	; 0x3a800
 8001598:	f003 f84c 	bl	8004634 <operator new[](unsigned int)>
 800159c:	62a0      	str	r0, [r4, #40]	; 0x28
 800159e:	f44f 7011 	mov.w	r0, #580	; 0x244
 80015a2:	f003 f845 	bl	8004630 <operator new(unsigned int)>
 80015a6:	f44f 326a 	mov.w	r2, #239616	; 0x3a800
 80015aa:	4605      	mov	r5, r0
 80015ac:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80015ae:	f000 fa8f 	bl	8001ad0 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)>
 80015b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80015b6:	f244 0271 	movw	r2, #16497	; 0x4071
 80015ba:	4929      	ldr	r1, [pc, #164]	; (8001660 <RemoteConfig::HandleTftpSet()+0xfc>)
 80015bc:	6830      	ldr	r0, [r6, #0]
 80015be:	6265      	str	r5, [r4, #36]	; 0x24
 80015c0:	f7ff ffa7 	bl	8001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80015c4:	bd70      	pop	{r4, r5, r6, pc}
 80015c6:	2100      	movs	r1, #0
 80015c8:	6803      	ldr	r3, [r0, #0]
 80015ca:	7429      	strb	r1, [r5, #16]
 80015cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80015ce:	4798      	blx	r3
 80015d0:	4b24      	ldr	r3, [pc, #144]	; (8001664 <RemoteConfig::HandleTftpSet()+0x100>)
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	606b      	str	r3, [r5, #4]
 80015d6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d1d5      	bne.n	800158a <RemoteConfig::HandleTftpSet()+0x26>
 80015de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d0ef      	beq.n	80015c4 <RemoteConfig::HandleTftpSet()+0x60>
 80015e4:	f8d3 223c 	ldr.w	r2, [r3, #572]	; 0x23c
 80015e8:	f893 3240 	ldrb.w	r3, [r3, #576]	; 0x240
 80015ec:	b9f3      	cbnz	r3, 800162c <RemoteConfig::HandleTftpSet()+0xc8>
 80015ee:	2501      	movs	r5, #1
 80015f0:	481d      	ldr	r0, [pc, #116]	; (8001668 <RemoteConfig::HandleTftpSet()+0x104>)
 80015f2:	f003 f8a1 	bl	8004738 <puts>
 80015f6:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80015f8:	b13e      	cbz	r6, 800160a <RemoteConfig::HandleTftpSet()+0xa6>
 80015fa:	4b1c      	ldr	r3, [pc, #112]	; (800166c <RemoteConfig::HandleTftpSet()+0x108>)
 80015fc:	4630      	mov	r0, r6
 80015fe:	6033      	str	r3, [r6, #0]
 8001600:	f001 fecc 	bl	800339c <TFTPDaemon::~TFTPDaemon()>
 8001604:	4630      	mov	r0, r6
 8001606:	f003 f80f 	bl	8004628 <operator delete(void*)>
 800160a:	2600      	movs	r6, #0
 800160c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800160e:	6266      	str	r6, [r4, #36]	; 0x24
 8001610:	b108      	cbz	r0, 8001616 <RemoteConfig::HandleTftpSet()+0xb2>
 8001612:	f003 f80b 	bl	800462c <operator delete[](void*)>
 8001616:	62a6      	str	r6, [r4, #40]	; 0x28
 8001618:	2d00      	cmp	r5, #0
 800161a:	d0d3      	beq.n	80015c4 <RemoteConfig::HandleTftpSet()+0x60>
 800161c:	480e      	ldr	r0, [pc, #56]	; (8001658 <RemoteConfig::HandleTftpSet()+0xf4>)
 800161e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001622:	f248 0271 	movw	r2, #32881	; 0x8071
 8001626:	4912      	ldr	r1, [pc, #72]	; (8001670 <RemoteConfig::HandleTftpSet()+0x10c>)
 8001628:	6800      	ldr	r0, [r0, #0]
 800162a:	e7c9      	b.n	80015c0 <RemoteConfig::HandleTftpSet()+0x5c>
 800162c:	4b11      	ldr	r3, [pc, #68]	; (8001674 <RemoteConfig::HandleTftpSet()+0x110>)
 800162e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8001630:	6818      	ldr	r0, [r3, #0]
 8001632:	f000 fa63 	bl	8001afc <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)>
 8001636:	4605      	mov	r5, r0
 8001638:	2800      	cmp	r0, #0
 800163a:	d1d8      	bne.n	80015ee <RemoteConfig::HandleTftpSet()+0x8a>
 800163c:	4806      	ldr	r0, [pc, #24]	; (8001658 <RemoteConfig::HandleTftpSet()+0xf4>)
 800163e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001642:	f247 1279 	movw	r2, #29049	; 0x7179
 8001646:	490c      	ldr	r1, [pc, #48]	; (8001678 <RemoteConfig::HandleTftpSet()+0x114>)
 8001648:	6800      	ldr	r0, [r0, #0]
 800164a:	f7ff ff62 	bl	8001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800164e:	e7cf      	b.n	80015f0 <RemoteConfig::HandleTftpSet()+0x8c>
 8001650:	4770      	bx	lr
 8001652:	bf00      	nop
 8001654:	2000008c 	andcs	r0, r0, ip, lsl #1
 8001658:	200010e0 	andcs	r1, r0, r0, ror #1
 800165c:	08006a32 	stmdaeq	r0, {r1, r4, r5, r9, fp, sp, lr}
 8001660:	08006a45 	stmdaeq	r0, {r0, r2, r6, r9, fp, sp, lr}
 8001664:	200039fc 	strdcs	r3, [r0], -ip
 8001668:	08006a59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp, sp, lr}
 800166c:	08006cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, sp, lr}
 8001670:	08006a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, sp, lr}
 8001674:	200000b8 	strhcs	r0, [r0], -r8
 8001678:	08006a4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, fp, sp, lr}

0800167c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800167c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001680:	2500      	movs	r5, #0
 8001682:	461f      	mov	r7, r3
 8001684:	6083      	str	r3, [r0, #8]
 8001686:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800168a:	4690      	mov	r8, r2
 800168c:	4689      	mov	r9, r1
 800168e:	4e13      	ldr	r6, [pc, #76]	; (80016dc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>)
 8001690:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8001694:	f8df a048 	ldr.w	sl, [pc, #72]	; 80016e0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>
 8001698:	4b12      	ldr	r3, [pc, #72]	; (80016e4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>)
 800169a:	e9c0 1200 	strd	r1, r2, [r0]
 800169e:	4604      	mov	r4, r0
 80016a0:	6018      	str	r0, [r3, #0]
 80016a2:	4631      	mov	r1, r6
 80016a4:	e9c0 5508 	strd	r5, r5, [r0, #32]
 80016a8:	60c5      	str	r5, [r0, #12]
 80016aa:	8205      	strh	r5, [r0, #16]
 80016ac:	8385      	strh	r5, [r0, #28]
 80016ae:	6285      	str	r5, [r0, #40]	; 0x28
 80016b0:	f880 502c 	strb.w	r5, [r0, #44]	; 0x2c
 80016b4:	f8da 0000 	ldr.w	r0, [sl]
 80016b8:	f002 f879 	bl	80037ae <Network::MacAddressCopyTo(unsigned char*)>
 80016bc:	f642 1105 	movw	r1, #10501	; 0x2905
 80016c0:	f8da 0000 	ldr.w	r0, [sl]
 80016c4:	f886 9006 	strb.w	r9, [r6, #6]
 80016c8:	f886 8007 	strb.w	r8, [r6, #7]
 80016cc:	7237      	strb	r7, [r6, #8]
 80016ce:	7275      	strb	r5, [r6, #9]
 80016d0:	f002 f867 	bl	80037a2 <Network::Begin(unsigned short)>
 80016d4:	6160      	str	r0, [r4, #20]
 80016d6:	4620      	mov	r0, r4
 80016d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80016dc:	20000090 	mulcs	r0, r0, r0
 80016e0:	200034d4 	ldrdcs	r3, [r0], -r4
 80016e4:	200000b4 	strhcs	r0, [r0], -r4

080016e8 <RemoteConfig::SetDisable(bool)>:
 80016e8:	b538      	push	{r3, r4, r5, lr}
 80016ea:	4604      	mov	r4, r0
 80016ec:	7b03      	ldrb	r3, [r0, #12]
 80016ee:	b161      	cbz	r1, 800170a <RemoteConfig::SetDisable(bool)+0x22>
 80016f0:	b953      	cbnz	r3, 8001708 <RemoteConfig::SetDisable(bool)+0x20>
 80016f2:	4b0c      	ldr	r3, [pc, #48]	; (8001724 <RemoteConfig::SetDisable(bool)+0x3c>)
 80016f4:	f642 1105 	movw	r1, #10501	; 0x2905
 80016f8:	6818      	ldr	r0, [r3, #0]
 80016fa:	f002 f855 	bl	80037a8 <Network::End(unsigned short)>
 80016fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001702:	6163      	str	r3, [r4, #20]
 8001704:	2301      	movs	r3, #1
 8001706:	7323      	strb	r3, [r4, #12]
 8001708:	bd38      	pop	{r3, r4, r5, pc}
 800170a:	2b00      	cmp	r3, #0
 800170c:	d0fc      	beq.n	8001708 <RemoteConfig::SetDisable(bool)+0x20>
 800170e:	4b05      	ldr	r3, [pc, #20]	; (8001724 <RemoteConfig::SetDisable(bool)+0x3c>)
 8001710:	460d      	mov	r5, r1
 8001712:	6818      	ldr	r0, [r3, #0]
 8001714:	f642 1105 	movw	r1, #10501	; 0x2905
 8001718:	f002 f843 	bl	80037a2 <Network::Begin(unsigned short)>
 800171c:	7325      	strb	r5, [r4, #12]
 800171e:	6160      	str	r0, [r4, #20]
 8001720:	e7f2      	b.n	8001708 <RemoteConfig::SetDisable(bool)+0x20>
 8001722:	bf00      	nop
 8001724:	200034d4 	ldrdcs	r3, [r0], -r4

08001728 <RemoteConfig::SetDisplayName(char const*)>:
 8001728:	2217      	movs	r2, #23
 800172a:	4809      	ldr	r0, [pc, #36]	; (8001750 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800172c:	b508      	push	{r3, lr}
 800172e:	1e4b      	subs	r3, r1, #1
 8001730:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8001734:	b911      	cbnz	r1, 800173c <RemoteConfig::SetDisplayName(char const*)+0x14>
 8001736:	f002 ffde 	bl	80046f6 <memset>
 800173a:	e003      	b.n	8001744 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800173c:	3a01      	subs	r2, #1
 800173e:	f800 1b01 	strb.w	r1, [r0], #1
 8001742:	d1f5      	bne.n	8001730 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8001744:	2200      	movs	r2, #0
 8001746:	4b03      	ldr	r3, [pc, #12]	; (8001754 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8001748:	f883 2020 	strb.w	r2, [r3, #32]
 800174c:	bd08      	pop	{r3, pc}
 800174e:	bf00      	nop
 8001750:	20000099 	mulcs	r0, r9, r0
 8001754:	20000090 	mulcs	r0, r0, r0

08001758 <RemoteConfig::Run()>:
 8001758:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800175c:	7b03      	ldrb	r3, [r0, #12]
 800175e:	2b00      	cmp	r3, #0
 8001760:	d14b      	bne.n	80017fa <RemoteConfig::Run()+0xa2>
 8001762:	4604      	mov	r4, r0
 8001764:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8001766:	b108      	cbz	r0, 800176c <RemoteConfig::Run()+0x14>
 8001768:	f001 ff7a 	bl	8003660 <TFTPDaemon::Run()>
 800176c:	4d3b      	ldr	r5, [pc, #236]	; (800185c <RemoteConfig::Run()+0x104>)
 800176e:	7d20      	ldrb	r0, [r4, #20]
 8001770:	4629      	mov	r1, r5
 8001772:	f10d 030e 	add.w	r3, sp, #14
 8001776:	f104 0218 	add.w	r2, r4, #24
 800177a:	f001 fcf9 	bl	8003170 <udp_recv2>
 800177e:	2803      	cmp	r0, #3
 8001780:	83a0      	strh	r0, [r4, #28]
 8001782:	d93a      	bls.n	80017fa <RemoteConfig::Run()+0xa2>
 8001784:	682b      	ldr	r3, [r5, #0]
 8001786:	181a      	adds	r2, r3, r0
 8001788:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800178c:	2a0a      	cmp	r2, #10
 800178e:	bf04      	itt	eq
 8001790:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 8001794:	83a0      	strheq	r0, [r4, #28]
 8001796:	781a      	ldrb	r2, [r3, #0]
 8001798:	2a3f      	cmp	r2, #63	; 0x3f
 800179a:	d13b      	bne.n	8001814 <RemoteConfig::Run()+0xbc>
 800179c:	4830      	ldr	r0, [pc, #192]	; (8001860 <RemoteConfig::Run()+0x108>)
 800179e:	2200      	movs	r2, #0
 80017a0:	4684      	mov	ip, r0
 80017a2:	8ba1      	ldrh	r1, [r4, #28]
 80017a4:	3901      	subs	r1, #1
 80017a6:	b289      	uxth	r1, r1
 80017a8:	83a1      	strh	r1, [r4, #28]
 80017aa:	7b86      	ldrb	r6, [r0, #14]
 80017ac:	8985      	ldrh	r5, [r0, #12]
 80017ae:	b186      	cbz	r6, 80017d2 <RemoteConfig::Run()+0x7a>
 80017b0:	42a9      	cmp	r1, r5
 80017b2:	d810      	bhi.n	80017d6 <RemoteConfig::Run()+0x7e>
 80017b4:	3201      	adds	r2, #1
 80017b6:	2a07      	cmp	r2, #7
 80017b8:	f100 0010 	add.w	r0, r0, #16
 80017bc:	d1f5      	bne.n	80017aa <RemoteConfig::Run()+0x52>
 80017be:	f642 1305 	movw	r3, #10501	; 0x2905
 80017c2:	2208      	movs	r2, #8
 80017c4:	9300      	str	r3, [sp, #0]
 80017c6:	69a3      	ldr	r3, [r4, #24]
 80017c8:	4926      	ldr	r1, [pc, #152]	; (8001864 <RemoteConfig::Run()+0x10c>)
 80017ca:	7d20      	ldrb	r0, [r4, #20]
 80017cc:	f001 fcf6 	bl	80031bc <udp_send>
 80017d0:	e013      	b.n	80017fa <RemoteConfig::Run()+0xa2>
 80017d2:	42a9      	cmp	r1, r5
 80017d4:	d1ee      	bne.n	80017b4 <RemoteConfig::Run()+0x5c>
 80017d6:	461f      	mov	r7, r3
 80017d8:	6886      	ldr	r6, [r0, #8]
 80017da:	441d      	add	r5, r3
 80017dc:	3e01      	subs	r6, #1
 80017de:	42af      	cmp	r7, r5
 80017e0:	d10e      	bne.n	8001800 <RemoteConfig::Run()+0xa8>
 80017e2:	0113      	lsls	r3, r2, #4
 80017e4:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 80017e8:	6852      	ldr	r2, [r2, #4]
 80017ea:	f85c 3003 	ldr.w	r3, [ip, r3]
 80017ee:	1051      	asrs	r1, r2, #1
 80017f0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80017f4:	07d2      	lsls	r2, r2, #31
 80017f6:	d40a      	bmi.n	800180e <RemoteConfig::Run()+0xb6>
 80017f8:	4798      	blx	r3
 80017fa:	b004      	add	sp, #16
 80017fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001800:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 8001804:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8001808:	45f0      	cmp	r8, lr
 800180a:	d0e8      	beq.n	80017de <RemoteConfig::Run()+0x86>
 800180c:	e7d2      	b.n	80017b4 <RemoteConfig::Run()+0x5c>
 800180e:	5862      	ldr	r2, [r4, r1]
 8001810:	58d3      	ldr	r3, [r2, r3]
 8001812:	e7f1      	b.n	80017f8 <RemoteConfig::Run()+0xa0>
 8001814:	7b61      	ldrb	r1, [r4, #13]
 8001816:	2900      	cmp	r1, #0
 8001818:	d1ef      	bne.n	80017fa <RemoteConfig::Run()+0xa2>
 800181a:	2a23      	cmp	r2, #35	; 0x23
 800181c:	d101      	bne.n	8001822 <RemoteConfig::Run()+0xca>
 800181e:	6221      	str	r1, [r4, #32]
 8001820:	e7eb      	b.n	80017fa <RemoteConfig::Run()+0xa2>
 8001822:	2a21      	cmp	r2, #33	; 0x21
 8001824:	d1e9      	bne.n	80017fa <RemoteConfig::Run()+0xa2>
 8001826:	8ba2      	ldrh	r2, [r4, #28]
 8001828:	3a01      	subs	r2, #1
 800182a:	b292      	uxth	r2, r2
 800182c:	2a05      	cmp	r2, #5
 800182e:	83a2      	strh	r2, [r4, #28]
 8001830:	d90d      	bls.n	800184e <RemoteConfig::Run()+0xf6>
 8001832:	4a0d      	ldr	r2, [pc, #52]	; (8001868 <RemoteConfig::Run()+0x110>)
 8001834:	1d59      	adds	r1, r3, #5
 8001836:	4299      	cmp	r1, r3
 8001838:	d103      	bne.n	8001842 <RemoteConfig::Run()+0xea>
 800183a:	4620      	mov	r0, r4
 800183c:	f7ff fe92 	bl	8001564 <RemoteConfig::HandleTftpSet()>
 8001840:	e7db      	b.n	80017fa <RemoteConfig::Run()+0xa2>
 8001842:	f812 0b01 	ldrb.w	r0, [r2], #1
 8001846:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800184a:	4285      	cmp	r5, r0
 800184c:	d0f3      	beq.n	8001836 <RemoteConfig::Run()+0xde>
 800184e:	f642 1305 	movw	r3, #10501	; 0x2905
 8001852:	9300      	str	r3, [sp, #0]
 8001854:	2208      	movs	r2, #8
 8001856:	69a3      	ldr	r3, [r4, #24]
 8001858:	4904      	ldr	r1, [pc, #16]	; (800186c <RemoteConfig::Run()+0x114>)
 800185a:	e7b6      	b.n	80017ca <RemoteConfig::Run()+0x72>
 800185c:	2000008c 	andcs	r0, r0, ip, lsl #1
 8001860:	08006c04 	stmdaeq	r0, {r2, sl, fp, sp, lr}
 8001864:	08006a7b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r9, fp, sp, lr}
 8001868:	08006a75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, fp, sp, lr}
 800186c:	08006a84 	stmdaeq	r0, {r2, r7, r9, fp, sp, lr}

08001870 <RemoteConfig::TftpExit()>:
 8001870:	2306      	movs	r3, #6
 8001872:	2230      	movs	r2, #48	; 0x30
 8001874:	8383      	strh	r3, [r0, #28]
 8001876:	4b02      	ldr	r3, [pc, #8]	; (8001880 <RemoteConfig::TftpExit()+0x10>)
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	719a      	strb	r2, [r3, #6]
 800187c:	f7ff be72 	b.w	8001564 <RemoteConfig::HandleTftpSet()>
 8001880:	2000008c 	andcs	r0, r0, ip, lsl #1

08001884 <RemoteConfig::HandleFactory()>:
 8001884:	b538      	push	{r3, r4, r5, lr}
 8001886:	2400      	movs	r4, #0
 8001888:	4d04      	ldr	r5, [pc, #16]	; (800189c <RemoteConfig::HandleFactory()+0x18>)
 800188a:	4621      	mov	r1, r4
 800188c:	6828      	ldr	r0, [r5, #0]
 800188e:	3401      	adds	r4, #1
 8001890:	f000 facc 	bl	8001e2c <ConfigStore::ResetSetList(configstore::Store)>
 8001894:	2c1c      	cmp	r4, #28
 8001896:	d1f8      	bne.n	800188a <RemoteConfig::HandleFactory()+0x6>
 8001898:	bd38      	pop	{r3, r4, r5, pc}
 800189a:	bf00      	nop
 800189c:	200010d0 	ldrdcs	r1, [r0], -r0

080018a0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 80018a0:	b510      	push	{r4, lr}
 80018a2:	4604      	mov	r4, r0
 80018a4:	2220      	movs	r2, #32
 80018a6:	f840 1b04 	str.w	r1, [r0], #4
 80018aa:	2100      	movs	r1, #0
 80018ac:	f002 ff23 	bl	80046f6 <memset>
 80018b0:	4620      	mov	r0, r4
 80018b2:	bd10      	pop	{r4, pc}

080018b4 <RemoteConfigParams::Load()>:
 80018b4:	b508      	push	{r3, lr}
 80018b6:	2300      	movs	r3, #0
 80018b8:	4601      	mov	r1, r0
 80018ba:	6043      	str	r3, [r0, #4]
 80018bc:	6800      	ldr	r0, [r0, #0]
 80018be:	b120      	cbz	r0, 80018ca <RemoteConfigParams::Load()+0x16>
 80018c0:	6803      	ldr	r3, [r0, #0]
 80018c2:	3104      	adds	r1, #4
 80018c4:	68db      	ldr	r3, [r3, #12]
 80018c6:	4798      	blx	r3
 80018c8:	2001      	movs	r0, #1
 80018ca:	bd08      	pop	{r3, pc}

080018cc <RemoteConfigParams::Set(RemoteConfig*)>:
 80018cc:	b538      	push	{r3, r4, r5, lr}
 80018ce:	460c      	mov	r4, r1
 80018d0:	4605      	mov	r5, r0
 80018d2:	6841      	ldr	r1, [r0, #4]
 80018d4:	4620      	mov	r0, r4
 80018d6:	f001 0101 	and.w	r1, r1, #1
 80018da:	f7ff ff05 	bl	80016e8 <RemoteConfig::SetDisable(bool)>
 80018de:	686b      	ldr	r3, [r5, #4]
 80018e0:	f3c3 0240 	ubfx	r2, r3, #1, #1
 80018e4:	7362      	strb	r2, [r4, #13]
 80018e6:	f3c3 0280 	ubfx	r2, r3, #2, #1
 80018ea:	73a2      	strb	r2, [r4, #14]
 80018ec:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 80018f0:	73e2      	strb	r2, [r4, #15]
 80018f2:	f3c3 1240 	ubfx	r2, r3, #5, #1
 80018f6:	06db      	lsls	r3, r3, #27
 80018f8:	7422      	strb	r2, [r4, #16]
 80018fa:	d506      	bpl.n	800190a <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 80018fc:	4620      	mov	r0, r4
 80018fe:	f105 010c 	add.w	r1, r5, #12
 8001902:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001906:	f7ff bf0f 	b.w	8001728 <RemoteConfig::SetDisplayName(char const*)>
 800190a:	bd38      	pop	{r3, r4, r5, pc}

0800190c <RemoteConfig::HandleReboot()>:
 800190c:	7b83      	ldrb	r3, [r0, #14]
 800190e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001910:	2b00      	cmp	r3, #0
 8001912:	d03c      	beq.n	800198e <RemoteConfig::HandleReboot()+0x82>
 8001914:	2301      	movs	r3, #1
 8001916:	4c1f      	ldr	r4, [pc, #124]	; (8001994 <RemoteConfig::HandleReboot()+0x88>)
 8001918:	7443      	strb	r3, [r0, #17]
 800191a:	6825      	ldr	r5, [r4, #0]
 800191c:	69a8      	ldr	r0, [r5, #24]
 800191e:	b138      	cbz	r0, 8001930 <RemoteConfig::HandleReboot()+0x24>
 8001920:	2100      	movs	r1, #0
 8001922:	6803      	ldr	r3, [r0, #0]
 8001924:	7429      	strb	r1, [r5, #16]
 8001926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001928:	4798      	blx	r3
 800192a:	4b1b      	ldr	r3, [pc, #108]	; (8001998 <RemoteConfig::HandleReboot()+0x8c>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	606b      	str	r3, [r5, #4]
 8001930:	4d1a      	ldr	r5, [pc, #104]	; (800199c <RemoteConfig::HandleReboot()+0x90>)
 8001932:	6828      	ldr	r0, [r5, #0]
 8001934:	f000 fafe 	bl	8001f34 <ConfigStore::Flash()>
 8001938:	2800      	cmp	r0, #0
 800193a:	d1fa      	bne.n	8001932 <RemoteConfig::HandleReboot()+0x26>
 800193c:	4b18      	ldr	r3, [pc, #96]	; (80019a0 <RemoteConfig::HandleReboot()+0x94>)
 800193e:	6818      	ldr	r0, [r3, #0]
 8001940:	f001 ff28 	bl	8003794 <Network::Shutdown()>
 8001944:	4817      	ldr	r0, [pc, #92]	; (80019a4 <RemoteConfig::HandleReboot()+0x98>)
 8001946:	f7ff fb35 	bl	8000fb4 <printf>
 800194a:	6823      	ldr	r3, [r4, #0]
 800194c:	6998      	ldr	r0, [r3, #24]
 800194e:	b110      	cbz	r0, 8001956 <RemoteConfig::HandleReboot()+0x4a>
 8001950:	6803      	ldr	r3, [r0, #0]
 8001952:	68db      	ldr	r3, [r3, #12]
 8001954:	4798      	blx	r3
 8001956:	6824      	ldr	r4, [r4, #0]
 8001958:	4913      	ldr	r1, [pc, #76]	; (80019a8 <RemoteConfig::HandleReboot()+0x9c>)
 800195a:	4620      	mov	r0, r4
 800195c:	f7ff fd9e 	bl	800149c <Display::TextStatus(char const*)>
 8001960:	7c63      	ldrb	r3, [r4, #17]
 8001962:	b183      	cbz	r3, 8001986 <RemoteConfig::HandleReboot()+0x7a>
 8001964:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8001968:	f8ad 3004 	strh.w	r3, [sp, #4]
 800196c:	23bf      	movs	r3, #191	; 0xbf
 800196e:	7a20      	ldrb	r0, [r4, #8]
 8001970:	f88d 3006 	strb.w	r3, [sp, #6]
 8001974:	f004 f9ac 	bl	8005cd0 <gd32_i2c_set_address>
 8001978:	68e0      	ldr	r0, [r4, #12]
 800197a:	f004 f9a1 	bl	8005cc0 <gd32_i2c_set_baudrate>
 800197e:	2103      	movs	r1, #3
 8001980:	a801      	add	r0, sp, #4
 8001982:	f004 f9ab 	bl	8005cdc <gd32_i2c_write>
 8001986:	4b09      	ldr	r3, [pc, #36]	; (80019ac <RemoteConfig::HandleReboot()+0xa0>)
 8001988:	6818      	ldr	r0, [r3, #0]
 800198a:	f002 fe11 	bl	80045b0 <Hardware::Reboot()>
 800198e:	b003      	add	sp, #12
 8001990:	bd30      	pop	{r4, r5, pc}
 8001992:	bf00      	nop
 8001994:	200010e0 	andcs	r1, r0, r0, ror #1
 8001998:	200039fc 	strdcs	r3, [r0], -ip
 800199c:	200010d0 	ldrdcs	r1, [r0], -r0
 80019a0:	200034d4 	ldrdcs	r3, [r0], -r4
 80019a4:	08006c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp, sp, lr}
 80019a8:	08006c83 	stmdaeq	r0, {r0, r1, r7, sl, fp, sp, lr}
 80019ac:	200039e8 	andcs	r3, r0, r8, ror #19

080019b0 <TFTPFileServer::FileOpen(char const*, TFTPMode)>:
 80019b0:	2000      	movs	r0, #0
 80019b2:	4770      	bx	lr

080019b4 <TFTPFileServer::FileRead(void*, unsigned int, unsigned int)>:
 80019b4:	2000      	movs	r0, #0
 80019b6:	4770      	bx	lr

080019b8 <TFTPFileServer::Exit()>:
 80019b8:	4b01      	ldr	r3, [pc, #4]	; (80019c0 <TFTPFileServer::Exit()+0x8>)
 80019ba:	6818      	ldr	r0, [r3, #0]
 80019bc:	f7ff bf58 	b.w	8001870 <RemoteConfig::TftpExit()>
 80019c0:	200000b4 	strhcs	r0, [r0], -r4

080019c4 <TFTPFileServer::~TFTPFileServer()>:
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4604      	mov	r4, r0
 80019c8:	4b02      	ldr	r3, [pc, #8]	; (80019d4 <TFTPFileServer::~TFTPFileServer()+0x10>)
 80019ca:	6003      	str	r3, [r0, #0]
 80019cc:	f001 fce6 	bl	800339c <TFTPDaemon::~TFTPDaemon()>
 80019d0:	4620      	mov	r0, r4
 80019d2:	bd10      	pop	{r4, pc}
 80019d4:	08006cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, sp, lr}

080019d8 <TFTPFileServer::~TFTPFileServer()>:
 80019d8:	b510      	push	{r4, lr}
 80019da:	4604      	mov	r4, r0
 80019dc:	f7ff fff2 	bl	80019c4 <TFTPFileServer::~TFTPFileServer()>
 80019e0:	4620      	mov	r0, r4
 80019e2:	f002 fe21 	bl	8004628 <operator delete(void*)>
 80019e6:	4620      	mov	r0, r4
 80019e8:	bd10      	pop	{r4, pc}

080019ea <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)>:
 80019ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ec:	461d      	mov	r5, r3
 80019ee:	f8d0 3238 	ldr.w	r3, [r0, #568]	; 0x238
 80019f2:	4606      	mov	r6, r0
 80019f4:	ebb5 2f53 	cmp.w	r5, r3, lsr #9
 80019f8:	460f      	mov	r7, r1
 80019fa:	4614      	mov	r4, r2
 80019fc:	d904      	bls.n	8001a08 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x1e>
 80019fe:	2400      	movs	r4, #0
 8001a00:	f8c0 423c 	str.w	r4, [r0, #572]	; 0x23c
 8001a04:	4620      	mov	r0, r4
 8001a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001a08:	2d01      	cmp	r5, #1
 8001a0a:	d00f      	beq.n	8001a2c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x42>
 8001a0c:	f46f 7300 	mvn.w	r3, #512	; 0x200
 8001a10:	026d      	lsls	r5, r5, #9
 8001a12:	441d      	add	r5, r3
 8001a14:	f8d6 3234 	ldr.w	r3, [r6, #564]	; 0x234
 8001a18:	193a      	adds	r2, r7, r4
 8001a1a:	442b      	add	r3, r5
 8001a1c:	42ba      	cmp	r2, r7
 8001a1e:	d10c      	bne.n	8001a3a <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x50>
 8001a20:	f8d6 323c 	ldr.w	r3, [r6, #572]	; 0x23c
 8001a24:	4423      	add	r3, r4
 8001a26:	f8c6 323c 	str.w	r3, [r6, #572]	; 0x23c
 8001a2a:	e7eb      	b.n	8001a04 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x1a>
 8001a2c:	4608      	mov	r0, r1
 8001a2e:	f000 f863 	bl	8001af8 <tftpfileserver::is_valid(void const*)>
 8001a32:	2800      	cmp	r0, #0
 8001a34:	d1ea      	bne.n	8001a0c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x22>
 8001a36:	4604      	mov	r4, r0
 8001a38:	e7e4      	b.n	8001a04 <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x1a>
 8001a3a:	f817 1b01 	ldrb.w	r1, [r7], #1
 8001a3e:	f803 1f01 	strb.w	r1, [r3, #1]!
 8001a42:	e7eb      	b.n	8001a1c <TFTPFileServer::FileWrite(void const*, unsigned int, unsigned int)+0x32>

08001a44 <TFTPFileServer::FileClose()>:
 8001a44:	b538      	push	{r3, r4, r5, lr}
 8001a46:	2401      	movs	r4, #1
 8001a48:	f880 4240 	strb.w	r4, [r0, #576]	; 0x240
 8001a4c:	4807      	ldr	r0, [pc, #28]	; (8001a6c <TFTPFileServer::FileClose()+0x28>)
 8001a4e:	f7ff fab1 	bl	8000fb4 <printf>
 8001a52:	4b07      	ldr	r3, [pc, #28]	; (8001a70 <TFTPFileServer::FileClose()+0x2c>)
 8001a54:	4907      	ldr	r1, [pc, #28]	; (8001a74 <TFTPFileServer::FileClose()+0x30>)
 8001a56:	681d      	ldr	r5, [r3, #0]
 8001a58:	4628      	mov	r0, r5
 8001a5a:	f7ff fd1f 	bl	800149c <Display::TextStatus(char const*)>
 8001a5e:	4628      	mov	r0, r5
 8001a60:	f645 3171 	movw	r1, #23409	; 0x5b71
 8001a64:	f7fe ffec 	bl	8000a40 <Display::Status(Display7SegmentMessage)>
 8001a68:	4620      	mov	r0, r4
 8001a6a:	bd38      	pop	{r3, r4, r5, pc}
 8001a6c:	08006c91 	stmdaeq	r0, {r0, r4, r7, sl, fp, sp, lr}
 8001a70:	200010e0 	andcs	r1, r0, r0, ror #1
 8001a74:	08006c9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, sp, lr}

08001a78 <TFTPFileServer::FileCreate(char const*, TFTPMode)>:
 8001a78:	b538      	push	{r3, r4, r5, lr}
 8001a7a:	4604      	mov	r4, r0
 8001a7c:	b9f2      	cbnz	r2, 8001abc <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x44>
 8001a7e:	4a10      	ldr	r2, [pc, #64]	; (8001ac0 <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x48>)
 8001a80:	1e4b      	subs	r3, r1, #1
 8001a82:	310b      	adds	r1, #11
 8001a84:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001a88:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8001a8c:	42a8      	cmp	r0, r5
 8001a8e:	d115      	bne.n	8001abc <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x44>
 8001a90:	b108      	cbz	r0, 8001a96 <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x1e>
 8001a92:	428b      	cmp	r3, r1
 8001a94:	d1f6      	bne.n	8001a84 <TFTPFileServer::FileCreate(char const*, TFTPMode)+0xc>
 8001a96:	480b      	ldr	r0, [pc, #44]	; (8001ac4 <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x4c>)
 8001a98:	f7ff fa8c 	bl	8000fb4 <printf>
 8001a9c:	4b0a      	ldr	r3, [pc, #40]	; (8001ac8 <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x50>)
 8001a9e:	490b      	ldr	r1, [pc, #44]	; (8001acc <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x54>)
 8001aa0:	681d      	ldr	r5, [r3, #0]
 8001aa2:	4628      	mov	r0, r5
 8001aa4:	f7ff fcfa 	bl	800149c <Display::TextStatus(char const*)>
 8001aa8:	4628      	mov	r0, r5
 8001aaa:	f240 6171 	movw	r1, #1649	; 0x671
 8001aae:	f7fe ffc7 	bl	8000a40 <Display::Status(Display7SegmentMessage)>
 8001ab2:	2300      	movs	r3, #0
 8001ab4:	2001      	movs	r0, #1
 8001ab6:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8001aba:	bd38      	pop	{r3, r4, r5, pc}
 8001abc:	2000      	movs	r0, #0
 8001abe:	e7fc      	b.n	8001aba <TFTPFileServer::FileCreate(char const*, TFTPMode)+0x42>
 8001ac0:	08006cc3 	stmdaeq	r0, {r0, r1, r6, r7, sl, fp, sp, lr}
 8001ac4:	08006ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp, sp, lr}
 8001ac8:	200010e0 	andcs	r1, r0, r0, ror #1
 8001acc:	08006cb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, sl, fp, sp, lr}

08001ad0 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)>:
 8001ad0:	b570      	push	{r4, r5, r6, lr}
 8001ad2:	4604      	mov	r4, r0
 8001ad4:	460e      	mov	r6, r1
 8001ad6:	4615      	mov	r5, r2
 8001ad8:	f001 fc32 	bl	8003340 <TFTPDaemon::TFTPDaemon()>
 8001adc:	4b05      	ldr	r3, [pc, #20]	; (8001af4 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)+0x24>)
 8001ade:	4620      	mov	r0, r4
 8001ae0:	6023      	str	r3, [r4, #0]
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	e9c4 658d 	strd	r6, r5, [r4, #564]	; 0x234
 8001ae8:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8001aec:	f884 3240 	strb.w	r3, [r4, #576]	; 0x240
 8001af0:	bd70      	pop	{r4, r5, r6, pc}
 8001af2:	bf00      	nop
 8001af4:	08006cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, sp, lr}

08001af8 <tftpfileserver::is_valid(void const*)>:
 8001af8:	2001      	movs	r0, #1
 8001afa:	4770      	bx	lr

08001afc <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)>:
 8001afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b00:	460f      	mov	r7, r1
 8001b02:	4616      	mov	r6, r2
 8001b04:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8001b08:	6882      	ldr	r2, [r0, #8]
 8001b0a:	4605      	mov	r5, r0
 8001b0c:	4291      	cmp	r1, r2
 8001b0e:	b085      	sub	sp, #20
 8001b10:	d907      	bls.n	8001b22 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x26>
 8001b12:	4839      	ldr	r0, [pc, #228]	; (8001bf8 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0xfc>)
 8001b14:	f7ff fa4e 	bl	8000fb4 <printf>
 8001b18:	2400      	movs	r4, #0
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	b005      	add	sp, #20
 8001b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b22:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8001bfc <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x100>
 8001b26:	f8d8 3000 	ldr.w	r3, [r8]
 8001b2a:	f893 9000 	ldrb.w	r9, [r3]
 8001b2e:	f1b9 0f00 	cmp.w	r9, #0
 8001b32:	d006      	beq.n	8001b42 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x46>
 8001b34:	2200      	movs	r2, #0
 8001b36:	2104      	movs	r1, #4
 8001b38:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001b3c:	701a      	strb	r2, [r3, #0]
 8001b3e:	f003 fbed 	bl	800531c <fwdgt_config>
 8001b42:	482f      	ldr	r0, [pc, #188]	; (8001c00 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x104>)
 8001b44:	f002 fdf8 	bl	8004738 <puts>
 8001b48:	4628      	mov	r0, r5
 8001b4a:	f000 fe41 	bl	80027d0 <FlashCode::GetSectorSize() const>
 8001b4e:	f8df a0b4 	ldr.w	sl, [pc, #180]	; 8001c04 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x108>
 8001b52:	1e74      	subs	r4, r6, #1
 8001b54:	4404      	add	r4, r0
 8001b56:	4240      	negs	r0, r0
 8001b58:	2302      	movs	r3, #2
 8001b5a:	f240 6239 	movw	r2, #1593	; 0x639
 8001b5e:	492a      	ldr	r1, [pc, #168]	; (8001c08 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x10c>)
 8001b60:	4004      	ands	r4, r0
 8001b62:	f8da 0000 	ldr.w	r0, [sl]
 8001b66:	f7ff fcd4 	bl	8001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8001b6a:	f10d 0b0c 	add.w	fp, sp, #12
 8001b6e:	465b      	mov	r3, fp
 8001b70:	4622      	mov	r2, r4
 8001b72:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001b76:	4628      	mov	r0, r5
 8001b78:	f000 fe2e 	bl	80027d8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 8001b7c:	2800      	cmp	r0, #0
 8001b7e:	d0f6      	beq.n	8001b6e <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x72>
 8001b80:	9b03      	ldr	r3, [sp, #12]
 8001b82:	2b01      	cmp	r3, #1
 8001b84:	d103      	bne.n	8001b8e <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x92>
 8001b86:	4821      	ldr	r0, [pc, #132]	; (8001c0c <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x110>)
 8001b88:	f002 fdd6 	bl	8004738 <puts>
 8001b8c:	e7c4      	b.n	8001b18 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x1c>
 8001b8e:	2302      	movs	r3, #2
 8001b90:	f645 3239 	movw	r2, #23353	; 0x5b39
 8001b94:	491e      	ldr	r1, [pc, #120]	; (8001c10 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x114>)
 8001b96:	f8da 0000 	ldr.w	r0, [sl]
 8001b9a:	f7ff fcba 	bl	8001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8001b9e:	463b      	mov	r3, r7
 8001ba0:	4632      	mov	r2, r6
 8001ba2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001ba6:	4628      	mov	r0, r5
 8001ba8:	f8cd b000 	str.w	fp, [sp]
 8001bac:	f000 feb4 	bl	8002918 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 8001bb0:	4604      	mov	r4, r0
 8001bb2:	2800      	cmp	r0, #0
 8001bb4:	d0f3      	beq.n	8001b9e <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0xa2>
 8001bb6:	9b03      	ldr	r3, [sp, #12]
 8001bb8:	2b01      	cmp	r3, #1
 8001bba:	d101      	bne.n	8001bc0 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0xc4>
 8001bbc:	4815      	ldr	r0, [pc, #84]	; (8001c14 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x118>)
 8001bbe:	e7e3      	b.n	8001b88 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x8c>
 8001bc0:	f1b9 0f00 	cmp.w	r9, #0
 8001bc4:	d00e      	beq.n	8001be4 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0xe8>
 8001bc6:	2102      	movs	r1, #2
 8001bc8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001bcc:	f8d8 5000 	ldr.w	r5, [r8]
 8001bd0:	f003 fba4 	bl	800531c <fwdgt_config>
 8001bd4:	2801      	cmp	r0, #1
 8001bd6:	bf0c      	ite	eq
 8001bd8:	2301      	moveq	r3, #1
 8001bda:	2300      	movne	r3, #0
 8001bdc:	702b      	strb	r3, [r5, #0]
 8001bde:	d101      	bne.n	8001be4 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0xe8>
 8001be0:	f003 fb8c 	bl	80052fc <fwdgt_enable>
 8001be4:	2302      	movs	r3, #2
 8001be6:	f643 1239 	movw	r2, #14649	; 0x3939
 8001bea:	490b      	ldr	r1, [pc, #44]	; (8001c18 <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x11c>)
 8001bec:	f8da 0000 	ldr.w	r0, [sl]
 8001bf0:	f7ff fc8f 	bl	8001512 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8001bf4:	e791      	b.n	8001b1a <FlashCodeInstall::WriteFirmware(unsigned char const*, unsigned int)+0x1e>
 8001bf6:	bf00      	nop
 8001bf8:	08006cf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, fp, sp, lr}
 8001bfc:	200039e8 	andcs	r3, r0, r8, ror #19
 8001c00:	08006d13 	stmdaeq	r0, {r0, r1, r4, r8, sl, fp, sp, lr}
 8001c04:	200010e0 	andcs	r1, r0, r0, ror #1
 8001c08:	08006d22 	stmdaeq	r0, {r1, r5, r8, sl, fp, sp, lr}
 8001c0c:	08006d28 	stmdaeq	r0, {r3, r5, r8, sl, fp, sp, lr}
 8001c10:	08006d3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, sl, fp, sp, lr}
 8001c14:	08006d43 	stmdaeq	r0, {r0, r1, r6, r8, sl, fp, sp, lr}
 8001c18:	08006d56 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, fp, sp, lr}

08001c1c <FlashCodeInstall::FlashCodeInstall()>:
 8001c1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001c1e:	4604      	mov	r4, r0
 8001c20:	f000 fdb0 	bl	8002784 <FlashCode::FlashCode()>
 8001c24:	2300      	movs	r3, #0
 8001c26:	4e1c      	ldr	r6, [pc, #112]	; (8001c98 <FlashCodeInstall::FlashCodeInstall()+0x7c>)
 8001c28:	6163      	str	r3, [r4, #20]
 8001c2a:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8001c2e:	e9c4 3303 	strd	r3, r3, [r4, #12]
 8001c32:	7623      	strb	r3, [r4, #24]
 8001c34:	4b19      	ldr	r3, [pc, #100]	; (8001c9c <FlashCodeInstall::FlashCodeInstall()+0x80>)
 8001c36:	601c      	str	r4, [r3, #0]
 8001c38:	6833      	ldr	r3, [r6, #0]
 8001c3a:	6998      	ldr	r0, [r3, #24]
 8001c3c:	b110      	cbz	r0, 8001c44 <FlashCodeInstall::FlashCodeInstall()+0x28>
 8001c3e:	6803      	ldr	r3, [r0, #0]
 8001c40:	68db      	ldr	r3, [r3, #12]
 8001c42:	4798      	blx	r3
 8001c44:	4620      	mov	r0, r4
 8001c46:	f000 fdbb 	bl	80027c0 <FlashCode::GetSize() const>
 8001c4a:	60a0      	str	r0, [r4, #8]
 8001c4c:	4620      	mov	r0, r4
 8001c4e:	f000 fdb3 	bl	80027b8 <FlashCode::GetName() const>
 8001c52:	4605      	mov	r5, r0
 8001c54:	4620      	mov	r0, r4
 8001c56:	f000 fdbb 	bl	80027d0 <FlashCode::GetSectorSize() const>
 8001c5a:	68a3      	ldr	r3, [r4, #8]
 8001c5c:	4602      	mov	r2, r0
 8001c5e:	0a99      	lsrs	r1, r3, #10
 8001c60:	9100      	str	r1, [sp, #0]
 8001c62:	480f      	ldr	r0, [pc, #60]	; (8001ca0 <FlashCodeInstall::FlashCodeInstall()+0x84>)
 8001c64:	4629      	mov	r1, r5
 8001c66:	f7ff f9a5 	bl	8000fb4 <printf>
 8001c6a:	4620      	mov	r0, r4
 8001c6c:	6835      	ldr	r5, [r6, #0]
 8001c6e:	f000 fda3 	bl	80027b8 <FlashCode::GetName() const>
 8001c72:	4602      	mov	r2, r0
 8001c74:	69a8      	ldr	r0, [r5, #24]
 8001c76:	b160      	cbz	r0, 8001c92 <FlashCodeInstall::FlashCodeInstall()+0x76>
 8001c78:	2300      	movs	r3, #0
 8001c7a:	7905      	ldrb	r5, [r0, #4]
 8001c7c:	5cd1      	ldrb	r1, [r2, r3]
 8001c7e:	b119      	cbz	r1, 8001c88 <FlashCodeInstall::FlashCodeInstall()+0x6c>
 8001c80:	1c59      	adds	r1, r3, #1
 8001c82:	429d      	cmp	r5, r3
 8001c84:	460b      	mov	r3, r1
 8001c86:	dcf9      	bgt.n	8001c7c <FlashCodeInstall::FlashCodeInstall()+0x60>
 8001c88:	6801      	ldr	r1, [r0, #0]
 8001c8a:	b2db      	uxtb	r3, r3
 8001c8c:	69cd      	ldr	r5, [r1, #28]
 8001c8e:	2101      	movs	r1, #1
 8001c90:	47a8      	blx	r5
 8001c92:	4620      	mov	r0, r4
 8001c94:	b002      	add	sp, #8
 8001c96:	bd70      	pop	{r4, r5, r6, pc}
 8001c98:	200010e0 	andcs	r1, r0, r0, ror #1
 8001c9c:	200000b8 	strhcs	r0, [r0], -r8
 8001ca0:	08006d5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, sl, fp, sp, lr}

08001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	2020      	movs	r0, #32
 8001ca8:	b510      	push	{r4, lr}
 8001caa:	4a04      	ldr	r2, [pc, #16]	; (8001cbc <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8001cac:	428b      	cmp	r3, r1
 8001cae:	d100      	bne.n	8001cb2 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8001cb0:	bd10      	pop	{r4, pc}
 8001cb2:	f852 4b04 	ldr.w	r4, [r2], #4
 8001cb6:	3301      	adds	r3, #1
 8001cb8:	4420      	add	r0, r4
 8001cba:	e7f7      	b.n	8001cac <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8001cbc:	08006d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, sp, lr}

08001cc0 <ConfigStore::Init()>:
 8001cc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cc4:	b085      	sub	sp, #20
 8001cc6:	4607      	mov	r7, r0
 8001cc8:	f000 fa96 	bl	80021f8 <StoreDevice::GetSectorSize() const>
 8001ccc:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8001cd0:	4605      	mov	r5, r0
 8001cd2:	d004      	beq.n	8001cde <ConfigStore::Init()+0x1e>
 8001cd4:	2500      	movs	r5, #0
 8001cd6:	4628      	mov	r0, r5
 8001cd8:	b005      	add	sp, #20
 8001cda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001cde:	4638      	mov	r0, r7
 8001ce0:	f000 fa88 	bl	80021f4 <StoreDevice::GetSize() const>
 8001ce4:	4b3a      	ldr	r3, [pc, #232]	; (8001dd0 <ConfigStore::Init()+0x110>)
 8001ce6:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 8001cea:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8001cee:	6019      	str	r1, [r3, #0]
 8001cf0:	2e00      	cmp	r6, #0
 8001cf2:	d1ef      	bne.n	8001cd4 <ConfigStore::Init()+0x14>
 8001cf4:	4c37      	ldr	r4, [pc, #220]	; (8001dd4 <ConfigStore::Init()+0x114>)
 8001cf6:	ab03      	add	r3, sp, #12
 8001cf8:	462a      	mov	r2, r5
 8001cfa:	9300      	str	r3, [sp, #0]
 8001cfc:	4638      	mov	r0, r7
 8001cfe:	4623      	mov	r3, r4
 8001d00:	f000 fa7c 	bl	80021fc <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 8001d04:	7823      	ldrb	r3, [r4, #0]
 8001d06:	2b41      	cmp	r3, #65	; 0x41
 8001d08:	bf1c      	itt	ne
 8001d0a:	2341      	movne	r3, #65	; 0x41
 8001d0c:	7023      	strbne	r3, [r4, #0]
 8001d0e:	7863      	ldrb	r3, [r4, #1]
 8001d10:	bf14      	ite	ne
 8001d12:	4635      	movne	r5, r6
 8001d14:	2501      	moveq	r5, #1
 8001d16:	2b76      	cmp	r3, #118	; 0x76
 8001d18:	bf1c      	itt	ne
 8001d1a:	2376      	movne	r3, #118	; 0x76
 8001d1c:	7063      	strbne	r3, [r4, #1]
 8001d1e:	78a3      	ldrb	r3, [r4, #2]
 8001d20:	bf18      	it	ne
 8001d22:	2500      	movne	r5, #0
 8001d24:	2b56      	cmp	r3, #86	; 0x56
 8001d26:	bf1c      	itt	ne
 8001d28:	2356      	movne	r3, #86	; 0x56
 8001d2a:	70a3      	strbne	r3, [r4, #2]
 8001d2c:	78e3      	ldrb	r3, [r4, #3]
 8001d2e:	bf18      	it	ne
 8001d30:	2500      	movne	r5, #0
 8001d32:	2b10      	cmp	r3, #16
 8001d34:	d01f      	beq.n	8001d76 <ConfigStore::Init()+0xb6>
 8001d36:	2310      	movs	r3, #16
 8001d38:	70e3      	strb	r3, [r4, #3]
 8001d3a:	2201      	movs	r2, #1
 8001d3c:	2500      	movs	r5, #0
 8001d3e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8001d42:	4b25      	ldr	r3, [pc, #148]	; (8001dd8 <ConfigStore::Init()+0x118>)
 8001d44:	f8df 8094 	ldr.w	r8, [pc, #148]	; 8001ddc <ConfigStore::Init()+0x11c>
 8001d48:	701a      	strb	r2, [r3, #0]
 8001d4a:	4631      	mov	r1, r6
 8001d4c:	4638      	mov	r0, r7
 8001d4e:	f7ff ffa9 	bl	8001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8001d52:	1823      	adds	r3, r4, r0
 8001d54:	5425      	strb	r5, [r4, r0]
 8001d56:	705d      	strb	r5, [r3, #1]
 8001d58:	709d      	strb	r5, [r3, #2]
 8001d5a:	70dd      	strb	r5, [r3, #3]
 8001d5c:	f858 3b04 	ldr.w	r3, [r8], #4
 8001d60:	1d02      	adds	r2, r0, #4
 8001d62:	4403      	add	r3, r0
 8001d64:	429a      	cmp	r2, r3
 8001d66:	d32f      	bcc.n	8001dc8 <ConfigStore::Init()+0x108>
 8001d68:	3601      	adds	r6, #1
 8001d6a:	2e1c      	cmp	r6, #28
 8001d6c:	d1ed      	bne.n	8001d4a <ConfigStore::Init()+0x8a>
 8001d6e:	2501      	movs	r5, #1
 8001d70:	4b1b      	ldr	r3, [pc, #108]	; (8001de0 <ConfigStore::Init()+0x120>)
 8001d72:	601d      	str	r5, [r3, #0]
 8001d74:	e7af      	b.n	8001cd6 <ConfigStore::Init()+0x16>
 8001d76:	2d00      	cmp	r5, #0
 8001d78:	d0df      	beq.n	8001d3a <ConfigStore::Init()+0x7a>
 8001d7a:	f04f 0900 	mov.w	r9, #0
 8001d7e:	46c8      	mov	r8, r9
 8001d80:	4631      	mov	r1, r6
 8001d82:	4638      	mov	r0, r7
 8001d84:	f7ff ff8e 	bl	8001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8001d88:	5c23      	ldrb	r3, [r4, r0]
 8001d8a:	2bff      	cmp	r3, #255	; 0xff
 8001d8c:	d112      	bne.n	8001db4 <ConfigStore::Init()+0xf4>
 8001d8e:	1823      	adds	r3, r4, r0
 8001d90:	785a      	ldrb	r2, [r3, #1]
 8001d92:	2aff      	cmp	r2, #255	; 0xff
 8001d94:	d10e      	bne.n	8001db4 <ConfigStore::Init()+0xf4>
 8001d96:	789a      	ldrb	r2, [r3, #2]
 8001d98:	2aff      	cmp	r2, #255	; 0xff
 8001d9a:	d10b      	bne.n	8001db4 <ConfigStore::Init()+0xf4>
 8001d9c:	78da      	ldrb	r2, [r3, #3]
 8001d9e:	2aff      	cmp	r2, #255	; 0xff
 8001da0:	d108      	bne.n	8001db4 <ConfigStore::Init()+0xf4>
 8001da2:	46a9      	mov	r9, r5
 8001da4:	f804 8000 	strb.w	r8, [r4, r0]
 8001da8:	f883 8001 	strb.w	r8, [r3, #1]
 8001dac:	f883 8002 	strb.w	r8, [r3, #2]
 8001db0:	f883 8003 	strb.w	r8, [r3, #3]
 8001db4:	3601      	adds	r6, #1
 8001db6:	2e1c      	cmp	r6, #28
 8001db8:	d1e2      	bne.n	8001d80 <ConfigStore::Init()+0xc0>
 8001dba:	f1b9 0f00 	cmp.w	r9, #0
 8001dbe:	d08a      	beq.n	8001cd6 <ConfigStore::Init()+0x16>
 8001dc0:	2201      	movs	r2, #1
 8001dc2:	4b07      	ldr	r3, [pc, #28]	; (8001de0 <ConfigStore::Init()+0x120>)
 8001dc4:	601a      	str	r2, [r3, #0]
 8001dc6:	e786      	b.n	8001cd6 <ConfigStore::Init()+0x16>
 8001dc8:	f804 9002 	strb.w	r9, [r4, r2]
 8001dcc:	3201      	adds	r2, #1
 8001dce:	e7c9      	b.n	8001d64 <ConfigStore::Init()+0xa4>
 8001dd0:	200010c0 	andcs	r1, r0, r0, asr #1
 8001dd4:	200000c0 	andcs	r0, r0, r0, asr #1
 8001dd8:	200010d4 	ldrdcs	r1, [r0], -r4
 8001ddc:	08006d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, sp, lr}
 8001de0:	200010cc 	andcs	r1, r0, ip, asr #1

08001de4 <ConfigStore::ConfigStore()>:
 8001de4:	b538      	push	{r3, r4, r5, lr}
 8001de6:	4604      	mov	r4, r0
 8001de8:	f000 f9e0 	bl	80021ac <StoreDevice::StoreDevice()>
 8001dec:	4b0b      	ldr	r3, [pc, #44]	; (8001e1c <ConfigStore::ConfigStore()+0x38>)
 8001dee:	4d0c      	ldr	r5, [pc, #48]	; (8001e20 <ConfigStore::ConfigStore()+0x3c>)
 8001df0:	601c      	str	r4, [r3, #0]
 8001df2:	7823      	ldrb	r3, [r4, #0]
 8001df4:	b11b      	cbz	r3, 8001dfe <ConfigStore::ConfigStore()+0x1a>
 8001df6:	4620      	mov	r0, r4
 8001df8:	f7ff ff62 	bl	8001cc0 <ConfigStore::Init()>
 8001dfc:	7028      	strb	r0, [r5, #0]
 8001dfe:	782b      	ldrb	r3, [r5, #0]
 8001e00:	b153      	cbz	r3, 8001e18 <ConfigStore::ConfigStore()+0x34>
 8001e02:	2320      	movs	r3, #32
 8001e04:	2200      	movs	r2, #0
 8001e06:	4907      	ldr	r1, [pc, #28]	; (8001e24 <ConfigStore::ConfigStore()+0x40>)
 8001e08:	f851 0b04 	ldr.w	r0, [r1], #4
 8001e0c:	3201      	adds	r2, #1
 8001e0e:	2a1c      	cmp	r2, #28
 8001e10:	4403      	add	r3, r0
 8001e12:	d1f9      	bne.n	8001e08 <ConfigStore::ConfigStore()+0x24>
 8001e14:	4a04      	ldr	r2, [pc, #16]	; (8001e28 <ConfigStore::ConfigStore()+0x44>)
 8001e16:	6013      	str	r3, [r2, #0]
 8001e18:	4620      	mov	r0, r4
 8001e1a:	bd38      	pop	{r3, r4, r5, pc}
 8001e1c:	200010d0 	ldrdcs	r1, [r0], -r0
 8001e20:	200010c4 	andcs	r1, r0, r4, asr #1
 8001e24:	08006d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, sp, lr}
 8001e28:	200010c8 	andcs	r1, r0, r8, asr #1

08001e2c <ConfigStore::ResetSetList(configstore::Store)>:
 8001e2c:	b508      	push	{r3, lr}
 8001e2e:	f7ff ff39 	bl	8001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8001e32:	2300      	movs	r3, #0
 8001e34:	4904      	ldr	r1, [pc, #16]	; (8001e48 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 8001e36:	1842      	adds	r2, r0, r1
 8001e38:	540b      	strb	r3, [r1, r0]
 8001e3a:	7053      	strb	r3, [r2, #1]
 8001e3c:	7093      	strb	r3, [r2, #2]
 8001e3e:	70d3      	strb	r3, [r2, #3]
 8001e40:	2201      	movs	r2, #1
 8001e42:	4b02      	ldr	r3, [pc, #8]	; (8001e4c <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 8001e44:	601a      	str	r2, [r3, #0]
 8001e46:	bd08      	pop	{r3, pc}
 8001e48:	200000c0 	andcs	r0, r0, r0, asr #1
 8001e4c:	200010cc 	andcs	r1, r0, ip, asr #1

08001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8001e50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e54:	461c      	mov	r4, r3
 8001e56:	4b19      	ldr	r3, [pc, #100]	; (8001ebc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8001e58:	4616      	mov	r6, r2
 8001e5a:	781f      	ldrb	r7, [r3, #0]
 8001e5c:	9d07      	ldr	r5, [sp, #28]
 8001e5e:	b307      	cbz	r7, 8001ea2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8001e60:	f7ff ff20 	bl	8001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8001e64:	f04f 0c00 	mov.w	ip, #0
 8001e68:	4a15      	ldr	r2, [pc, #84]	; (8001ec0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8001e6a:	1831      	adds	r1, r6, r0
 8001e6c:	1e63      	subs	r3, r4, #1
 8001e6e:	9c06      	ldr	r4, [sp, #24]
 8001e70:	4411      	add	r1, r2
 8001e72:	440c      	add	r4, r1
 8001e74:	42a1      	cmp	r1, r4
 8001e76:	d116      	bne.n	8001ea6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8001e78:	f1bc 0f00 	cmp.w	ip, #0
 8001e7c:	d011      	beq.n	8001ea2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8001e7e:	4b11      	ldr	r3, [pc, #68]	; (8001ec4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8001e80:	6819      	ldr	r1, [r3, #0]
 8001e82:	b109      	cbz	r1, 8001e88 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8001e84:	2906      	cmp	r1, #6
 8001e86:	d101      	bne.n	8001e8c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8001e88:	2101      	movs	r1, #1
 8001e8a:	6019      	str	r1, [r3, #0]
 8001e8c:	4b0e      	ldr	r3, [pc, #56]	; (8001ec8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8001e8e:	6819      	ldr	r1, [r3, #0]
 8001e90:	4b0e      	ldr	r3, [pc, #56]	; (8001ecc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8001e92:	6019      	str	r1, [r3, #0]
 8001e94:	b12e      	cbz	r6, 8001ea2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8001e96:	b125      	cbz	r5, 8001ea2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8001e98:	9b08      	ldr	r3, [sp, #32]
 8001e9a:	4418      	add	r0, r3
 8001e9c:	5813      	ldr	r3, [r2, r0]
 8001e9e:	432b      	orrs	r3, r5
 8001ea0:	5013      	str	r3, [r2, r0]
 8001ea2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ea6:	f891 8000 	ldrb.w	r8, [r1]
 8001eaa:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8001eae:	3101      	adds	r1, #1
 8001eb0:	45f0      	cmp	r8, lr
 8001eb2:	bf1c      	itt	ne
 8001eb4:	f801 ec01 	strbne.w	lr, [r1, #-1]
 8001eb8:	46bc      	movne	ip, r7
 8001eba:	e7db      	b.n	8001e74 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8001ebc:	200010c4 	andcs	r1, r0, r4, asr #1
 8001ec0:	200000c0 	andcs	r0, r0, r0, asr #1
 8001ec4:	200010cc 	andcs	r1, r0, ip, asr #1
 8001ec8:	200039fc 	strdcs	r3, [r0], -ip
 8001ecc:	200000bc 	strhcs	r0, [r0], -ip

08001ed0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8001ed0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ed4:	461d      	mov	r5, r3
 8001ed6:	4b15      	ldr	r3, [pc, #84]	; (8001f2c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8001ed8:	b085      	sub	sp, #20
 8001eda:	781b      	ldrb	r3, [r3, #0]
 8001edc:	4607      	mov	r7, r0
 8001ede:	4614      	mov	r4, r2
 8001ee0:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8001ee4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8001ee8:	b193      	cbz	r3, 8001f10 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8001eea:	f7ff fedb 	bl	8001ca4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8001eee:	4a10      	ldr	r2, [pc, #64]	; (8001f30 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8001ef0:	eb08 0600 	add.w	r6, r8, r0
 8001ef4:	18b3      	adds	r3, r6, r2
 8001ef6:	f1b9 0f00 	cmp.w	r9, #0
 8001efa:	d013      	beq.n	8001f24 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8001efc:	5990      	ldr	r0, [r2, r6]
 8001efe:	b988      	cbnz	r0, 8001f24 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8001f00:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8001f04:	4623      	mov	r3, r4
 8001f06:	4642      	mov	r2, r8
 8001f08:	4638      	mov	r0, r7
 8001f0a:	9500      	str	r5, [sp, #0]
 8001f0c:	f7ff ffa0 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8001f10:	b005      	add	sp, #20
 8001f12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f16:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001f1a:	f804 2f01 	strb.w	r2, [r4, #1]!
 8001f1e:	429d      	cmp	r5, r3
 8001f20:	d1f9      	bne.n	8001f16 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8001f22:	e7f5      	b.n	8001f10 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8001f24:	3c01      	subs	r4, #1
 8001f26:	441d      	add	r5, r3
 8001f28:	e7f9      	b.n	8001f1e <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8001f2a:	bf00      	nop
 8001f2c:	200010c4 	andcs	r1, r0, r4, asr #1
 8001f30:	200000c0 	andcs	r0, r0, r0, asr #1

08001f34 <ConfigStore::Flash()>:
 8001f34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001f36:	4c24      	ldr	r4, [pc, #144]	; (8001fc8 <ConfigStore::Flash()+0x94>)
 8001f38:	6823      	ldr	r3, [r4, #0]
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d041      	beq.n	8001fc2 <ConfigStore::Flash()+0x8e>
 8001f3e:	3b01      	subs	r3, #1
 8001f40:	2b05      	cmp	r3, #5
 8001f42:	d82f      	bhi.n	8001fa4 <ConfigStore::Flash()+0x70>
 8001f44:	e8df f003 	tbb	[pc, r3]
 8001f48:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8001f4c:	4b1f2e23 	blmi	87cd7e0 <__exidx_end+0x7c6128>
 8001f50:	681a      	ldr	r2, [r3, #0]
 8001f52:	4b1f      	ldr	r3, [pc, #124]	; (8001fd0 <ConfigStore::Flash()+0x9c>)
 8001f54:	601a      	str	r2, [r3, #0]
 8001f56:	2302      	movs	r3, #2
 8001f58:	6023      	str	r3, [r4, #0]
 8001f5a:	2001      	movs	r0, #1
 8001f5c:	e02f      	b.n	8001fbe <ConfigStore::Flash()+0x8a>
 8001f5e:	4b1b      	ldr	r3, [pc, #108]	; (8001fcc <ConfigStore::Flash()+0x98>)
 8001f60:	4a1b      	ldr	r2, [pc, #108]	; (8001fd0 <ConfigStore::Flash()+0x9c>)
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	6812      	ldr	r2, [r2, #0]
 8001f66:	1a9b      	subs	r3, r3, r2
 8001f68:	2b63      	cmp	r3, #99	; 0x63
 8001f6a:	d9f6      	bls.n	8001f5a <ConfigStore::Flash()+0x26>
 8001f6c:	2303      	movs	r3, #3
 8001f6e:	e7f3      	b.n	8001f58 <ConfigStore::Flash()+0x24>
 8001f70:	4918      	ldr	r1, [pc, #96]	; (8001fd4 <ConfigStore::Flash()+0xa0>)
 8001f72:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001f76:	6809      	ldr	r1, [r1, #0]
 8001f78:	ab03      	add	r3, sp, #12
 8001f7a:	f000 f94a 	bl	8002212 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8001f7e:	2800      	cmp	r0, #0
 8001f80:	d0eb      	beq.n	8001f5a <ConfigStore::Flash()+0x26>
 8001f82:	4b12      	ldr	r3, [pc, #72]	; (8001fcc <ConfigStore::Flash()+0x98>)
 8001f84:	681a      	ldr	r2, [r3, #0]
 8001f86:	4b12      	ldr	r3, [pc, #72]	; (8001fd0 <ConfigStore::Flash()+0x9c>)
 8001f88:	601a      	str	r2, [r3, #0]
 8001f8a:	2305      	movs	r3, #5
 8001f8c:	e7e4      	b.n	8001f58 <ConfigStore::Flash()+0x24>
 8001f8e:	4b0f      	ldr	r3, [pc, #60]	; (8001fcc <ConfigStore::Flash()+0x98>)
 8001f90:	4a0f      	ldr	r2, [pc, #60]	; (8001fd0 <ConfigStore::Flash()+0x9c>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	6812      	ldr	r2, [r2, #0]
 8001f96:	1a9b      	subs	r3, r3, r2
 8001f98:	2b63      	cmp	r3, #99	; 0x63
 8001f9a:	d9de      	bls.n	8001f5a <ConfigStore::Flash()+0x26>
 8001f9c:	2304      	movs	r3, #4
 8001f9e:	e7db      	b.n	8001f58 <ConfigStore::Flash()+0x24>
 8001fa0:	2306      	movs	r3, #6
 8001fa2:	e7d9      	b.n	8001f58 <ConfigStore::Flash()+0x24>
 8001fa4:	ab03      	add	r3, sp, #12
 8001fa6:	4a0c      	ldr	r2, [pc, #48]	; (8001fd8 <ConfigStore::Flash()+0xa4>)
 8001fa8:	490a      	ldr	r1, [pc, #40]	; (8001fd4 <ConfigStore::Flash()+0xa0>)
 8001faa:	9300      	str	r3, [sp, #0]
 8001fac:	6812      	ldr	r2, [r2, #0]
 8001fae:	4b0b      	ldr	r3, [pc, #44]	; (8001fdc <ConfigStore::Flash()+0xa8>)
 8001fb0:	6809      	ldr	r1, [r1, #0]
 8001fb2:	f000 f938 	bl	8002226 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 8001fb6:	2800      	cmp	r0, #0
 8001fb8:	d0cf      	beq.n	8001f5a <ConfigStore::Flash()+0x26>
 8001fba:	2000      	movs	r0, #0
 8001fbc:	6020      	str	r0, [r4, #0]
 8001fbe:	b004      	add	sp, #16
 8001fc0:	bd10      	pop	{r4, pc}
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	e7fb      	b.n	8001fbe <ConfigStore::Flash()+0x8a>
 8001fc6:	bf00      	nop
 8001fc8:	200010cc 	andcs	r1, r0, ip, asr #1
 8001fcc:	200039fc 	strdcs	r3, [r0], -ip
 8001fd0:	200000bc 	strhcs	r0, [r0], -ip
 8001fd4:	200010c0 	andcs	r1, r0, r0, asr #1
 8001fd8:	200010c8 	andcs	r1, r0, r8, asr #1
 8001fdc:	200000c0 	andcs	r0, r0, r0, asr #1

08001fe0 <StoreNetwork::~StoreNetwork()>:
 8001fe0:	4770      	bx	lr

08001fe2 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8001fe2:	3804      	subs	r0, #4
 8001fe4:	4770      	bx	lr
	...

08001fe8 <StoreNetwork::Update(networkparams::Params const*)>:
 8001fe8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001fea:	2200      	movs	r2, #0
 8001fec:	460b      	mov	r3, r1
 8001fee:	215e      	movs	r1, #94	; 0x5e
 8001ff0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8001ff4:	4804      	ldr	r0, [pc, #16]	; (8002008 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 8001ff6:	9100      	str	r1, [sp, #0]
 8001ff8:	6800      	ldr	r0, [r0, #0]
 8001ffa:	4611      	mov	r1, r2
 8001ffc:	f7ff ff28 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002000:	b005      	add	sp, #20
 8002002:	f85d fb04 	ldr.w	pc, [sp], #4
 8002006:	bf00      	nop
 8002008:	200010d0 	ldrdcs	r1, [r0], -r0

0800200c <StoreNetwork::SaveDhcp(bool)>:
 800200c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800200e:	2301      	movs	r3, #1
 8002010:	f88d 1017 	strb.w	r1, [sp, #23]
 8002014:	2100      	movs	r1, #0
 8002016:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800201a:	4805      	ldr	r0, [pc, #20]	; (8002030 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800201c:	9300      	str	r3, [sp, #0]
 800201e:	2214      	movs	r2, #20
 8002020:	6800      	ldr	r0, [r0, #0]
 8002022:	f10d 0317 	add.w	r3, sp, #23
 8002026:	f7ff ff13 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800202a:	b007      	add	sp, #28
 800202c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002030:	200010d0 	ldrdcs	r1, [r0], -r0

08002034 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8002034:	f1a0 0004 	sub.w	r0, r0, #4
 8002038:	e7e8      	b.n	800200c <StoreNetwork::SaveDhcp(bool)>
 800203a:	bf00      	nop

0800203c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800203c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800203e:	2308      	movs	r3, #8
 8002040:	9105      	str	r1, [sp, #20]
 8002042:	2100      	movs	r1, #0
 8002044:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8002048:	2304      	movs	r3, #4
 800204a:	4805      	ldr	r0, [pc, #20]	; (8002060 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800204c:	9300      	str	r3, [sp, #0]
 800204e:	220c      	movs	r2, #12
 8002050:	6800      	ldr	r0, [r0, #0]
 8002052:	ab05      	add	r3, sp, #20
 8002054:	f7ff fefc 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002058:	b007      	add	sp, #28
 800205a:	f85d fb04 	ldr.w	pc, [sp], #4
 800205e:	bf00      	nop
 8002060:	200010d0 	ldrdcs	r1, [r0], -r0

08002064 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 8002064:	f1a0 0004 	sub.w	r0, r0, #4
 8002068:	e7e8      	b.n	800203c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800206a:	bf00      	nop

0800206c <StoreNetwork::SaveNetMask(unsigned int)>:
 800206c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800206e:	2304      	movs	r3, #4
 8002070:	9105      	str	r1, [sp, #20]
 8002072:	2100      	movs	r1, #0
 8002074:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8002078:	4804      	ldr	r0, [pc, #16]	; (800208c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800207a:	9300      	str	r3, [sp, #0]
 800207c:	2208      	movs	r2, #8
 800207e:	6800      	ldr	r0, [r0, #0]
 8002080:	ab05      	add	r3, sp, #20
 8002082:	f7ff fee5 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002086:	b007      	add	sp, #28
 8002088:	f85d fb04 	ldr.w	pc, [sp], #4
 800208c:	200010d0 	ldrdcs	r1, [r0], -r0

08002090 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8002090:	f1a0 0004 	sub.w	r0, r0, #4
 8002094:	e7ea      	b.n	800206c <StoreNetwork::SaveNetMask(unsigned int)>
 8002096:	bf00      	nop

08002098 <StoreNetwork::SaveIp(unsigned int)>:
 8002098:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800209a:	2302      	movs	r3, #2
 800209c:	9105      	str	r1, [sp, #20]
 800209e:	2100      	movs	r1, #0
 80020a0:	2204      	movs	r2, #4
 80020a2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80020a6:	4804      	ldr	r0, [pc, #16]	; (80020b8 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 80020a8:	9200      	str	r2, [sp, #0]
 80020aa:	6800      	ldr	r0, [r0, #0]
 80020ac:	ab05      	add	r3, sp, #20
 80020ae:	f7ff fecf 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80020b2:	b007      	add	sp, #28
 80020b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80020b8:	200010d0 	ldrdcs	r1, [r0], -r0

080020bc <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 80020bc:	f1a0 0004 	sub.w	r0, r0, #4
 80020c0:	e7ea      	b.n	8002098 <StoreNetwork::SaveIp(unsigned int)>
 80020c2:	bf00      	nop

080020c4 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 80020c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80020c6:	460b      	mov	r3, r1
 80020c8:	2020      	movs	r0, #32
 80020ca:	2100      	movs	r1, #0
 80020cc:	2a40      	cmp	r2, #64	; 0x40
 80020ce:	bf28      	it	cs
 80020d0:	2240      	movcs	r2, #64	; 0x40
 80020d2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80020d6:	4804      	ldr	r0, [pc, #16]	; (80020e8 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 80020d8:	9200      	str	r2, [sp, #0]
 80020da:	6800      	ldr	r0, [r0, #0]
 80020dc:	2215      	movs	r2, #21
 80020de:	f7ff feb7 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80020e2:	b005      	add	sp, #20
 80020e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80020e8:	200010d0 	ldrdcs	r1, [r0], -r0

080020ec <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 80020ec:	f1a0 0004 	sub.w	r0, r0, #4
 80020f0:	e7e8      	b.n	80020c4 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 80020f2:	bf00      	nop

080020f4 <StoreNetwork::~StoreNetwork()>:
 80020f4:	b510      	push	{r4, lr}
 80020f6:	4604      	mov	r4, r0
 80020f8:	f002 fa96 	bl	8004628 <operator delete(void*)>
 80020fc:	4620      	mov	r0, r4
 80020fe:	bd10      	pop	{r4, pc}

08002100 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8002100:	f1a0 0004 	sub.w	r0, r0, #4
 8002104:	e7f6      	b.n	80020f4 <StoreNetwork::~StoreNetwork()>
	...

08002108 <StoreNetwork::Copy(networkparams::Params*)>:
 8002108:	b507      	push	{r0, r1, r2, lr}
 800210a:	2301      	movs	r3, #1
 800210c:	460a      	mov	r2, r1
 800210e:	2100      	movs	r1, #0
 8002110:	e9cd 1300 	strd	r1, r3, [sp]
 8002114:	4803      	ldr	r0, [pc, #12]	; (8002124 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 8002116:	235e      	movs	r3, #94	; 0x5e
 8002118:	6800      	ldr	r0, [r0, #0]
 800211a:	f7ff fed9 	bl	8001ed0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800211e:	b003      	add	sp, #12
 8002120:	f85d fb04 	ldr.w	pc, [sp], #4
 8002124:	200010d0 	ldrdcs	r1, [r0], -r0

08002128 <StoreNetwork::StoreNetwork()>:
 8002128:	4a03      	ldr	r2, [pc, #12]	; (8002138 <StoreNetwork::StoreNetwork()+0x10>)
 800212a:	6002      	str	r2, [r0, #0]
 800212c:	322c      	adds	r2, #44	; 0x2c
 800212e:	6042      	str	r2, [r0, #4]
 8002130:	4a02      	ldr	r2, [pc, #8]	; (800213c <StoreNetwork::StoreNetwork()+0x14>)
 8002132:	6010      	str	r0, [r2, #0]
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop
 8002138:	08006e0c 	stmdaeq	r0, {r2, r3, r9, sl, fp, sp, lr}
 800213c:	200010d8 	ldrdcs	r1, [r0], -r8

08002140 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8002140:	4770      	bx	lr
	...

08002144 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8002144:	b507      	push	{r0, r1, r2, lr}
 8002146:	2300      	movs	r3, #0
 8002148:	460a      	mov	r2, r1
 800214a:	2101      	movs	r1, #1
 800214c:	e9cd 3100 	strd	r3, r1, [sp]
 8002150:	4804      	ldr	r0, [pc, #16]	; (8002164 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 8002152:	2320      	movs	r3, #32
 8002154:	210c      	movs	r1, #12
 8002156:	6800      	ldr	r0, [r0, #0]
 8002158:	f7ff feba 	bl	8001ed0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800215c:	b003      	add	sp, #12
 800215e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002162:	bf00      	nop
 8002164:	200010d0 	ldrdcs	r1, [r0], -r0

08002168 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8002168:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800216a:	2200      	movs	r2, #0
 800216c:	460b      	mov	r3, r1
 800216e:	2120      	movs	r1, #32
 8002170:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002174:	4804      	ldr	r0, [pc, #16]	; (8002188 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8002176:	9100      	str	r1, [sp, #0]
 8002178:	6800      	ldr	r0, [r0, #0]
 800217a:	210c      	movs	r1, #12
 800217c:	f7ff fe68 	bl	8001e50 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002180:	b005      	add	sp, #20
 8002182:	f85d fb04 	ldr.w	pc, [sp], #4
 8002186:	bf00      	nop
 8002188:	200010d0 	ldrdcs	r1, [r0], -r0

0800218c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800218c:	b510      	push	{r4, lr}
 800218e:	4604      	mov	r4, r0
 8002190:	f002 fa4a 	bl	8004628 <operator delete(void*)>
 8002194:	4620      	mov	r0, r4
 8002196:	bd10      	pop	{r4, pc}

08002198 <StoreRemoteConfig::StoreRemoteConfig()>:
 8002198:	4a02      	ldr	r2, [pc, #8]	; (80021a4 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800219a:	6002      	str	r2, [r0, #0]
 800219c:	4a02      	ldr	r2, [pc, #8]	; (80021a8 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800219e:	6010      	str	r0, [r2, #0]
 80021a0:	4770      	bx	lr
 80021a2:	bf00      	nop
 80021a4:	08006e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp, sp, lr}
 80021a8:	200010dc 	ldrdcs	r1, [r0], -ip

080021ac <StoreDevice::StoreDevice()>:
 80021ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80021ae:	2200      	movs	r2, #0
 80021b0:	4604      	mov	r4, r0
 80021b2:	7002      	strb	r2, [r0, #0]
 80021b4:	4611      	mov	r1, r2
 80021b6:	4610      	mov	r0, r2
 80021b8:	f000 fda0 	bl	8002cfc <spi_flash_probe(unsigned int, unsigned int, unsigned int)>
 80021bc:	2800      	cmp	r0, #0
 80021be:	db14      	blt.n	80021ea <StoreDevice::StoreDevice()+0x3e>
 80021c0:	f000 fce4 	bl	8002b8c <spi_flash_get_name()>
 80021c4:	4605      	mov	r5, r0
 80021c6:	f000 fcdb 	bl	8002b80 <spi_flash_get_sector_size()>
 80021ca:	4606      	mov	r6, r0
 80021cc:	f000 fcd2 	bl	8002b74 <spi_flash_get_size()>
 80021d0:	4607      	mov	r7, r0
 80021d2:	f000 fccf 	bl	8002b74 <spi_flash_get_size()>
 80021d6:	0a80      	lsrs	r0, r0, #10
 80021d8:	463b      	mov	r3, r7
 80021da:	9000      	str	r0, [sp, #0]
 80021dc:	4632      	mov	r2, r6
 80021de:	4629      	mov	r1, r5
 80021e0:	4803      	ldr	r0, [pc, #12]	; (80021f0 <StoreDevice::StoreDevice()+0x44>)
 80021e2:	f7fe fee7 	bl	8000fb4 <printf>
 80021e6:	2301      	movs	r3, #1
 80021e8:	7023      	strb	r3, [r4, #0]
 80021ea:	4620      	mov	r0, r4
 80021ec:	b003      	add	sp, #12
 80021ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021f0:	08006e6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, fp, sp, lr}

080021f4 <StoreDevice::GetSize() const>:
 80021f4:	f000 bcbe 	b.w	8002b74 <spi_flash_get_size()>

080021f8 <StoreDevice::GetSectorSize() const>:
 80021f8:	f000 bcc2 	b.w	8002b80 <spi_flash_get_sector_size()>

080021fc <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 80021fc:	b508      	push	{r3, lr}
 80021fe:	4608      	mov	r0, r1
 8002200:	4611      	mov	r1, r2
 8002202:	461a      	mov	r2, r3
 8002204:	f000 fd02 	bl	8002c0c <spi_flash_cmd_read_fast(unsigned int, unsigned int, unsigned char*)>
 8002208:	9b02      	ldr	r3, [sp, #8]
 800220a:	0fc0      	lsrs	r0, r0, #31
 800220c:	6018      	str	r0, [r3, #0]
 800220e:	2001      	movs	r0, #1
 8002210:	bd08      	pop	{r3, pc}

08002212 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8002212:	b510      	push	{r4, lr}
 8002214:	4608      	mov	r0, r1
 8002216:	4611      	mov	r1, r2
 8002218:	461c      	mov	r4, r3
 800221a:	f000 fd23 	bl	8002c64 <spi_flash_cmd_erase(unsigned int, unsigned int)>
 800221e:	0fc0      	lsrs	r0, r0, #31
 8002220:	6020      	str	r0, [r4, #0]
 8002222:	2001      	movs	r0, #1
 8002224:	bd10      	pop	{r4, pc}

08002226 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8002226:	b508      	push	{r3, lr}
 8002228:	4608      	mov	r0, r1
 800222a:	4611      	mov	r1, r2
 800222c:	461a      	mov	r2, r3
 800222e:	f000 fcb3 	bl	8002b98 <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)>
 8002232:	9b02      	ldr	r3, [sp, #8]
 8002234:	0fc0      	lsrs	r0, r0, #31
 8002236:	6018      	str	r0, [r3, #0]
 8002238:	2001      	movs	r0, #1
 800223a:	bd08      	pop	{r3, pc}

0800223c <Display::PrintInfo() [clone .isra.0]>:
 800223c:	b910      	cbnz	r0, 8002244 <Display::PrintInfo() [clone .isra.0]+0x8>
 800223e:	4803      	ldr	r0, [pc, #12]	; (800224c <Display::PrintInfo() [clone .isra.0]+0x10>)
 8002240:	f002 ba7a 	b.w	8004738 <puts>
 8002244:	6803      	ldr	r3, [r0, #0]
 8002246:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002248:	4718      	bx	r3
 800224a:	bf00      	nop
 800224c:	08006eb1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, fp, sp, lr}

08002250 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8002250:	b513      	push	{r0, r1, r4, lr}
 8002252:	4604      	mov	r4, r0
 8002254:	0a13      	lsrs	r3, r2, #8
 8002256:	7800      	ldrb	r0, [r0, #0]
 8002258:	f88d 1004 	strb.w	r1, [sp, #4]
 800225c:	f88d 3005 	strb.w	r3, [sp, #5]
 8002260:	f88d 2006 	strb.w	r2, [sp, #6]
 8002264:	f003 fd34 	bl	8005cd0 <gd32_i2c_set_address>
 8002268:	6860      	ldr	r0, [r4, #4]
 800226a:	f003 fd29 	bl	8005cc0 <gd32_i2c_set_baudrate>
 800226e:	2103      	movs	r1, #3
 8002270:	a801      	add	r0, sp, #4
 8002272:	f003 fd33 	bl	8005cdc <gd32_i2c_write>
 8002276:	b002      	add	sp, #8
 8002278:	bd10      	pop	{r4, pc}

0800227a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800227a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800227c:	460d      	mov	r5, r1
 800227e:	4604      	mov	r4, r0
 8002280:	f003 fd26 	bl	8005cd0 <gd32_i2c_set_address>
 8002284:	4628      	mov	r0, r5
 8002286:	f003 fd1b 	bl	8005cc0 <gd32_i2c_set_baudrate>
 800228a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800228e:	2b07      	cmp	r3, #7
 8002290:	d902      	bls.n	8002298 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8002292:	3c50      	subs	r4, #80	; 0x50
 8002294:	2c0f      	cmp	r4, #15
 8002296:	d809      	bhi.n	80022ac <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8002298:	2101      	movs	r1, #1
 800229a:	f10d 0007 	add.w	r0, sp, #7
 800229e:	f003 fd83 	bl	8005da8 <gd32_i2c_read>
 80022a2:	fab0 f080 	clz	r0, r0
 80022a6:	0940      	lsrs	r0, r0, #5
 80022a8:	b003      	add	sp, #12
 80022aa:	bd30      	pop	{r4, r5, pc}
 80022ac:	2100      	movs	r1, #0
 80022ae:	4608      	mov	r0, r1
 80022b0:	f003 fd14 	bl	8005cdc <gd32_i2c_write>
 80022b4:	e7f5      	b.n	80022a2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080022b6 <Display::Detect7Segment()>:
 80022b6:	b538      	push	{r3, r4, r5, lr}
 80022b8:	68c1      	ldr	r1, [r0, #12]
 80022ba:	4604      	mov	r4, r0
 80022bc:	7a00      	ldrb	r0, [r0, #8]
 80022be:	f7ff ffdc 	bl	800227a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80022c2:	7460      	strb	r0, [r4, #17]
 80022c4:	b170      	cbz	r0, 80022e4 <Display::Detect7Segment()+0x2e>
 80022c6:	2200      	movs	r2, #0
 80022c8:	f104 0508 	add.w	r5, r4, #8
 80022cc:	4611      	mov	r1, r2
 80022ce:	4628      	mov	r0, r5
 80022d0:	f7ff ffbe 	bl	8002250 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80022d4:	7c63      	ldrb	r3, [r4, #17]
 80022d6:	b12b      	cbz	r3, 80022e4 <Display::Detect7Segment()+0x2e>
 80022d8:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80022dc:	2112      	movs	r1, #18
 80022de:	4628      	mov	r0, r5
 80022e0:	f7ff ffb6 	bl	8002250 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80022e4:	bd38      	pop	{r3, r4, r5, pc}
	...

080022e8 <Display::Detect(unsigned int)>:
 80022e8:	b538      	push	{r3, r4, r5, lr}
 80022ea:	4605      	mov	r5, r0
 80022ec:	460c      	mov	r4, r1
 80022ee:	203c      	movs	r0, #60	; 0x3c
 80022f0:	4911      	ldr	r1, [pc, #68]	; (8002338 <Display::Detect(unsigned int)+0x50>)
 80022f2:	f7ff ffc2 	bl	800227a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80022f6:	b1b0      	cbz	r0, 8002326 <Display::Detect(unsigned int)+0x3e>
 80022f8:	2c04      	cmp	r4, #4
 80022fa:	f04f 0018 	mov.w	r0, #24
 80022fe:	d816      	bhi.n	800232e <Display::Detect(unsigned int)+0x46>
 8002300:	f002 f996 	bl	8004630 <operator new(unsigned int)>
 8002304:	2101      	movs	r1, #1
 8002306:	4604      	mov	r4, r0
 8002308:	f000 f8aa 	bl	8002460 <Ssd1306::Ssd1306(TOledPanel)>
 800230c:	6823      	ldr	r3, [r4, #0]
 800230e:	4620      	mov	r0, r4
 8002310:	689b      	ldr	r3, [r3, #8]
 8002312:	61ac      	str	r4, [r5, #24]
 8002314:	4798      	blx	r3
 8002316:	b130      	cbz	r0, 8002326 <Display::Detect(unsigned int)+0x3e>
 8002318:	2302      	movs	r3, #2
 800231a:	2101      	movs	r1, #1
 800231c:	4628      	mov	r0, r5
 800231e:	4a07      	ldr	r2, [pc, #28]	; (800233c <Display::Detect(unsigned int)+0x54>)
 8002320:	602b      	str	r3, [r5, #0]
 8002322:	f7fe fa82 	bl	800082a <Display::Printf(unsigned char, char const*, ...)>
 8002326:	69ab      	ldr	r3, [r5, #24]
 8002328:	b903      	cbnz	r3, 800232c <Display::Detect(unsigned int)+0x44>
 800232a:	616b      	str	r3, [r5, #20]
 800232c:	bd38      	pop	{r3, r4, r5, pc}
 800232e:	f002 f97f 	bl	8004630 <operator new(unsigned int)>
 8002332:	2100      	movs	r1, #0
 8002334:	4604      	mov	r4, r0
 8002336:	e7e7      	b.n	8002308 <Display::Detect(unsigned int)+0x20>
 8002338:	000186a0 	andeq	r8, r1, r0, lsr #13
 800233c:	08006ec2 	stmdaeq	r0, {r1, r6, r7, r9, sl, fp, sp, lr}

08002340 <Display::Display(unsigned int)>:
 8002340:	2304      	movs	r3, #4
 8002342:	b510      	push	{r4, lr}
 8002344:	6003      	str	r3, [r0, #0]
 8002346:	4b0e      	ldr	r3, [pc, #56]	; (8002380 <Display::Display(unsigned int)+0x40>)
 8002348:	4604      	mov	r4, r0
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	4a0d      	ldr	r2, [pc, #52]	; (8002384 <Display::Display(unsigned int)+0x44>)
 800234e:	6043      	str	r3, [r0, #4]
 8002350:	2321      	movs	r3, #33	; 0x21
 8002352:	7203      	strb	r3, [r0, #8]
 8002354:	4b0c      	ldr	r3, [pc, #48]	; (8002388 <Display::Display(unsigned int)+0x48>)
 8002356:	60c3      	str	r3, [r0, #12]
 8002358:	2300      	movs	r3, #0
 800235a:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800235e:	8203      	strh	r3, [r0, #16]
 8002360:	4b0a      	ldr	r3, [pc, #40]	; (800238c <Display::Display(unsigned int)+0x4c>)
 8002362:	6018      	str	r0, [r3, #0]
 8002364:	f7ff ffc0 	bl	80022e8 <Display::Detect(unsigned int)>
 8002368:	4620      	mov	r0, r4
 800236a:	f7ff ffa4 	bl	80022b6 <Display::Detect7Segment()>
 800236e:	69a3      	ldr	r3, [r4, #24]
 8002370:	b10b      	cbz	r3, 8002376 <Display::Display(unsigned int)+0x36>
 8002372:	f000 fa05 	bl	8002780 <display::timeout::gpio_init()>
 8002376:	69a0      	ldr	r0, [r4, #24]
 8002378:	f7ff ff60 	bl	800223c <Display::PrintInfo() [clone .isra.0]>
 800237c:	4620      	mov	r0, r4
 800237e:	bd10      	pop	{r4, pc}
 8002380:	200039fc 	strdcs	r3, [r0], -ip
 8002384:	000493e0 	andeq	r9, r4, r0, ror #7
 8002388:	00061a80 	andeq	r1, r6, r0, lsl #21
 800238c:	200010e0 	andcs	r1, r0, r0, ror #1

08002390 <Ssd1306::~Ssd1306()>:
 8002390:	4770      	bx	lr

08002392 <Ssd1306::SetCursor(unsigned int)>:
 8002392:	4770      	bx	lr

08002394 <Ssd1306::PrintInfo()>:
 8002394:	b410      	push	{r4}
 8002396:	4906      	ldr	r1, [pc, #24]	; (80023b0 <Ssd1306::PrintInfo()+0x1c>)
 8002398:	7c44      	ldrb	r4, [r0, #17]
 800239a:	7903      	ldrb	r3, [r0, #4]
 800239c:	7942      	ldrb	r2, [r0, #5]
 800239e:	4805      	ldr	r0, [pc, #20]	; (80023b4 <Ssd1306::PrintInfo()+0x20>)
 80023a0:	2c00      	cmp	r4, #0
 80023a2:	bf08      	it	eq
 80023a4:	4601      	moveq	r1, r0
 80023a6:	4804      	ldr	r0, [pc, #16]	; (80023b8 <Ssd1306::PrintInfo()+0x24>)
 80023a8:	bc10      	pop	{r4}
 80023aa:	f7fe be03 	b.w	8000fb4 <printf>
 80023ae:	bf00      	nop
 80023b0:	08006eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, sp, lr}
 80023b4:	08006ec2 	stmdaeq	r0, {r1, r6, r7, r9, sl, fp, sp, lr}
 80023b8:	08006ed1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, fp, sp, lr}

080023bc <Ssd1306::~Ssd1306()>:
 80023bc:	b510      	push	{r4, lr}
 80023be:	4604      	mov	r4, r0
 80023c0:	f002 f932 	bl	8004628 <operator delete(void*)>
 80023c4:	4620      	mov	r0, r4
 80023c6:	bd10      	pop	{r4, pc}

080023c8 <HAL_I2C::Setup()>:
 80023c8:	b510      	push	{r4, lr}
 80023ca:	4604      	mov	r4, r0
 80023cc:	7800      	ldrb	r0, [r0, #0]
 80023ce:	f003 fc7f 	bl	8005cd0 <gd32_i2c_set_address>
 80023d2:	6860      	ldr	r0, [r4, #4]
 80023d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023d8:	f003 bc72 	b.w	8005cc0 <gd32_i2c_set_baudrate>

080023dc <Ssd1306::PutChar(int)>:
 80023dc:	b510      	push	{r4, lr}
 80023de:	f1a1 0420 	sub.w	r4, r1, #32
 80023e2:	2c5f      	cmp	r4, #95	; 0x5f
 80023e4:	bf88      	it	hi
 80023e6:	2400      	movhi	r4, #0
 80023e8:	3008      	adds	r0, #8
 80023ea:	f7ff ffed 	bl	80023c8 <HAL_I2C::Setup()>
 80023ee:	4804      	ldr	r0, [pc, #16]	; (8002400 <Ssd1306::PutChar(int)+0x24>)
 80023f0:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80023f4:	4420      	add	r0, r4
 80023f6:	2107      	movs	r1, #7
 80023f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023fc:	f003 bc6e 	b.w	8005cdc <gd32_i2c_write>
 8002400:	08006ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp, sp, lr}

08002404 <Ssd1306::PutString(char const*)>:
 8002404:	b538      	push	{r3, r4, r5, lr}
 8002406:	4605      	mov	r5, r0
 8002408:	1e4c      	subs	r4, r1, #1
 800240a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800240e:	b901      	cbnz	r1, 8002412 <Ssd1306::PutString(char const*)+0xe>
 8002410:	bd38      	pop	{r3, r4, r5, pc}
 8002412:	4628      	mov	r0, r5
 8002414:	f7ff ffe2 	bl	80023dc <Ssd1306::PutChar(int)>
 8002418:	e7f7      	b.n	800240a <Ssd1306::PutString(char const*)+0x6>

0800241a <Ssd1306::Text(char const*, unsigned int)>:
 800241a:	b570      	push	{r4, r5, r6, lr}
 800241c:	7903      	ldrb	r3, [r0, #4]
 800241e:	4605      	mov	r5, r0
 8002420:	460c      	mov	r4, r1
 8002422:	4293      	cmp	r3, r2
 8002424:	bf94      	ite	ls
 8002426:	18ce      	addls	r6, r1, r3
 8002428:	188e      	addhi	r6, r1, r2
 800242a:	42b4      	cmp	r4, r6
 800242c:	d100      	bne.n	8002430 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800242e:	bd70      	pop	{r4, r5, r6, pc}
 8002430:	4628      	mov	r0, r5
 8002432:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002436:	f7ff ffd1 	bl	80023dc <Ssd1306::PutChar(int)>
 800243a:	e7f6      	b.n	800242a <Ssd1306::Text(char const*, unsigned int)+0x10>

0800243c <Ssd1306::InitMembers()>:
 800243c:	7c03      	ldrb	r3, [r0, #16]
 800243e:	b14b      	cbz	r3, 8002454 <Ssd1306::InitMembers()+0x18>
 8002440:	3b01      	subs	r3, #1
 8002442:	2b01      	cmp	r3, #1
 8002444:	d909      	bls.n	800245a <Ssd1306::InitMembers()+0x1e>
 8002446:	2308      	movs	r3, #8
 8002448:	2204      	movs	r2, #4
 800244a:	2115      	movs	r1, #21
 800244c:	7143      	strb	r3, [r0, #5]
 800244e:	7101      	strb	r1, [r0, #4]
 8002450:	6142      	str	r2, [r0, #20]
 8002452:	4770      	bx	lr
 8002454:	2308      	movs	r3, #8
 8002456:	461a      	mov	r2, r3
 8002458:	e7f7      	b.n	800244a <Ssd1306::InitMembers()+0xe>
 800245a:	2304      	movs	r3, #4
 800245c:	e7fb      	b.n	8002456 <Ssd1306::InitMembers()+0x1a>
	...

08002460 <Ssd1306::Ssd1306(TOledPanel)>:
 8002460:	4a08      	ldr	r2, [pc, #32]	; (8002484 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8002462:	b508      	push	{r3, lr}
 8002464:	6002      	str	r2, [r0, #0]
 8002466:	227f      	movs	r2, #127	; 0x7f
 8002468:	80c2      	strh	r2, [r0, #6]
 800246a:	223c      	movs	r2, #60	; 0x3c
 800246c:	7202      	strb	r2, [r0, #8]
 800246e:	4a06      	ldr	r2, [pc, #24]	; (8002488 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8002470:	7401      	strb	r1, [r0, #16]
 8002472:	60c2      	str	r2, [r0, #12]
 8002474:	2200      	movs	r2, #0
 8002476:	7442      	strb	r2, [r0, #17]
 8002478:	4a04      	ldr	r2, [pc, #16]	; (800248c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800247a:	6010      	str	r0, [r2, #0]
 800247c:	f7ff ffde 	bl	800243c <Ssd1306::InitMembers()>
 8002480:	bd08      	pop	{r3, pc}
 8002482:	bf00      	nop
 8002484:	080071bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip, sp, lr}
 8002488:	00061a80 	andeq	r1, r6, r0, lsl #21
 800248c:	2000116c 	andcs	r1, r0, ip, ror #2

08002490 <Ssd1306::SendCommand(unsigned char)>:
 8002490:	2300      	movs	r3, #0
 8002492:	b507      	push	{r0, r1, r2, lr}
 8002494:	3008      	adds	r0, #8
 8002496:	f88d 3004 	strb.w	r3, [sp, #4]
 800249a:	f88d 1005 	strb.w	r1, [sp, #5]
 800249e:	f7ff ff93 	bl	80023c8 <HAL_I2C::Setup()>
 80024a2:	2102      	movs	r1, #2
 80024a4:	a801      	add	r0, sp, #4
 80024a6:	f003 fc19 	bl	8005cdc <gd32_i2c_write>
 80024aa:	b003      	add	sp, #12
 80024ac:	f85d fb04 	ldr.w	pc, [sp], #4

080024b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80024b0:	2914      	cmp	r1, #20
 80024b2:	b570      	push	{r4, r5, r6, lr}
 80024b4:	4605      	mov	r5, r0
 80024b6:	4616      	mov	r6, r2
 80024b8:	d81c      	bhi.n	80024f4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80024ba:	7943      	ldrb	r3, [r0, #5]
 80024bc:	4293      	cmp	r3, r2
 80024be:	d919      	bls.n	80024f4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80024c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80024c4:	7c43      	ldrb	r3, [r0, #17]
 80024c6:	004c      	lsls	r4, r1, #1
 80024c8:	b2e4      	uxtb	r4, r4
 80024ca:	b10b      	cbz	r3, 80024d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 80024cc:	3404      	adds	r4, #4
 80024ce:	b2e4      	uxtb	r4, r4
 80024d0:	4628      	mov	r0, r5
 80024d2:	f004 010e 	and.w	r1, r4, #14
 80024d6:	f7ff ffdb 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80024da:	0921      	lsrs	r1, r4, #4
 80024dc:	4628      	mov	r0, r5
 80024de:	f041 0110 	orr.w	r1, r1, #16
 80024e2:	f7ff ffd5 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80024e6:	4628      	mov	r0, r5
 80024e8:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 80024ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024f0:	f7ff bfce 	b.w	8002490 <Ssd1306::SendCommand(unsigned char)>
 80024f4:	bd70      	pop	{r4, r5, r6, pc}

080024f6 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 80024f6:	b570      	push	{r4, r5, r6, lr}
 80024f8:	461e      	mov	r6, r3
 80024fa:	7943      	ldrb	r3, [r0, #5]
 80024fc:	4604      	mov	r4, r0
 80024fe:	428b      	cmp	r3, r1
 8002500:	4615      	mov	r5, r2
 8002502:	d30b      	bcc.n	800251c <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8002504:	3901      	subs	r1, #1
 8002506:	b2ca      	uxtb	r2, r1
 8002508:	2100      	movs	r1, #0
 800250a:	f7ff ffd1 	bl	80024b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800250e:	4632      	mov	r2, r6
 8002510:	4629      	mov	r1, r5
 8002512:	4620      	mov	r0, r4
 8002514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002518:	f7ff bf7f 	b.w	800241a <Ssd1306::Text(char const*, unsigned int)>
 800251c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002520 <Ssd1306::ClearLine(unsigned char)>:
 8002520:	b538      	push	{r3, r4, r5, lr}
 8002522:	7943      	ldrb	r3, [r0, #5]
 8002524:	4605      	mov	r5, r0
 8002526:	428b      	cmp	r3, r1
 8002528:	d314      	bcc.n	8002554 <Ssd1306::ClearLine(unsigned char)+0x34>
 800252a:	3901      	subs	r1, #1
 800252c:	b2cc      	uxtb	r4, r1
 800252e:	4622      	mov	r2, r4
 8002530:	2100      	movs	r1, #0
 8002532:	f7ff ffbd 	bl	80024b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8002536:	f105 0008 	add.w	r0, r5, #8
 800253a:	f7ff ff45 	bl	80023c8 <HAL_I2C::Setup()>
 800253e:	2181      	movs	r1, #129	; 0x81
 8002540:	4805      	ldr	r0, [pc, #20]	; (8002558 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8002542:	f003 fbcb 	bl	8005cdc <gd32_i2c_write>
 8002546:	4622      	mov	r2, r4
 8002548:	4628      	mov	r0, r5
 800254a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800254e:	2100      	movs	r1, #0
 8002550:	f7ff bfae 	b.w	80024b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8002554:	bd38      	pop	{r3, r4, r5, pc}
 8002556:	bf00      	nop
 8002558:	200010e4 	andcs	r1, r0, r4, ror #1

0800255c <Ssd1306::SetSleep(bool)>:
 800255c:	b111      	cbz	r1, 8002564 <Ssd1306::SetSleep(bool)+0x8>
 800255e:	21ae      	movs	r1, #174	; 0xae
 8002560:	f7ff bf96 	b.w	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002564:	21af      	movs	r1, #175	; 0xaf
 8002566:	e7fb      	b.n	8002560 <Ssd1306::SetSleep(bool)+0x4>

08002568 <Ssd1306::SetContrast(unsigned char)>:
 8002568:	b538      	push	{r3, r4, r5, lr}
 800256a:	4604      	mov	r4, r0
 800256c:	460d      	mov	r5, r1
 800256e:	7181      	strb	r1, [r0, #6]
 8002570:	2181      	movs	r1, #129	; 0x81
 8002572:	f7ff ff8d 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002576:	4629      	mov	r1, r5
 8002578:	4620      	mov	r0, r4
 800257a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800257e:	f7ff bf87 	b.w	8002490 <Ssd1306::SendCommand(unsigned char)>

08002582 <Ssd1306::SetFlipVertically(bool)>:
 8002582:	b510      	push	{r4, lr}
 8002584:	4604      	mov	r4, r0
 8002586:	71c1      	strb	r1, [r0, #7]
 8002588:	b141      	cbz	r1, 800259c <Ssd1306::SetFlipVertically(bool)+0x1a>
 800258a:	21c0      	movs	r1, #192	; 0xc0
 800258c:	f7ff ff80 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002590:	21a0      	movs	r1, #160	; 0xa0
 8002592:	4620      	mov	r0, r4
 8002594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002598:	f7ff bf7a 	b.w	8002490 <Ssd1306::SendCommand(unsigned char)>
 800259c:	21c8      	movs	r1, #200	; 0xc8
 800259e:	f7ff ff77 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025a2:	21a1      	movs	r1, #161	; 0xa1
 80025a4:	e7f5      	b.n	8002592 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080025a8 <Ssd1306::CheckSH1106()>:
 80025a8:	b530      	push	{r4, r5, lr}
 80025aa:	4604      	mov	r4, r0
 80025ac:	b087      	sub	sp, #28
 80025ae:	2100      	movs	r1, #0
 80025b0:	f7ff ff6e 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025b4:	2190      	movs	r1, #144	; 0x90
 80025b6:	4620      	mov	r0, r4
 80025b8:	f7ff ff6a 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025bc:	21b0      	movs	r1, #176	; 0xb0
 80025be:	4620      	mov	r0, r4
 80025c0:	f7ff ff66 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025c4:	4b22      	ldr	r3, [pc, #136]	; (8002650 <Ssd1306::CheckSH1106()+0xa8>)
 80025c6:	f104 0508 	add.w	r5, r4, #8
 80025ca:	6818      	ldr	r0, [r3, #0]
 80025cc:	791b      	ldrb	r3, [r3, #4]
 80025ce:	9002      	str	r0, [sp, #8]
 80025d0:	4628      	mov	r0, r5
 80025d2:	f88d 300c 	strb.w	r3, [sp, #12]
 80025d6:	f7ff fef7 	bl	80023c8 <HAL_I2C::Setup()>
 80025da:	2105      	movs	r1, #5
 80025dc:	a802      	add	r0, sp, #8
 80025de:	f003 fb7d 	bl	8005cdc <gd32_i2c_write>
 80025e2:	2100      	movs	r1, #0
 80025e4:	4620      	mov	r0, r4
 80025e6:	f7ff ff53 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025ea:	2190      	movs	r1, #144	; 0x90
 80025ec:	4620      	mov	r0, r4
 80025ee:	f7ff ff4f 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025f2:	21b0      	movs	r1, #176	; 0xb0
 80025f4:	4620      	mov	r0, r4
 80025f6:	f7ff ff4b 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80025fa:	2300      	movs	r3, #0
 80025fc:	9304      	str	r3, [sp, #16]
 80025fe:	f88d 3014 	strb.w	r3, [sp, #20]
 8002602:	2340      	movs	r3, #64	; 0x40
 8002604:	4628      	mov	r0, r5
 8002606:	f88d 3007 	strb.w	r3, [sp, #7]
 800260a:	f7ff fedd 	bl	80023c8 <HAL_I2C::Setup()>
 800260e:	2101      	movs	r1, #1
 8002610:	f10d 0007 	add.w	r0, sp, #7
 8002614:	f003 fb62 	bl	8005cdc <gd32_i2c_write>
 8002618:	4628      	mov	r0, r5
 800261a:	f7ff fed5 	bl	80023c8 <HAL_I2C::Setup()>
 800261e:	2105      	movs	r1, #5
 8002620:	a804      	add	r0, sp, #16
 8002622:	f003 fbc1 	bl	8005da8 <gd32_i2c_read>
 8002626:	2004      	movs	r0, #4
 8002628:	aa02      	add	r2, sp, #8
 800262a:	a904      	add	r1, sp, #16
 800262c:	3801      	subs	r0, #1
 800262e:	d201      	bcs.n	8002634 <Ssd1306::CheckSH1106()+0x8c>
 8002630:	2300      	movs	r3, #0
 8002632:	e006      	b.n	8002642 <Ssd1306::CheckSH1106()+0x9a>
 8002634:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8002638:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800263c:	42ab      	cmp	r3, r5
 800263e:	d0f5      	beq.n	800262c <Ssd1306::CheckSH1106()+0x84>
 8002640:	1b5b      	subs	r3, r3, r5
 8002642:	fab3 f383 	clz	r3, r3
 8002646:	095b      	lsrs	r3, r3, #5
 8002648:	7463      	strb	r3, [r4, #17]
 800264a:	b007      	add	sp, #28
 800264c:	bd30      	pop	{r4, r5, pc}
 800264e:	bf00      	nop
 8002650:	08006edd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, sp, lr}

08002654 <Ssd1306::Cls()>:
 8002654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002658:	4604      	mov	r4, r0
 800265a:	2600      	movs	r6, #0
 800265c:	7c45      	ldrb	r5, [r0, #17]
 800265e:	00ad      	lsls	r5, r5, #2
 8002660:	b2ed      	uxtb	r5, r5
 8002662:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8002666:	f045 0810 	orr.w	r8, r5, #16
 800266a:	b2ff      	uxtb	r7, r7
 800266c:	6963      	ldr	r3, [r4, #20]
 800266e:	4629      	mov	r1, r5
 8002670:	42b3      	cmp	r3, r6
 8002672:	4620      	mov	r0, r4
 8002674:	d80b      	bhi.n	800268e <Ssd1306::Cls()+0x3a>
 8002676:	f7ff ff0b 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 800267a:	4641      	mov	r1, r8
 800267c:	4620      	mov	r0, r4
 800267e:	f7ff ff07 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002682:	4620      	mov	r0, r4
 8002684:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002688:	21b0      	movs	r1, #176	; 0xb0
 800268a:	f7ff bf01 	b.w	8002490 <Ssd1306::SendCommand(unsigned char)>
 800268e:	f7ff feff 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002692:	4641      	mov	r1, r8
 8002694:	4620      	mov	r0, r4
 8002696:	f7ff fefb 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 800269a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800269e:	4620      	mov	r0, r4
 80026a0:	b2c9      	uxtb	r1, r1
 80026a2:	f7ff fef5 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 80026a6:	7c23      	ldrb	r3, [r4, #16]
 80026a8:	b123      	cbz	r3, 80026b4 <Ssd1306::Cls()+0x60>
 80026aa:	3b01      	subs	r3, #1
 80026ac:	2b01      	cmp	r3, #1
 80026ae:	d901      	bls.n	80026b4 <Ssd1306::Cls()+0x60>
 80026b0:	3601      	adds	r6, #1
 80026b2:	e7db      	b.n	800266c <Ssd1306::Cls()+0x18>
 80026b4:	f104 0008 	add.w	r0, r4, #8
 80026b8:	f7ff fe86 	bl	80023c8 <HAL_I2C::Setup()>
 80026bc:	4639      	mov	r1, r7
 80026be:	4802      	ldr	r0, [pc, #8]	; (80026c8 <Ssd1306::Cls()+0x74>)
 80026c0:	f003 fb0c 	bl	8005cdc <gd32_i2c_write>
 80026c4:	e7f4      	b.n	80026b0 <Ssd1306::Cls()+0x5c>
 80026c6:	bf00      	nop
 80026c8:	200010e4 	andcs	r1, r0, r4, ror #1

080026cc <Ssd1306::Start()>:
 80026cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80026ce:	7a04      	ldrb	r4, [r0, #8]
 80026d0:	68c6      	ldr	r6, [r0, #12]
 80026d2:	4605      	mov	r5, r0
 80026d4:	4620      	mov	r0, r4
 80026d6:	f003 fafb 	bl	8005cd0 <gd32_i2c_set_address>
 80026da:	4630      	mov	r0, r6
 80026dc:	f003 faf0 	bl	8005cc0 <gd32_i2c_set_baudrate>
 80026e0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80026e4:	2b07      	cmp	r3, #7
 80026e6:	d902      	bls.n	80026ee <Ssd1306::Start()+0x22>
 80026e8:	3c50      	subs	r4, #80	; 0x50
 80026ea:	2c0f      	cmp	r4, #15
 80026ec:	d80f      	bhi.n	800270e <Ssd1306::Start()+0x42>
 80026ee:	2101      	movs	r1, #1
 80026f0:	f10d 0007 	add.w	r0, sp, #7
 80026f4:	f003 fb58 	bl	8005da8 <gd32_i2c_read>
 80026f8:	fab0 f480 	clz	r4, r0
 80026fc:	0964      	lsrs	r4, r4, #5
 80026fe:	b35c      	cbz	r4, 8002758 <Ssd1306::Start()+0x8c>
 8002700:	7c2e      	ldrb	r6, [r5, #16]
 8002702:	b14e      	cbz	r6, 8002718 <Ssd1306::Start()+0x4c>
 8002704:	3e01      	subs	r6, #1
 8002706:	2e01      	cmp	r6, #1
 8002708:	d929      	bls.n	800275e <Ssd1306::Start()+0x92>
 800270a:	2400      	movs	r4, #0
 800270c:	e024      	b.n	8002758 <Ssd1306::Start()+0x8c>
 800270e:	2100      	movs	r1, #0
 8002710:	4608      	mov	r0, r1
 8002712:	f003 fae3 	bl	8005cdc <gd32_i2c_write>
 8002716:	e7ef      	b.n	80026f8 <Ssd1306::Start()+0x2c>
 8002718:	4f16      	ldr	r7, [pc, #88]	; (8002774 <Ssd1306::Start()+0xa8>)
 800271a:	4628      	mov	r0, r5
 800271c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8002720:	3601      	adds	r6, #1
 8002722:	f7ff feb5 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002726:	2e18      	cmp	r6, #24
 8002728:	d1f7      	bne.n	800271a <Ssd1306::Start()+0x4e>
 800272a:	2300      	movs	r3, #0
 800272c:	4a12      	ldr	r2, [pc, #72]	; (8002778 <Ssd1306::Start()+0xac>)
 800272e:	4618      	mov	r0, r3
 8002730:	4611      	mov	r1, r2
 8002732:	3301      	adds	r3, #1
 8002734:	2b86      	cmp	r3, #134	; 0x86
 8002736:	f802 0b01 	strb.w	r0, [r2], #1
 800273a:	d1fa      	bne.n	8002732 <Ssd1306::Start()+0x66>
 800273c:	2340      	movs	r3, #64	; 0x40
 800273e:	4628      	mov	r0, r5
 8002740:	700b      	strb	r3, [r1, #0]
 8002742:	f7ff ff31 	bl	80025a8 <Ssd1306::CheckSH1106()>
 8002746:	4628      	mov	r0, r5
 8002748:	f7ff ff84 	bl	8002654 <Ssd1306::Cls()>
 800274c:	21af      	movs	r1, #175	; 0xaf
 800274e:	4628      	mov	r0, r5
 8002750:	f7ff fe9e 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 8002754:	2301      	movs	r3, #1
 8002756:	71eb      	strb	r3, [r5, #7]
 8002758:	4620      	mov	r0, r4
 800275a:	b003      	add	sp, #12
 800275c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800275e:	2600      	movs	r6, #0
 8002760:	4f06      	ldr	r7, [pc, #24]	; (800277c <Ssd1306::Start()+0xb0>)
 8002762:	4628      	mov	r0, r5
 8002764:	f817 1b01 	ldrb.w	r1, [r7], #1
 8002768:	3601      	adds	r6, #1
 800276a:	f7ff fe91 	bl	8002490 <Ssd1306::SendCommand(unsigned char)>
 800276e:	2e18      	cmp	r6, #24
 8002770:	d1f7      	bne.n	8002762 <Ssd1306::Start()+0x96>
 8002772:	e7da      	b.n	800272a <Ssd1306::Start()+0x5e>
 8002774:	0800719c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip, sp, lr}
 8002778:	200010e4 	andcs	r1, r0, r4, ror #1
 800277c:	08007184 	stmdaeq	r0, {r2, r7, r8, ip, sp, lr}

08002780 <display::timeout::gpio_init()>:
 8002780:	4770      	bx	lr
	...

08002784 <FlashCode::FlashCode()>:
 8002784:	b538      	push	{r3, r4, r5, lr}
 8002786:	4b09      	ldr	r3, [pc, #36]	; (80027ac <FlashCode::FlashCode()+0x28>)
 8002788:	4604      	mov	r4, r0
 800278a:	6018      	str	r0, [r3, #0]
 800278c:	2301      	movs	r3, #1
 800278e:	7003      	strb	r3, [r0, #0]
 8002790:	f000 f816 	bl	80027c0 <FlashCode::GetSize() const>
 8002794:	4605      	mov	r5, r0
 8002796:	4620      	mov	r0, r4
 8002798:	f000 f812 	bl	80027c0 <FlashCode::GetSize() const>
 800279c:	462a      	mov	r2, r5
 800279e:	0a83      	lsrs	r3, r0, #10
 80027a0:	4903      	ldr	r1, [pc, #12]	; (80027b0 <FlashCode::FlashCode()+0x2c>)
 80027a2:	4804      	ldr	r0, [pc, #16]	; (80027b4 <FlashCode::FlashCode()+0x30>)
 80027a4:	f7fe fc06 	bl	8000fb4 <printf>
 80027a8:	4620      	mov	r0, r4
 80027aa:	bd38      	pop	{r3, r4, r5, pc}
 80027ac:	20001170 	andcs	r1, r0, r0, ror r1
 80027b0:	080071f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip, sp, lr}
 80027b4:	080071ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp, lr}

080027b8 <FlashCode::GetName() const>:
 80027b8:	4800      	ldr	r0, [pc, #0]	; (80027bc <FlashCode::GetName() const+0x4>)
 80027ba:	4770      	bx	lr
 80027bc:	080071f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip, sp, lr}

080027c0 <FlashCode::GetSize() const>:
 80027c0:	4b02      	ldr	r3, [pc, #8]	; (80027cc <FlashCode::GetSize() const+0xc>)
 80027c2:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 80027c6:	0280      	lsls	r0, r0, #10
 80027c8:	4770      	bx	lr
 80027ca:	bf00      	nop
 80027cc:	1ffff700 	svcne	0x00fff700

080027d0 <FlashCode::GetSectorSize() const>:
 80027d0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80027d4:	4770      	bx	lr
	...

080027d8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 80027d8:	2000      	movs	r0, #0
 80027da:	b538      	push	{r3, r4, r5, lr}
 80027dc:	4c47      	ldr	r4, [pc, #284]	; (80028fc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 80027de:	6018      	str	r0, [r3, #0]
 80027e0:	6823      	ldr	r3, [r4, #0]
 80027e2:	2b04      	cmp	r3, #4
 80027e4:	f200 8082 	bhi.w	80028ec <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 80027e8:	e8df f003 	tbb	[pc, r3]
 80027ec:	78452003 	stmdavc	r5, {r0, r1, sp}^
 80027f0:	4b430080 	blmi	90c29f8 <__exidx_end+0x10bb340>
 80027f4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80027f8:	6019      	str	r1, [r3, #0]
 80027fa:	4b42      	ldr	r3, [pc, #264]	; (8002904 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 80027fc:	601a      	str	r2, [r3, #0]
 80027fe:	4b42      	ldr	r3, [pc, #264]	; (8002908 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 8002800:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002804:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002808:	4b40      	ldr	r3, [pc, #256]	; (800290c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800280a:	d807      	bhi.n	800281c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 800280c:	2201      	movs	r2, #1
 800280e:	701a      	strb	r2, [r3, #0]
 8002810:	f002 fd24 	bl	800525c <fmc_bank0_unlock>
 8002814:	2301      	movs	r3, #1
 8002816:	6023      	str	r3, [r4, #0]
 8002818:	2000      	movs	r0, #0
 800281a:	e026      	b.n	800286a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800281c:	4a3c      	ldr	r2, [pc, #240]	; (8002910 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 800281e:	4291      	cmp	r1, r2
 8002820:	d3f4      	bcc.n	800280c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 8002822:	2200      	movs	r2, #0
 8002824:	701a      	strb	r2, [r3, #0]
 8002826:	f002 fd27 	bl	8005278 <fmc_bank1_unlock>
 800282a:	e7f3      	b.n	8002814 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800282c:	4d37      	ldr	r5, [pc, #220]	; (800290c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800282e:	782b      	ldrb	r3, [r5, #0]
 8002830:	b15b      	cbz	r3, 800284a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 8002832:	f002 fd3f 	bl	80052b4 <fmc_bank0_state_get>
 8002836:	2801      	cmp	r0, #1
 8002838:	d0ee      	beq.n	8002818 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 800283a:	7829      	ldrb	r1, [r5, #0]
 800283c:	4b35      	ldr	r3, [pc, #212]	; (8002914 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800283e:	b939      	cbnz	r1, 8002850 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 8002840:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002842:	f022 0202 	bic.w	r2, r2, #2
 8002846:	651a      	str	r2, [r3, #80]	; 0x50
 8002848:	e006      	b.n	8002858 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 800284a:	f002 fd45 	bl	80052d8 <fmc_bank1_state_get>
 800284e:	e7f2      	b.n	8002836 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 8002850:	691a      	ldr	r2, [r3, #16]
 8002852:	f022 0202 	bic.w	r2, r2, #2
 8002856:	611a      	str	r2, [r3, #16]
 8002858:	4b2a      	ldr	r3, [pc, #168]	; (8002904 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	b94b      	cbnz	r3, 8002872 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 800285e:	b129      	cbz	r1, 800286c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 8002860:	f002 fd18 	bl	8005294 <fmc_bank0_lock>
 8002864:	2300      	movs	r3, #0
 8002866:	2001      	movs	r0, #1
 8002868:	6023      	str	r3, [r4, #0]
 800286a:	bd38      	pop	{r3, r4, r5, pc}
 800286c:	f002 fd1a 	bl	80052a4 <fmc_bank1_lock>
 8002870:	e7f8      	b.n	8002864 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 8002872:	2302      	movs	r3, #2
 8002874:	e7cf      	b.n	8002816 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 8002876:	4923      	ldr	r1, [pc, #140]	; (8002904 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 8002878:	680b      	ldr	r3, [r1, #0]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d0ca      	beq.n	8002814 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800287e:	4b23      	ldr	r3, [pc, #140]	; (800290c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8002880:	4a1f      	ldr	r2, [pc, #124]	; (8002900 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 8002882:	7818      	ldrb	r0, [r3, #0]
 8002884:	4b23      	ldr	r3, [pc, #140]	; (8002914 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8002886:	b190      	cbz	r0, 80028ae <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 8002888:	6918      	ldr	r0, [r3, #16]
 800288a:	f040 0002 	orr.w	r0, r0, #2
 800288e:	6118      	str	r0, [r3, #16]
 8002890:	6810      	ldr	r0, [r2, #0]
 8002892:	6158      	str	r0, [r3, #20]
 8002894:	6918      	ldr	r0, [r3, #16]
 8002896:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800289a:	6118      	str	r0, [r3, #16]
 800289c:	680b      	ldr	r3, [r1, #0]
 800289e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80028a2:	600b      	str	r3, [r1, #0]
 80028a4:	6813      	ldr	r3, [r2, #0]
 80028a6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80028aa:	6013      	str	r3, [r2, #0]
 80028ac:	e7b2      	b.n	8002814 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 80028ae:	6d18      	ldr	r0, [r3, #80]	; 0x50
 80028b0:	f040 0002 	orr.w	r0, r0, #2
 80028b4:	6518      	str	r0, [r3, #80]	; 0x50
 80028b6:	6810      	ldr	r0, [r2, #0]
 80028b8:	6558      	str	r0, [r3, #84]	; 0x54
 80028ba:	69dd      	ldr	r5, [r3, #28]
 80028bc:	07ad      	lsls	r5, r5, #30
 80028be:	bf48      	it	mi
 80028c0:	6158      	strmi	r0, [r3, #20]
 80028c2:	4814      	ldr	r0, [pc, #80]	; (8002914 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 80028c4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80028c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80028ca:	6503      	str	r3, [r0, #80]	; 0x50
 80028cc:	680b      	ldr	r3, [r1, #0]
 80028ce:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80028d2:	600b      	str	r3, [r1, #0]
 80028d4:	6813      	ldr	r3, [r2, #0]
 80028d6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80028da:	e7e6      	b.n	80028aa <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 80028dc:	4b0b      	ldr	r3, [pc, #44]	; (800290c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 80028de:	781a      	ldrb	r2, [r3, #0]
 80028e0:	4b0c      	ldr	r3, [pc, #48]	; (8002914 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 80028e2:	b132      	cbz	r2, 80028f2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 80028e4:	691a      	ldr	r2, [r3, #16]
 80028e6:	f022 0201 	bic.w	r2, r2, #1
 80028ea:	611a      	str	r2, [r3, #16]
 80028ec:	2000      	movs	r0, #0
 80028ee:	6020      	str	r0, [r4, #0]
 80028f0:	e7bb      	b.n	800286a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 80028f2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80028f4:	f022 0201 	bic.w	r2, r2, #1
 80028f8:	651a      	str	r2, [r3, #80]	; 0x50
 80028fa:	e7f7      	b.n	80028ec <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 80028fc:	20001178 	andcs	r1, r0, r8, ror r1
 8002900:	2000117c 	andcs	r1, r0, ip, ror r1
 8002904:	20001188 	andcs	r1, r0, r8, lsl #3
 8002908:	1ffff700 	svcne	0x00fff700
 800290c:	20001184 	andcs	r1, r0, r4, lsl #3
 8002910:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002914:	40022000 	andmi	r2, r2, r0

08002918 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 8002918:	b570      	push	{r4, r5, r6, lr}
 800291a:	2400      	movs	r4, #0
 800291c:	9804      	ldr	r0, [sp, #16]
 800291e:	6004      	str	r4, [r0, #0]
 8002920:	4c48      	ldr	r4, [pc, #288]	; (8002a44 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 8002922:	6820      	ldr	r0, [r4, #0]
 8002924:	2804      	cmp	r0, #4
 8002926:	d848      	bhi.n	80029ba <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 8002928:	e8df f000 	tbb	[pc, r0]
 800292c:	22847c03 	addcs	r7, r4, #768	; 0x300
 8002930:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8002934:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002938:	6001      	str	r1, [r0, #0]
 800293a:	4844      	ldr	r0, [pc, #272]	; (8002a4c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800293c:	6003      	str	r3, [r0, #0]
 800293e:	4b44      	ldr	r3, [pc, #272]	; (8002a50 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8002940:	601a      	str	r2, [r3, #0]
 8002942:	4b44      	ldr	r3, [pc, #272]	; (8002a54 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 8002944:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002948:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800294c:	4b42      	ldr	r3, [pc, #264]	; (8002a58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800294e:	d807      	bhi.n	8002960 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 8002950:	2201      	movs	r2, #1
 8002952:	701a      	strb	r2, [r3, #0]
 8002954:	f002 fc82 	bl	800525c <fmc_bank0_unlock>
 8002958:	2303      	movs	r3, #3
 800295a:	6023      	str	r3, [r4, #0]
 800295c:	2000      	movs	r0, #0
 800295e:	e026      	b.n	80029ae <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8002960:	4a3e      	ldr	r2, [pc, #248]	; (8002a5c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 8002962:	4291      	cmp	r1, r2
 8002964:	d3f4      	bcc.n	8002950 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 8002966:	2200      	movs	r2, #0
 8002968:	701a      	strb	r2, [r3, #0]
 800296a:	f002 fc85 	bl	8005278 <fmc_bank1_unlock>
 800296e:	e7f3      	b.n	8002958 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002970:	4d39      	ldr	r5, [pc, #228]	; (8002a58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002972:	782b      	ldrb	r3, [r5, #0]
 8002974:	b15b      	cbz	r3, 800298e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 8002976:	f002 fc9d 	bl	80052b4 <fmc_bank0_state_get>
 800297a:	2801      	cmp	r0, #1
 800297c:	d0ee      	beq.n	800295c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 800297e:	7829      	ldrb	r1, [r5, #0]
 8002980:	4b37      	ldr	r3, [pc, #220]	; (8002a60 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002982:	b939      	cbnz	r1, 8002994 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 8002984:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002986:	f022 0201 	bic.w	r2, r2, #1
 800298a:	651a      	str	r2, [r3, #80]	; 0x50
 800298c:	e006      	b.n	800299c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 800298e:	f002 fca3 	bl	80052d8 <fmc_bank1_state_get>
 8002992:	e7f2      	b.n	800297a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 8002994:	691a      	ldr	r2, [r3, #16]
 8002996:	f022 0201 	bic.w	r2, r2, #1
 800299a:	611a      	str	r2, [r3, #16]
 800299c:	4b2c      	ldr	r3, [pc, #176]	; (8002a50 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	b94b      	cbnz	r3, 80029b6 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 80029a2:	b129      	cbz	r1, 80029b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 80029a4:	f002 fc76 	bl	8005294 <fmc_bank0_lock>
 80029a8:	2300      	movs	r3, #0
 80029aa:	2001      	movs	r0, #1
 80029ac:	6023      	str	r3, [r4, #0]
 80029ae:	bd70      	pop	{r4, r5, r6, pc}
 80029b0:	f002 fc78 	bl	80052a4 <fmc_bank1_lock>
 80029b4:	e7f8      	b.n	80029a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 80029b6:	2304      	movs	r3, #4
 80029b8:	e7cf      	b.n	800295a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 80029ba:	4a25      	ldr	r2, [pc, #148]	; (8002a50 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 80029bc:	6813      	ldr	r3, [r2, #0]
 80029be:	2b03      	cmp	r3, #3
 80029c0:	d91a      	bls.n	80029f8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 80029c2:	4b25      	ldr	r3, [pc, #148]	; (8002a58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 80029c4:	7819      	ldrb	r1, [r3, #0]
 80029c6:	4b26      	ldr	r3, [pc, #152]	; (8002a60 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 80029c8:	b189      	cbz	r1, 80029ee <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 80029ca:	6919      	ldr	r1, [r3, #16]
 80029cc:	f041 0101 	orr.w	r1, r1, #1
 80029d0:	6119      	str	r1, [r3, #16]
 80029d2:	4d1e      	ldr	r5, [pc, #120]	; (8002a4c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 80029d4:	481c      	ldr	r0, [pc, #112]	; (8002a48 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 80029d6:	6829      	ldr	r1, [r5, #0]
 80029d8:	6803      	ldr	r3, [r0, #0]
 80029da:	f851 6b04 	ldr.w	r6, [r1], #4
 80029de:	f843 6b04 	str.w	r6, [r3], #4
 80029e2:	6003      	str	r3, [r0, #0]
 80029e4:	6813      	ldr	r3, [r2, #0]
 80029e6:	6029      	str	r1, [r5, #0]
 80029e8:	3b04      	subs	r3, #4
 80029ea:	6013      	str	r3, [r2, #0]
 80029ec:	e7b4      	b.n	8002958 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 80029ee:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80029f0:	f041 0101 	orr.w	r1, r1, #1
 80029f4:	6519      	str	r1, [r3, #80]	; 0x50
 80029f6:	e7ec      	b.n	80029d2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d0ad      	beq.n	8002958 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 80029fc:	4b16      	ldr	r3, [pc, #88]	; (8002a58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 80029fe:	781a      	ldrb	r2, [r3, #0]
 8002a00:	4b17      	ldr	r3, [pc, #92]	; (8002a60 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002a02:	b152      	cbz	r2, 8002a1a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 8002a04:	691a      	ldr	r2, [r3, #16]
 8002a06:	f042 0201 	orr.w	r2, r2, #1
 8002a0a:	611a      	str	r2, [r3, #16]
 8002a0c:	4a0f      	ldr	r2, [pc, #60]	; (8002a4c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8002a0e:	4b0e      	ldr	r3, [pc, #56]	; (8002a48 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8002a10:	6812      	ldr	r2, [r2, #0]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	6812      	ldr	r2, [r2, #0]
 8002a16:	601a      	str	r2, [r3, #0]
 8002a18:	e79e      	b.n	8002958 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002a1a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002a1c:	f042 0201 	orr.w	r2, r2, #1
 8002a20:	651a      	str	r2, [r3, #80]	; 0x50
 8002a22:	e7f3      	b.n	8002a0c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 8002a24:	4b0c      	ldr	r3, [pc, #48]	; (8002a58 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002a26:	781a      	ldrb	r2, [r3, #0]
 8002a28:	4b0d      	ldr	r3, [pc, #52]	; (8002a60 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002a2a:	b132      	cbz	r2, 8002a3a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 8002a2c:	691a      	ldr	r2, [r3, #16]
 8002a2e:	f022 0202 	bic.w	r2, r2, #2
 8002a32:	611a      	str	r2, [r3, #16]
 8002a34:	2000      	movs	r0, #0
 8002a36:	6020      	str	r0, [r4, #0]
 8002a38:	e7b9      	b.n	80029ae <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8002a3a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002a3c:	f022 0202 	bic.w	r2, r2, #2
 8002a40:	651a      	str	r2, [r3, #80]	; 0x50
 8002a42:	e7f7      	b.n	8002a34 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 8002a44:	20001178 	andcs	r1, r0, r8, ror r1
 8002a48:	20001174 	andcs	r1, r0, r4, ror r1
 8002a4c:	20001180 	andcs	r1, r0, r0, lsl #3
 8002a50:	20001188 	andcs	r1, r0, r8, lsl #3
 8002a54:	1ffff700 	svcne	0x00fff700
 8002a58:	20001184 	andcs	r1, r0, r4, lsl #3
 8002a5c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002a60:	40022000 	andmi	r2, r2, r0

08002a64 <spi_flash_cmd_wait_ready(unsigned long)>:
 8002a64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002a66:	4b1c      	ldr	r3, [pc, #112]	; (8002ad8 <spi_flash_cmd_wait_ready(unsigned long)+0x74>)
 8002a68:	2200      	movs	r2, #0
 8002a6a:	7c1b      	ldrb	r3, [r3, #16]
 8002a6c:	f10d 0107 	add.w	r1, sp, #7
 8002a70:	2b70      	cmp	r3, #112	; 0x70
 8002a72:	f88d 3007 	strb.w	r3, [sp, #7]
 8002a76:	f04f 0301 	mov.w	r3, #1
 8002a7a:	bf08      	it	eq
 8002a7c:	2480      	moveq	r4, #128	; 0x80
 8002a7e:	4606      	mov	r6, r0
 8002a80:	4618      	mov	r0, r3
 8002a82:	bf0e      	itee	eq
 8002a84:	4625      	moveq	r5, r4
 8002a86:	2401      	movne	r4, #1
 8002a88:	2500      	movne	r5, #0
 8002a8a:	f000 f9b7 	bl	8002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002a8e:	2000      	movs	r0, #0
 8002a90:	f000 f9d8 	bl	8002e44 <get_timer(unsigned int)>
 8002a94:	4607      	mov	r7, r0
 8002a96:	2300      	movs	r3, #0
 8002a98:	2001      	movs	r0, #1
 8002a9a:	4619      	mov	r1, r3
 8002a9c:	f10d 0206 	add.w	r2, sp, #6
 8002aa0:	f000 f9ac 	bl	8002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002aa4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002aa8:	4023      	ands	r3, r4
 8002aaa:	42ab      	cmp	r3, r5
 8002aac:	d004      	beq.n	8002ab8 <spi_flash_cmd_wait_ready(unsigned long)+0x54>
 8002aae:	4638      	mov	r0, r7
 8002ab0:	f000 f9c8 	bl	8002e44 <get_timer(unsigned int)>
 8002ab4:	42b0      	cmp	r0, r6
 8002ab6:	d3ee      	bcc.n	8002a96 <spi_flash_cmd_wait_ready(unsigned long)+0x32>
 8002ab8:	2200      	movs	r2, #0
 8002aba:	2302      	movs	r3, #2
 8002abc:	4611      	mov	r1, r2
 8002abe:	4610      	mov	r0, r2
 8002ac0:	f000 f99c 	bl	8002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002ac4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002ac8:	ea04 0003 	and.w	r0, r4, r3
 8002acc:	1b40      	subs	r0, r0, r5
 8002ace:	bf18      	it	ne
 8002ad0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8002ad4:	b003      	add	sp, #12
 8002ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ad8:	20000000 	andcs	r0, r0, r0

08002adc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>:
 8002adc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ae0:	4607      	mov	r7, r0
 8002ae2:	9c06      	ldr	r4, [sp, #24]
 8002ae4:	461e      	mov	r6, r3
 8002ae6:	2c00      	cmp	r4, #0
 8002ae8:	4608      	mov	r0, r1
 8002aea:	4615      	mov	r5, r2
 8002aec:	bf14      	ite	ne
 8002aee:	2301      	movne	r3, #1
 8002af0:	2303      	moveq	r3, #3
 8002af2:	2200      	movs	r2, #0
 8002af4:	4639      	mov	r1, r7
 8002af6:	f000 f981 	bl	8002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002afa:	b13c      	cbz	r4, 8002b0c <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x30>
 8002afc:	4632      	mov	r2, r6
 8002afe:	4629      	mov	r1, r5
 8002b00:	4620      	mov	r0, r4
 8002b02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002b06:	2302      	movs	r3, #2
 8002b08:	f000 b978 	b.w	8002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002b10 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>:
 8002b10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002b14:	f04f 0a00 	mov.w	sl, #0
 8002b18:	4699      	mov	r9, r3
 8002b1a:	2306      	movs	r3, #6
 8002b1c:	1e14      	subs	r4, r2, #0
 8002b1e:	f88d 300f 	strb.w	r3, [sp, #15]
 8002b22:	4605      	mov	r5, r0
 8002b24:	460e      	mov	r6, r1
 8002b26:	4653      	mov	r3, sl
 8002b28:	4652      	mov	r2, sl
 8002b2a:	f04f 0101 	mov.w	r1, #1
 8002b2e:	f8cd a000 	str.w	sl, [sp]
 8002b32:	f10d 000f 	add.w	r0, sp, #15
 8002b36:	bf14      	ite	ne
 8002b38:	2702      	movne	r7, #2
 8002b3a:	2705      	moveq	r7, #5
 8002b3c:	f89d 8030 	ldrb.w	r8, [sp, #48]	; 0x30
 8002b40:	f7ff ffcc 	bl	8002adc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002b44:	2800      	cmp	r0, #0
 8002b46:	db12      	blt.n	8002b6e <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 8002b48:	4653      	mov	r3, sl
 8002b4a:	4622      	mov	r2, r4
 8002b4c:	4631      	mov	r1, r6
 8002b4e:	4628      	mov	r0, r5
 8002b50:	f8cd 9000 	str.w	r9, [sp]
 8002b54:	f7ff ffc2 	bl	8002adc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002b58:	2800      	cmp	r0, #0
 8002b5a:	db08      	blt.n	8002b6e <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 8002b5c:	f1b8 0f00 	cmp.w	r8, #0
 8002b60:	d005      	beq.n	8002b6e <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 8002b62:	4638      	mov	r0, r7
 8002b64:	b004      	add	sp, #16
 8002b66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002b6a:	f7ff bf7b 	b.w	8002a64 <spi_flash_cmd_wait_ready(unsigned long)>
 8002b6e:	b004      	add	sp, #16
 8002b70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002b74 <spi_flash_get_size()>:
 8002b74:	4b01      	ldr	r3, [pc, #4]	; (8002b7c <spi_flash_get_size()+0x8>)
 8002b76:	6858      	ldr	r0, [r3, #4]
 8002b78:	4770      	bx	lr
 8002b7a:	bf00      	nop
 8002b7c:	20000000 	andcs	r0, r0, r0

08002b80 <spi_flash_get_sector_size()>:
 8002b80:	4b01      	ldr	r3, [pc, #4]	; (8002b88 <spi_flash_get_sector_size()+0x8>)
 8002b82:	68d8      	ldr	r0, [r3, #12]
 8002b84:	4770      	bx	lr
 8002b86:	bf00      	nop
 8002b88:	20000000 	andcs	r0, r0, r0

08002b8c <spi_flash_get_name()>:
 8002b8c:	4b01      	ldr	r3, [pc, #4]	; (8002b94 <spi_flash_get_name()+0x8>)
 8002b8e:	6818      	ldr	r0, [r3, #0]
 8002b90:	4770      	bx	lr
 8002b92:	bf00      	nop
 8002b94:	20000000 	andcs	r0, r0, r0

08002b98 <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)>:
 8002b98:	4b1b      	ldr	r3, [pc, #108]	; (8002c08 <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)+0x70>)
 8002b9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b9e:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8002ba2:	2302      	movs	r3, #2
 8002ba4:	b085      	sub	sp, #20
 8002ba6:	4605      	mov	r5, r0
 8002ba8:	200a      	movs	r0, #10
 8002baa:	460f      	mov	r7, r1
 8002bac:	4691      	mov	r9, r2
 8002bae:	f88d 300c 	strb.w	r3, [sp, #12]
 8002bb2:	2600      	movs	r6, #0
 8002bb4:	f7ff ff56 	bl	8002a64 <spi_flash_cmd_wait_ready(unsigned long)>
 8002bb8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002bbc:	42be      	cmp	r6, r7
 8002bbe:	d302      	bcc.n	8002bc6 <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)+0x2e>
 8002bc0:	b005      	add	sp, #20
 8002bc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002bc6:	fbb5 f4f8 	udiv	r4, r5, r8
 8002bca:	fb08 5414 	mls	r4, r8, r4, r5
 8002bce:	1bbb      	subs	r3, r7, r6
 8002bd0:	eba8 0404 	sub.w	r4, r8, r4
 8002bd4:	429c      	cmp	r4, r3
 8002bd6:	bf28      	it	cs
 8002bd8:	461c      	movcs	r4, r3
 8002bda:	0c2b      	lsrs	r3, r5, #16
 8002bdc:	f88d 300d 	strb.w	r3, [sp, #13]
 8002be0:	eb09 0206 	add.w	r2, r9, r6
 8002be4:	ba6b      	rev16	r3, r5
 8002be6:	4426      	add	r6, r4
 8002be8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002bec:	1bf3      	subs	r3, r6, r7
 8002bee:	bf18      	it	ne
 8002bf0:	2301      	movne	r3, #1
 8002bf2:	2104      	movs	r1, #4
 8002bf4:	9300      	str	r3, [sp, #0]
 8002bf6:	a803      	add	r0, sp, #12
 8002bf8:	4623      	mov	r3, r4
 8002bfa:	f7ff ff89 	bl	8002b10 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>
 8002bfe:	2800      	cmp	r0, #0
 8002c00:	dbde      	blt.n	8002bc0 <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)+0x28>
 8002c02:	4425      	add	r5, r4
 8002c04:	e7da      	b.n	8002bbc <spi_flash_cmd_write_multi(unsigned int, unsigned int, unsigned char const*)+0x24>
 8002c06:	bf00      	nop
 8002c08:	20000000 	andcs	r0, r0, r0

08002c0c <spi_flash_cmd_read_fast(unsigned int, unsigned int, unsigned char*)>:
 8002c0c:	230b      	movs	r3, #11
 8002c0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002c10:	b085      	sub	sp, #20
 8002c12:	f88d 3008 	strb.w	r3, [sp, #8]
 8002c16:	2300      	movs	r3, #0
 8002c18:	4604      	mov	r4, r0
 8002c1a:	2002      	movs	r0, #2
 8002c1c:	460d      	mov	r5, r1
 8002c1e:	4617      	mov	r7, r2
 8002c20:	f88d 300c 	strb.w	r3, [sp, #12]
 8002c24:	f7ff ff1e 	bl	8002a64 <spi_flash_cmd_wait_ready(unsigned long)>
 8002c28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002c2c:	b90d      	cbnz	r5, 8002c32 <spi_flash_cmd_read_fast(unsigned int, unsigned int, unsigned char*)+0x26>
 8002c2e:	b005      	add	sp, #20
 8002c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c32:	f1c4 7680 	rsb	r6, r4, #16777216	; 0x1000000
 8002c36:	42ae      	cmp	r6, r5
 8002c38:	bf28      	it	cs
 8002c3a:	462e      	movcs	r6, r5
 8002c3c:	0c23      	lsrs	r3, r4, #16
 8002c3e:	f88d 3009 	strb.w	r3, [sp, #9]
 8002c42:	ba63      	rev16	r3, r4
 8002c44:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002c48:	2200      	movs	r2, #0
 8002c4a:	463b      	mov	r3, r7
 8002c4c:	2105      	movs	r1, #5
 8002c4e:	9600      	str	r6, [sp, #0]
 8002c50:	a802      	add	r0, sp, #8
 8002c52:	f7ff ff43 	bl	8002adc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002c56:	2800      	cmp	r0, #0
 8002c58:	dbe9      	blt.n	8002c2e <spi_flash_cmd_read_fast(unsigned int, unsigned int, unsigned char*)+0x22>
 8002c5a:	4434      	add	r4, r6
 8002c5c:	1bad      	subs	r5, r5, r6
 8002c5e:	4437      	add	r7, r6
 8002c60:	e7e4      	b.n	8002c2c <spi_flash_cmd_read_fast(unsigned int, unsigned int, unsigned char*)+0x20>
	...

08002c64 <spi_flash_cmd_erase(unsigned int, unsigned int)>:
 8002c64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002c66:	4b1a      	ldr	r3, [pc, #104]	; (8002cd0 <spi_flash_cmd_erase(unsigned int, unsigned int)+0x6c>)
 8002c68:	4606      	mov	r6, r0
 8002c6a:	68dd      	ldr	r5, [r3, #12]
 8002c6c:	460c      	mov	r4, r1
 8002c6e:	fbb0 f3f5 	udiv	r3, r0, r5
 8002c72:	fb05 0313 	mls	r3, r5, r3, r0
 8002c76:	bb43      	cbnz	r3, 8002cca <spi_flash_cmd_erase(unsigned int, unsigned int)+0x66>
 8002c78:	fbb1 f3f5 	udiv	r3, r1, r5
 8002c7c:	fb05 1313 	mls	r3, r5, r3, r1
 8002c80:	bb1b      	cbnz	r3, 8002cca <spi_flash_cmd_erase(unsigned int, unsigned int)+0x66>
 8002c82:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8002c86:	bf14      	ite	ne
 8002c88:	23d8      	movne	r3, #216	; 0xd8
 8002c8a:	2320      	moveq	r3, #32
 8002c8c:	2002      	movs	r0, #2
 8002c8e:	f88d 300c 	strb.w	r3, [sp, #12]
 8002c92:	f7ff fee7 	bl	8002a64 <spi_flash_cmd_wait_ready(unsigned long)>
 8002c96:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002c9a:	b90c      	cbnz	r4, 8002ca0 <spi_flash_cmd_erase(unsigned int, unsigned int)+0x3c>
 8002c9c:	b004      	add	sp, #16
 8002c9e:	bd70      	pop	{r4, r5, r6, pc}
 8002ca0:	0c33      	lsrs	r3, r6, #16
 8002ca2:	f88d 300d 	strb.w	r3, [sp, #13]
 8002ca6:	ba73      	rev16	r3, r6
 8002ca8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002cac:	1b63      	subs	r3, r4, r5
 8002cae:	bf18      	it	ne
 8002cb0:	2301      	movne	r3, #1
 8002cb2:	9300      	str	r3, [sp, #0]
 8002cb4:	2300      	movs	r3, #0
 8002cb6:	2104      	movs	r1, #4
 8002cb8:	461a      	mov	r2, r3
 8002cba:	a803      	add	r0, sp, #12
 8002cbc:	f7ff ff28 	bl	8002b10 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>
 8002cc0:	2800      	cmp	r0, #0
 8002cc2:	dbeb      	blt.n	8002c9c <spi_flash_cmd_erase(unsigned int, unsigned int)+0x38>
 8002cc4:	442e      	add	r6, r5
 8002cc6:	1b64      	subs	r4, r4, r5
 8002cc8:	e7e7      	b.n	8002c9a <spi_flash_cmd_erase(unsigned int, unsigned int)+0x36>
 8002cca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002cce:	e7e5      	b.n	8002c9c <spi_flash_cmd_erase(unsigned int, unsigned int)+0x38>
 8002cd0:	20000000 	andcs	r0, r0, r0

08002cd4 <spi_flash_cmd_write_status(unsigned char)>:
 8002cd4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002cd6:	2301      	movs	r3, #1
 8002cd8:	2200      	movs	r2, #0
 8002cda:	f88d 000f 	strb.w	r0, [sp, #15]
 8002cde:	9200      	str	r2, [sp, #0]
 8002ce0:	4619      	mov	r1, r3
 8002ce2:	f10d 020f 	add.w	r2, sp, #15
 8002ce6:	f10d 0017 	add.w	r0, sp, #23
 8002cea:	f88d 3017 	strb.w	r3, [sp, #23]
 8002cee:	f7ff ff0f 	bl	8002b10 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>
 8002cf2:	ea00 70e0 	and.w	r0, r0, r0, asr #31
 8002cf6:	b007      	add	sp, #28
 8002cf8:	f85d fb04 	ldr.w	pc, [sp], #4

08002cfc <spi_flash_probe(unsigned int, unsigned int, unsigned int)>:
 8002cfc:	b570      	push	{r4, r5, r6, lr}
 8002cfe:	2400      	movs	r4, #0
 8002d00:	b086      	sub	sp, #24
 8002d02:	9404      	str	r4, [sp, #16]
 8002d04:	f88d 4014 	strb.w	r4, [sp, #20]
 8002d08:	f000 f856 	bl	8002db8 <spi_init()>
 8002d0c:	42a0      	cmp	r0, r4
 8002d0e:	db14      	blt.n	8002d3a <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x3e>
 8002d10:	239f      	movs	r3, #159	; 0x9f
 8002d12:	f88d 300f 	strb.w	r3, [sp, #15]
 8002d16:	2305      	movs	r3, #5
 8002d18:	4622      	mov	r2, r4
 8002d1a:	9300      	str	r3, [sp, #0]
 8002d1c:	2101      	movs	r1, #1
 8002d1e:	ab04      	add	r3, sp, #16
 8002d20:	f10d 000f 	add.w	r0, sp, #15
 8002d24:	f7ff feda 	bl	8002adc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 8002d28:	4d0c      	ldr	r5, [pc, #48]	; (8002d5c <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x60>)
 8002d2a:	4e0d      	ldr	r6, [pc, #52]	; (8002d60 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x64>)
 8002d2c:	782b      	ldrb	r3, [r5, #0]
 8002d2e:	b13b      	cbz	r3, 8002d40 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x44>
 8002d30:	3401      	adds	r4, #1
 8002d32:	2c03      	cmp	r4, #3
 8002d34:	f105 0508 	add.w	r5, r5, #8
 8002d38:	d1f8      	bne.n	8002d2c <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x30>
 8002d3a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002d3e:	e00a      	b.n	8002d56 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x5a>
 8002d40:	786a      	ldrb	r2, [r5, #1]
 8002d42:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8002d46:	429a      	cmp	r2, r3
 8002d48:	d1f2      	bne.n	8002d30 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x34>
 8002d4a:	4630      	mov	r0, r6
 8002d4c:	686b      	ldr	r3, [r5, #4]
 8002d4e:	a904      	add	r1, sp, #16
 8002d50:	4798      	blx	r3
 8002d52:	2800      	cmp	r0, #0
 8002d54:	d1ec      	bne.n	8002d30 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x34>
 8002d56:	b006      	add	sp, #24
 8002d58:	bd70      	pop	{r4, r5, r6, pc}
 8002d5a:	bf00      	nop
 8002d5c:	08007230 	stmdaeq	r0, {r4, r5, r9, ip, sp, lr}
 8002d60:	20000000 	andcs	r0, r0, r0

08002d64 <spi_flash_probe_winbond(spi_flash*, unsigned char*)>:
 8002d64:	2300      	movs	r3, #0
 8002d66:	b530      	push	{r4, r5, lr}
 8002d68:	f8b1 4001 	ldrh.w	r4, [r1, #1]
 8002d6c:	4a11      	ldr	r2, [pc, #68]	; (8002db4 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x50>)
 8002d6e:	ba64      	rev16	r4, r4
 8002d70:	b2a4      	uxth	r4, r4
 8002d72:	f832 5033 	ldrh.w	r5, [r2, r3, lsl #3]
 8002d76:	42a5      	cmp	r5, r4
 8002d78:	d005      	beq.n	8002d86 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x22>
 8002d7a:	3301      	adds	r3, #1
 8002d7c:	2b12      	cmp	r3, #18
 8002d7e:	d1f8      	bne.n	8002d72 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0xe>
 8002d80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002d84:	bd30      	pop	{r4, r5, pc}
 8002d86:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8002d8a:	6864      	ldr	r4, [r4, #4]
 8002d8c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8002d90:	6004      	str	r4, [r0, #0]
 8002d92:	f44f 7480 	mov.w	r4, #256	; 0x100
 8002d96:	6084      	str	r4, [r0, #8]
 8002d98:	7849      	ldrb	r1, [r1, #1]
 8002d9a:	8853      	ldrh	r3, [r2, #2]
 8002d9c:	2920      	cmp	r1, #32
 8002d9e:	bf0c      	ite	eq
 8002da0:	f44f 3180 	moveq.w	r1, #65536	; 0x10000
 8002da4:	f44f 5180 	movne.w	r1, #4096	; 0x1000
 8002da8:	041b      	lsls	r3, r3, #16
 8002daa:	60c1      	str	r1, [r0, #12]
 8002dac:	6043      	str	r3, [r0, #4]
 8002dae:	2000      	movs	r0, #0
 8002db0:	e7e8      	b.n	8002d84 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x20>
 8002db2:	bf00      	nop
 8002db4:	08007340 	stmdaeq	r0, {r6, r8, r9, ip, sp, lr}

08002db8 <spi_init()>:
 8002db8:	b510      	push	{r4, lr}
 8002dba:	f003 f8c7 	bl	8005f4c <gd32_spi_begin()>
 8002dbe:	2001      	movs	r0, #1
 8002dc0:	f003 f960 	bl	8006084 <gd32_spi_chipSelect(unsigned char)>
 8002dc4:	480b      	ldr	r0, [pc, #44]	; (8002df4 <spi_init()+0x3c>)
 8002dc6:	f003 f90b 	bl	8005fe0 <gd32_spi_set_speed_hz(unsigned int)>
 8002dca:	4c0b      	ldr	r4, [pc, #44]	; (8002df8 <spi_init()+0x40>)
 8002dcc:	2000      	movs	r0, #0
 8002dce:	f003 f941 	bl	8006054 <gd32_spi_setDataMode(unsigned char)>
 8002dd2:	f240 6003 	movw	r0, #1539	; 0x603
 8002dd6:	f002 fb6d 	bl	80054b4 <rcu_periph_clock_enable>
 8002dda:	2302      	movs	r3, #2
 8002ddc:	2203      	movs	r2, #3
 8002dde:	4620      	mov	r0, r4
 8002de0:	2110      	movs	r1, #16
 8002de2:	f002 fac5 	bl	8005370 <gpio_init>
 8002de6:	4620      	mov	r0, r4
 8002de8:	2102      	movs	r1, #2
 8002dea:	f002 fb15 	bl	8005418 <gpio_bit_set>
 8002dee:	2000      	movs	r0, #0
 8002df0:	bd10      	pop	{r4, pc}
 8002df2:	bf00      	nop
 8002df4:	005b8d80 	subseq	r8, fp, r0, lsl #27
 8002df8:	40010c00 	andmi	r0, r1, r0, lsl #24

08002dfc <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)>:
 8002dfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002dfe:	4616      	mov	r6, r2
 8002e00:	07da      	lsls	r2, r3, #31
 8002e02:	4604      	mov	r4, r0
 8002e04:	460d      	mov	r5, r1
 8002e06:	461f      	mov	r7, r3
 8002e08:	d503      	bpl.n	8002e12 <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x16>
 8002e0a:	2102      	movs	r1, #2
 8002e0c:	480c      	ldr	r0, [pc, #48]	; (8002e40 <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x44>)
 8002e0e:	f002 fb05 	bl	800541c <gpio_bit_reset>
 8002e12:	b124      	cbz	r4, 8002e1e <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x22>
 8002e14:	b95e      	cbnz	r6, 8002e2e <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x32>
 8002e16:	4621      	mov	r1, r4
 8002e18:	4628      	mov	r0, r5
 8002e1a:	f003 f94d 	bl	80060b8 <gd32_spi_writenb(char const*, unsigned int)>
 8002e1e:	07bb      	lsls	r3, r7, #30
 8002e20:	d503      	bpl.n	8002e2a <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x2e>
 8002e22:	2102      	movs	r1, #2
 8002e24:	4806      	ldr	r0, [pc, #24]	; (8002e40 <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x44>)
 8002e26:	f002 faf7 	bl	8005418 <gpio_bit_set>
 8002e2a:	2000      	movs	r0, #0
 8002e2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e2e:	4622      	mov	r2, r4
 8002e30:	4631      	mov	r1, r6
 8002e32:	b91d      	cbnz	r5, 8002e3c <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x40>
 8002e34:	4630      	mov	r0, r6
 8002e36:	f003 f92b 	bl	8006090 <gd32_spi_transfernb(char const*, char*, unsigned int)>
 8002e3a:	e7f0      	b.n	8002e1e <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x22>
 8002e3c:	4628      	mov	r0, r5
 8002e3e:	e7fa      	b.n	8002e36 <spi_xfer(unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x3a>
 8002e40:	40010c00 	andmi	r0, r1, r0, lsl #24

08002e44 <get_timer(unsigned int)>:
 8002e44:	b510      	push	{r4, lr}
 8002e46:	4604      	mov	r4, r0
 8002e48:	b918      	cbnz	r0, 8002e52 <get_timer(unsigned int)+0xe>
 8002e4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e4e:	f001 bd2f 	b.w	80048b0 <time>
 8002e52:	2000      	movs	r0, #0
 8002e54:	f001 fd2c 	bl	80048b0 <time>
 8002e58:	1b00      	subs	r0, r0, r4
 8002e5a:	bd10      	pop	{r4, pc}

08002e5c <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)>:
 8002e5c:	f246 0216 	movw	r2, #24598	; 0x6016
 8002e60:	f8b1 3001 	ldrh.w	r3, [r1, #1]
 8002e64:	ba5b      	rev16	r3, r3
 8002e66:	b29b      	uxth	r3, r3
 8002e68:	4293      	cmp	r3, r2
 8002e6a:	d00f      	beq.n	8002e8c <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)+0x30>
 8002e6c:	f244 0217 	movw	r2, #16407	; 0x4017
 8002e70:	4293      	cmp	r3, r2
 8002e72:	d10d      	bne.n	8002e90 <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)+0x34>
 8002e74:	4b08      	ldr	r3, [pc, #32]	; (8002e98 <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)+0x3c>)
 8002e76:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002e7a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002e7e:	885b      	ldrh	r3, [r3, #2]
 8002e80:	e9c0 1202 	strd	r1, r2, [r0, #8]
 8002e84:	041b      	lsls	r3, r3, #16
 8002e86:	6043      	str	r3, [r0, #4]
 8002e88:	2000      	movs	r0, #0
 8002e8a:	4770      	bx	lr
 8002e8c:	4b03      	ldr	r3, [pc, #12]	; (8002e9c <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)+0x40>)
 8002e8e:	e7f2      	b.n	8002e76 <spi_flash_probe_gigadevice(spi_flash*, unsigned char*)+0x1a>
 8002e90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002e94:	4770      	bx	lr
 8002e96:	bf00      	nop
 8002e98:	080073e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, ip, sp, lr}
 8002e9c:	080073e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip, sp, lr}

08002ea0 <spi_flash_probe_macronix(spi_flash*, unsigned char*)>:
 8002ea0:	2200      	movs	r2, #0
 8002ea2:	b510      	push	{r4, lr}
 8002ea4:	f8b1 1001 	ldrh.w	r1, [r1, #1]
 8002ea8:	4b0f      	ldr	r3, [pc, #60]	; (8002ee8 <spi_flash_probe_macronix(spi_flash*, unsigned char*)+0x48>)
 8002eaa:	ba49      	rev16	r1, r1
 8002eac:	b289      	uxth	r1, r1
 8002eae:	f833 4032 	ldrh.w	r4, [r3, r2, lsl #3]
 8002eb2:	428c      	cmp	r4, r1
 8002eb4:	d005      	beq.n	8002ec2 <spi_flash_probe_macronix(spi_flash*, unsigned char*)+0x22>
 8002eb6:	3201      	adds	r2, #1
 8002eb8:	2a07      	cmp	r2, #7
 8002eba:	d1f8      	bne.n	8002eae <spi_flash_probe_macronix(spi_flash*, unsigned char*)+0xe>
 8002ebc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002ec0:	bd10      	pop	{r4, pc}
 8002ec2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ec6:	685a      	ldr	r2, [r3, #4]
 8002ec8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002ecc:	6002      	str	r2, [r0, #0]
 8002ece:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002ed2:	885b      	ldrh	r3, [r3, #2]
 8002ed4:	e9c0 1202 	strd	r1, r2, [r0, #8]
 8002ed8:	041b      	lsls	r3, r3, #16
 8002eda:	6043      	str	r3, [r0, #4]
 8002edc:	2000      	movs	r0, #0
 8002ede:	f7ff fef9 	bl	8002cd4 <spi_flash_cmd_write_status(unsigned char)>
 8002ee2:	2000      	movs	r0, #0
 8002ee4:	e7ec      	b.n	8002ec0 <spi_flash_probe_macronix(spi_flash*, unsigned char*)+0x20>
 8002ee6:	bf00      	nop
 8002ee8:	08007440 	stmdaeq	r0, {r6, sl, ip, sp, lr}

08002eec <net_set_dhcp>:
 8002eec:	b570      	push	{r4, r5, r6, lr}
 8002eee:	2400      	movs	r4, #0
 8002ef0:	4605      	mov	r5, r0
 8002ef2:	7014      	strb	r4, [r2, #0]
 8002ef4:	4616      	mov	r6, r2
 8002ef6:	4810      	ldr	r0, [pc, #64]	; (8002f38 <net_set_dhcp+0x4c>)
 8002ef8:	460a      	mov	r2, r1
 8002efa:	4910      	ldr	r1, [pc, #64]	; (8002f3c <net_set_dhcp+0x50>)
 8002efc:	f001 f80a 	bl	8003f14 <dhcp_client>
 8002f00:	42a0      	cmp	r0, r4
 8002f02:	da17      	bge.n	8002f34 <net_set_dhcp+0x48>
 8002f04:	480d      	ldr	r0, [pc, #52]	; (8002f3c <net_set_dhcp+0x50>)
 8002f06:	f000 f82d 	bl	8002f64 <rfc3927>
 8002f0a:	7030      	strb	r0, [r6, #0]
 8002f0c:	490b      	ldr	r1, [pc, #44]	; (8002f3c <net_set_dhcp+0x50>)
 8002f0e:	480a      	ldr	r0, [pc, #40]	; (8002f38 <net_set_dhcp+0x4c>)
 8002f10:	f7fd fa00 	bl	8000314 <arp_init>
 8002f14:	4809      	ldr	r0, [pc, #36]	; (8002f3c <net_set_dhcp+0x50>)
 8002f16:	f001 f9e3 	bl	80042e0 <ip_set_ip>
 8002f1a:	4a08      	ldr	r2, [pc, #32]	; (8002f3c <net_set_dhcp+0x50>)
 8002f1c:	1e6b      	subs	r3, r5, #1
 8002f1e:	350b      	adds	r5, #11
 8002f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002f24:	f803 1f01 	strb.w	r1, [r3, #1]!
 8002f28:	42ab      	cmp	r3, r5
 8002f2a:	d1f9      	bne.n	8002f20 <net_set_dhcp+0x34>
 8002f2c:	4b04      	ldr	r3, [pc, #16]	; (8002f40 <net_set_dhcp+0x54>)
 8002f2e:	4620      	mov	r0, r4
 8002f30:	701c      	strb	r4, [r3, #0]
 8002f32:	bd70      	pop	{r4, r5, r6, pc}
 8002f34:	2401      	movs	r4, #1
 8002f36:	e7e9      	b.n	8002f0c <net_set_dhcp+0x20>
 8002f38:	20001198 	mulcs	r0, r8, r1
 8002f3c:	2000118c 	andcs	r1, r0, ip, lsl #3
 8002f40:	2000119e 	mulcs	r0, lr, r1

08002f44 <net_timers_run>:
 8002f44:	4b05      	ldr	r3, [pc, #20]	; (8002f5c <net_timers_run+0x18>)
 8002f46:	4a06      	ldr	r2, [pc, #24]	; (8002f60 <net_timers_run+0x1c>)
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	6811      	ldr	r1, [r2, #0]
 8002f4c:	4299      	cmp	r1, r3
 8002f4e:	d803      	bhi.n	8002f58 <net_timers_run+0x14>
 8002f50:	3364      	adds	r3, #100	; 0x64
 8002f52:	6013      	str	r3, [r2, #0]
 8002f54:	f001 b974 	b.w	8004240 <igmp_timer>
 8002f58:	4770      	bx	lr
 8002f5a:	bf00      	nop
 8002f5c:	200039fc 	strdcs	r3, [r0], -ip
 8002f60:	200011a4 	andcs	r1, r0, r4, lsr #3

08002f64 <rfc3927>:
 8002f64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f68:	4606      	mov	r6, r0
 8002f6a:	25ff      	movs	r5, #255	; 0xff
 8002f6c:	4b18      	ldr	r3, [pc, #96]	; (8002fd0 <rfc3927+0x6c>)
 8002f6e:	4f19      	ldr	r7, [pc, #100]	; (8002fd4 <rfc3927+0x70>)
 8002f70:	791a      	ldrb	r2, [r3, #4]
 8002f72:	78dc      	ldrb	r4, [r3, #3]
 8002f74:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8002fd8 <rfc3927+0x74>
 8002f78:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 8002f7c:	f8d7 9000 	ldr.w	r9, [r7]
 8002f80:	f8df b058 	ldr.w	fp, [pc, #88]	; 8002fdc <rfc3927+0x78>
 8002f84:	f8df a058 	ldr.w	sl, [pc, #88]	; 8002fe0 <rfc3927+0x7c>
 8002f88:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8002f8c:	4659      	mov	r1, fp
 8002f8e:	4620      	mov	r0, r4
 8002f90:	f000 feb4 	bl	8003cfc <arp_cache_lookup>
 8002f94:	b190      	cbz	r0, 8002fbc <rfc3927+0x58>
 8002f96:	ba24      	rev	r4, r4
 8002f98:	3401      	adds	r4, #1
 8002f9a:	3d01      	subs	r5, #1
 8002f9c:	ba24      	rev	r4, r4
 8002f9e:	b2ad      	uxth	r5, r5
 8002fa0:	4554      	cmp	r4, sl
 8002fa2:	bf08      	it	eq
 8002fa4:	4644      	moveq	r4, r8
 8002fa6:	b18d      	cbz	r5, 8002fcc <rfc3927+0x68>
 8002fa8:	683b      	ldr	r3, [r7, #0]
 8002faa:	eba3 0309 	sub.w	r3, r3, r9
 8002fae:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8002fb2:	d3eb      	bcc.n	8002f8c <rfc3927+0x28>
 8002fb4:	2400      	movs	r4, #0
 8002fb6:	4623      	mov	r3, r4
 8002fb8:	4620      	mov	r0, r4
 8002fba:	e002      	b.n	8002fc2 <rfc3927+0x5e>
 8002fbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002fc0:	2001      	movs	r0, #1
 8002fc2:	e9c6 3401 	strd	r3, r4, [r6, #4]
 8002fc6:	6034      	str	r4, [r6, #0]
 8002fc8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fcc:	462c      	mov	r4, r5
 8002fce:	e7f2      	b.n	8002fb6 <rfc3927+0x52>
 8002fd0:	200011a8 	andcs	r1, r0, r8, lsr #3
 8002fd4:	200039fc 	strdcs	r3, [r0], -ip
 8002fd8:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 8002fdc:	200011b0 			; <UNDEFINED> instruction: 0x200011b0
 8002fe0:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

08002fe4 <memcpy.isra.0>:
 8002fe4:	3801      	subs	r0, #1
 8002fe6:	440a      	add	r2, r1
 8002fe8:	4291      	cmp	r1, r2
 8002fea:	d100      	bne.n	8002fee <memcpy.isra.0+0xa>
 8002fec:	4770      	bx	lr
 8002fee:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002ff2:	f800 3f01 	strb.w	r3, [r0, #1]!
 8002ff6:	e7f7      	b.n	8002fe8 <memcpy.isra.0+0x4>

08002ff8 <memcpy.isra.0>:
 8002ff8:	3801      	subs	r0, #1
 8002ffa:	440a      	add	r2, r1
 8002ffc:	4291      	cmp	r1, r2
 8002ffe:	d100      	bne.n	8003002 <memcpy.isra.0+0xa>
 8003000:	4770      	bx	lr
 8003002:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003006:	f800 3f01 	strb.w	r3, [r0, #1]!
 800300a:	e7f7      	b.n	8002ffc <memcpy.isra.0+0x4>

0800300c <net_memcpy>:
 800300c:	ea40 0301 	orr.w	r3, r0, r1
 8003010:	079b      	lsls	r3, r3, #30
 8003012:	b570      	push	{r4, r5, r6, lr}
 8003014:	d108      	bne.n	8003028 <net_memcpy+0x1c>
 8003016:	f022 0303 	bic.w	r3, r2, #3
 800301a:	1f04      	subs	r4, r0, #4
 800301c:	18cd      	adds	r5, r1, r3
 800301e:	42a9      	cmp	r1, r5
 8003020:	d108      	bne.n	8003034 <net_memcpy+0x28>
 8003022:	1ad2      	subs	r2, r2, r3
 8003024:	4403      	add	r3, r0
 8003026:	e000      	b.n	800302a <net_memcpy+0x1e>
 8003028:	4603      	mov	r3, r0
 800302a:	3b01      	subs	r3, #1
 800302c:	440a      	add	r2, r1
 800302e:	4291      	cmp	r1, r2
 8003030:	d105      	bne.n	800303e <net_memcpy+0x32>
 8003032:	bd70      	pop	{r4, r5, r6, pc}
 8003034:	f851 6b04 	ldr.w	r6, [r1], #4
 8003038:	f844 6f04 	str.w	r6, [r4, #4]!
 800303c:	e7ef      	b.n	800301e <net_memcpy+0x12>
 800303e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003042:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003046:	e7f2      	b.n	800302e <net_memcpy+0x22>

08003048 <udp_set_ip>:
 8003048:	2204      	movs	r2, #4
 800304a:	b513      	push	{r0, r1, r4, lr}
 800304c:	4604      	mov	r4, r0
 800304e:	6803      	ldr	r3, [r0, #0]
 8003050:	eb0d 0102 	add.w	r1, sp, r2
 8003054:	4808      	ldr	r0, [pc, #32]	; (8003078 <udp_set_ip+0x30>)
 8003056:	9301      	str	r3, [sp, #4]
 8003058:	f7ff ffce 	bl	8002ff8 <memcpy.isra.0>
 800305c:	6862      	ldr	r2, [r4, #4]
 800305e:	4b07      	ldr	r3, [pc, #28]	; (800307c <udp_set_ip+0x34>)
 8003060:	43d1      	mvns	r1, r2
 8003062:	6019      	str	r1, [r3, #0]
 8003064:	6823      	ldr	r3, [r4, #0]
 8003066:	4013      	ands	r3, r2
 8003068:	4a05      	ldr	r2, [pc, #20]	; (8003080 <udp_set_ip+0x38>)
 800306a:	6013      	str	r3, [r2, #0]
 800306c:	68a2      	ldr	r2, [r4, #8]
 800306e:	4b05      	ldr	r3, [pc, #20]	; (8003084 <udp_set_ip+0x3c>)
 8003070:	601a      	str	r2, [r3, #0]
 8003072:	b002      	add	sp, #8
 8003074:	bd10      	pop	{r4, pc}
 8003076:	bf00      	nop
 8003078:	20002efe 	strdcs	r2, [r0], -lr
 800307c:	200017a4 	andcs	r1, r0, r4, lsr #15
 8003080:	200017ac 	andcs	r1, r0, ip, lsr #15
 8003084:	200017a8 	andcs	r1, r0, r8, lsr #15

08003088 <udp_bind>:
 8003088:	b508      	push	{r3, lr}
 800308a:	4603      	mov	r3, r0
 800308c:	4a0b      	ldr	r2, [pc, #44]	; (80030bc <udp_bind+0x34>)
 800308e:	6810      	ldr	r0, [r2, #0]
 8003090:	4298      	cmp	r0, r3
 8003092:	d00e      	beq.n	80030b2 <udp_bind+0x2a>
 8003094:	b150      	cbz	r0, 80030ac <udp_bind+0x24>
 8003096:	6851      	ldr	r1, [r2, #4]
 8003098:	428b      	cmp	r3, r1
 800309a:	d00c      	beq.n	80030b6 <udp_bind+0x2e>
 800309c:	b129      	cbz	r1, 80030aa <udp_bind+0x22>
 800309e:	4808      	ldr	r0, [pc, #32]	; (80030c0 <udp_bind+0x38>)
 80030a0:	f001 f970 	bl	8004384 <console_error>
 80030a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80030a8:	bd08      	pop	{r3, pc}
 80030aa:	2001      	movs	r0, #1
 80030ac:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 80030b0:	e7fa      	b.n	80030a8 <udp_bind+0x20>
 80030b2:	2000      	movs	r0, #0
 80030b4:	e7f8      	b.n	80030a8 <udp_bind+0x20>
 80030b6:	2001      	movs	r0, #1
 80030b8:	e7f6      	b.n	80030a8 <udp_bind+0x20>
 80030ba:	bf00      	nop
 80030bc:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 80030c0:	08007478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip, sp, lr}

080030c4 <udp_unbind>:
 80030c4:	4a0c      	ldr	r2, [pc, #48]	; (80030f8 <udp_unbind+0x34>)
 80030c6:	b508      	push	{r3, lr}
 80030c8:	6813      	ldr	r3, [r2, #0]
 80030ca:	4283      	cmp	r3, r0
 80030cc:	d008      	beq.n	80030e0 <udp_unbind+0x1c>
 80030ce:	6853      	ldr	r3, [r2, #4]
 80030d0:	4298      	cmp	r0, r3
 80030d2:	d00f      	beq.n	80030f4 <udp_unbind+0x30>
 80030d4:	4809      	ldr	r0, [pc, #36]	; (80030fc <udp_unbind+0x38>)
 80030d6:	f001 f955 	bl	8004384 <console_error>
 80030da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80030de:	bd08      	pop	{r3, pc}
 80030e0:	2300      	movs	r3, #0
 80030e2:	2000      	movs	r0, #0
 80030e4:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 80030e8:	f640 3294 	movw	r2, #2964	; 0xb94
 80030ec:	4353      	muls	r3, r2
 80030ee:	4a04      	ldr	r2, [pc, #16]	; (8003100 <udp_unbind+0x3c>)
 80030f0:	50d0      	str	r0, [r2, r3]
 80030f2:	e7f4      	b.n	80030de <udp_unbind+0x1a>
 80030f4:	2301      	movs	r3, #1
 80030f6:	e7f4      	b.n	80030e2 <udp_unbind+0x1e>
 80030f8:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 80030fc:	0800747d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, ip, sp, lr}
 8003100:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

08003104 <udp_recv>:
 8003104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003108:	4604      	mov	r4, r0
 800310a:	4698      	mov	r8, r3
 800310c:	f640 3394 	movw	r3, #2964	; 0xb94
 8003110:	435c      	muls	r4, r3
 8003112:	4608      	mov	r0, r1
 8003114:	4915      	ldr	r1, [pc, #84]	; (800316c <udp_recv+0x68>)
 8003116:	190f      	adds	r7, r1, r4
 8003118:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800311c:	5b0b      	ldrh	r3, [r1, r4]
 800311e:	4563      	cmp	r3, ip
 8003120:	d021      	beq.n	8003166 <udp_recv+0x62>
 8003122:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8003126:	fb03 fc0c 	mul.w	ip, r3, ip
 800312a:	eb0c 0604 	add.w	r6, ip, r4
 800312e:	440e      	add	r6, r1
 8003130:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8003134:	3404      	adds	r4, #4
 8003136:	4295      	cmp	r5, r2
 8003138:	bf28      	it	cs
 800313a:	4615      	movcs	r5, r2
 800313c:	4464      	add	r4, ip
 800313e:	462a      	mov	r2, r5
 8003140:	4421      	add	r1, r4
 8003142:	f7ff ff63 	bl	800300c <net_memcpy>
 8003146:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800314a:	f8c8 3000 	str.w	r3, [r8]
 800314e:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8003152:	9b06      	ldr	r3, [sp, #24]
 8003154:	801a      	strh	r2, [r3, #0]
 8003156:	887b      	ldrh	r3, [r7, #2]
 8003158:	3301      	adds	r3, #1
 800315a:	f003 0301 	and.w	r3, r3, #1
 800315e:	807b      	strh	r3, [r7, #2]
 8003160:	4628      	mov	r0, r5
 8003162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003166:	2500      	movs	r5, #0
 8003168:	e7fa      	b.n	8003160 <udp_recv+0x5c>
 800316a:	bf00      	nop
 800316c:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

08003170 <udp_recv2>:
 8003170:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003172:	f640 3594 	movw	r5, #2964	; 0xb94
 8003176:	4368      	muls	r0, r5
 8003178:	4c0f      	ldr	r4, [pc, #60]	; (80031b8 <udp_recv2+0x48>)
 800317a:	1827      	adds	r7, r4, r0
 800317c:	887d      	ldrh	r5, [r7, #2]
 800317e:	5a26      	ldrh	r6, [r4, r0]
 8003180:	42ae      	cmp	r6, r5
 8003182:	d017      	beq.n	80031b4 <udp_recv2+0x44>
 8003184:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8003188:	fb0c f505 	mul.w	r5, ip, r5
 800318c:	1d06      	adds	r6, r0, #4
 800318e:	442e      	add	r6, r5
 8003190:	4405      	add	r5, r0
 8003192:	4426      	add	r6, r4
 8003194:	442c      	add	r4, r5
 8003196:	600e      	str	r6, [r1, #0]
 8003198:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800319c:	6011      	str	r1, [r2, #0]
 800319e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 80031a2:	801a      	strh	r2, [r3, #0]
 80031a4:	887b      	ldrh	r3, [r7, #2]
 80031a6:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 80031aa:	3301      	adds	r3, #1
 80031ac:	f003 0301 	and.w	r3, r3, #1
 80031b0:	807b      	strh	r3, [r7, #2]
 80031b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031b4:	2000      	movs	r0, #0
 80031b6:	e7fc      	b.n	80031b2 <udp_recv2+0x42>
 80031b8:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

080031bc <udp_send>:
 80031bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80031c0:	f8df 9130 	ldr.w	r9, [pc, #304]	; 80032f4 <udp_send+0x138>
 80031c4:	461c      	mov	r4, r3
 80031c6:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 80031ca:	4607      	mov	r7, r0
 80031cc:	4688      	mov	r8, r1
 80031ce:	4616      	mov	r6, r2
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	f000 808b 	beq.w	80032ec <udp_send+0x130>
 80031d6:	1c63      	adds	r3, r4, #1
 80031d8:	d141      	bne.n	800325e <udp_send+0xa2>
 80031da:	4a47      	ldr	r2, [pc, #284]	; (80032f8 <udp_send+0x13c>)
 80031dc:	2307      	movs	r3, #7
 80031de:	4611      	mov	r1, r2
 80031e0:	20ff      	movs	r0, #255	; 0xff
 80031e2:	e001      	b.n	80031e8 <udp_send+0x2c>
 80031e4:	f802 0b01 	strb.w	r0, [r2], #1
 80031e8:	3b01      	subs	r3, #1
 80031ea:	d1fb      	bne.n	80031e4 <udp_send+0x28>
 80031ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031f0:	83cb      	strh	r3, [r1, #30]
 80031f2:	840b      	strh	r3, [r1, #32]
 80031f4:	2500      	movs	r5, #0
 80031f6:	f8df a104 	ldr.w	sl, [pc, #260]	; 80032fc <udp_send+0x140>
 80031fa:	4c3f      	ldr	r4, [pc, #252]	; (80032f8 <udp_send+0x13c>)
 80031fc:	f8ba 3000 	ldrh.w	r3, [sl]
 8003200:	2114      	movs	r1, #20
 8003202:	8263      	strh	r3, [r4, #18]
 8003204:	f106 031c 	add.w	r3, r6, #28
 8003208:	ba5b      	rev16	r3, r3
 800320a:	f104 000e 	add.w	r0, r4, #14
 800320e:	8223      	strh	r3, [r4, #16]
 8003210:	8325      	strh	r5, [r4, #24]
 8003212:	f001 f86e 	bl	80042f2 <net_chksum>
 8003216:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800321a:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800321e:	ba5b      	rev16	r3, r3
 8003220:	8463      	strh	r3, [r4, #34]	; 0x22
 8003222:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003226:	4632      	mov	r2, r6
 8003228:	ba5b      	rev16	r3, r3
 800322a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800322c:	f106 0308 	add.w	r3, r6, #8
 8003230:	ba5b      	rev16	r3, r3
 8003232:	bf28      	it	cs
 8003234:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8003238:	4641      	mov	r1, r8
 800323a:	8320      	strh	r0, [r4, #24]
 800323c:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8003240:	84e3      	strh	r3, [r4, #38]	; 0x26
 8003242:	f7ff fee3 	bl	800300c <net_memcpy>
 8003246:	4620      	mov	r0, r4
 8003248:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800324c:	f002 fca8 	bl	8005ba0 <emac_eth_send>
 8003250:	f8ba 3000 	ldrh.w	r3, [sl]
 8003254:	4628      	mov	r0, r5
 8003256:	3301      	adds	r3, #1
 8003258:	f8aa 3000 	strh.w	r3, [sl]
 800325c:	e037      	b.n	80032ce <udp_send+0x112>
 800325e:	4b28      	ldr	r3, [pc, #160]	; (8003300 <udp_send+0x144>)
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	43a3      	bics	r3, r4
 8003264:	d10f      	bne.n	8003286 <udp_send+0xca>
 8003266:	2307      	movs	r3, #7
 8003268:	21ff      	movs	r1, #255	; 0xff
 800326a:	4a23      	ldr	r2, [pc, #140]	; (80032f8 <udp_send+0x13c>)
 800326c:	e001      	b.n	8003272 <udp_send+0xb6>
 800326e:	f802 1b01 	strb.w	r1, [r2], #1
 8003272:	3b01      	subs	r3, #1
 8003274:	d1fb      	bne.n	800326e <udp_send+0xb2>
 8003276:	2204      	movs	r2, #4
 8003278:	4822      	ldr	r0, [pc, #136]	; (8003304 <udp_send+0x148>)
 800327a:	eb0d 0102 	add.w	r1, sp, r2
 800327e:	9401      	str	r4, [sp, #4]
 8003280:	f7ff feba 	bl	8002ff8 <memcpy.isra.0>
 8003284:	e7b6      	b.n	80031f4 <udp_send+0x38>
 8003286:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800328a:	2be0      	cmp	r3, #224	; 0xe0
 800328c:	d10e      	bne.n	80032ac <udp_send+0xf0>
 800328e:	491e      	ldr	r1, [pc, #120]	; (8003308 <udp_send+0x14c>)
 8003290:	f3c4 2306 	ubfx	r3, r4, #8, #7
 8003294:	70cb      	strb	r3, [r1, #3]
 8003296:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800329a:	710b      	strb	r3, [r1, #4]
 800329c:	f3c4 6307 	ubfx	r3, r4, #24, #8
 80032a0:	2206      	movs	r2, #6
 80032a2:	4815      	ldr	r0, [pc, #84]	; (80032f8 <udp_send+0x13c>)
 80032a4:	714b      	strb	r3, [r1, #5]
 80032a6:	f7ff fea7 	bl	8002ff8 <memcpy.isra.0>
 80032aa:	e7e4      	b.n	8003276 <udp_send+0xba>
 80032ac:	4b17      	ldr	r3, [pc, #92]	; (800330c <udp_send+0x150>)
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	43a3      	bics	r3, r4
 80032b2:	d00f      	beq.n	80032d4 <udp_send+0x118>
 80032b4:	4d16      	ldr	r5, [pc, #88]	; (8003310 <udp_send+0x154>)
 80032b6:	4910      	ldr	r1, [pc, #64]	; (80032f8 <udp_send+0x13c>)
 80032b8:	6828      	ldr	r0, [r5, #0]
 80032ba:	f000 fd1f 	bl	8003cfc <arp_cache_lookup>
 80032be:	682b      	ldr	r3, [r5, #0]
 80032c0:	4298      	cmp	r0, r3
 80032c2:	d0d8      	beq.n	8003276 <udp_send+0xba>
 80032c4:	4813      	ldr	r0, [pc, #76]	; (8003314 <udp_send+0x158>)
 80032c6:	f001 f85d 	bl	8004384 <console_error>
 80032ca:	f06f 0002 	mvn.w	r0, #2
 80032ce:	b002      	add	sp, #8
 80032d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80032d4:	4620      	mov	r0, r4
 80032d6:	4908      	ldr	r1, [pc, #32]	; (80032f8 <udp_send+0x13c>)
 80032d8:	f000 fd10 	bl	8003cfc <arp_cache_lookup>
 80032dc:	42a0      	cmp	r0, r4
 80032de:	d0ca      	beq.n	8003276 <udp_send+0xba>
 80032e0:	480d      	ldr	r0, [pc, #52]	; (8003318 <udp_send+0x15c>)
 80032e2:	f001 f84f 	bl	8004384 <console_error>
 80032e6:	f06f 0001 	mvn.w	r0, #1
 80032ea:	e7f0      	b.n	80032ce <udp_send+0x112>
 80032ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80032f0:	e7ed      	b.n	80032ce <udp_send+0x112>
 80032f2:	bf00      	nop
 80032f4:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 80032f8:	20002ee4 	andcs	r2, r0, r4, ror #29
 80032fc:	200017b0 			; <UNDEFINED> instruction: 0x200017b0
 8003300:	200017a4 	andcs	r1, r0, r4, lsr #15
 8003304:	20002f02 	andcs	r2, r0, r2, lsl #30
 8003308:	20000014 	andcs	r0, r0, r4, lsl r0
 800330c:	200017ac 	andcs	r1, r0, ip, lsr #15
 8003310:	200017a8 	andcs	r1, r0, r8, lsr #15
 8003314:	08007485 	stmdaeq	r0, {r0, r2, r7, sl, ip, sp, lr}
 8003318:	080074ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, sl, ip, sp, lr}

0800331c <net::link_register_read()>:
 800331c:	b507      	push	{r0, r1, r2, lr}
 800331e:	2201      	movs	r2, #1
 8003320:	f10d 0306 	add.w	r3, sp, #6
 8003324:	4611      	mov	r1, r2
 8003326:	2000      	movs	r0, #0
 8003328:	f001 fce4 	bl	8004cf4 <enet_phy_write_read>
 800332c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8003330:	f080 0004 	eor.w	r0, r0, #4
 8003334:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003338:	b003      	add	sp, #12
 800333a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08003340 <TFTPDaemon::TFTPDaemon()>:
 8003340:	b538      	push	{r3, r4, r5, lr}
 8003342:	4b14      	ldr	r3, [pc, #80]	; (8003394 <TFTPDaemon::TFTPDaemon()+0x54>)
 8003344:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003348:	6003      	str	r3, [r0, #0]
 800334a:	2300      	movs	r3, #0
 800334c:	4d12      	ldr	r5, [pc, #72]	; (8003398 <TFTPDaemon::TFTPDaemon()+0x58>)
 800334e:	4604      	mov	r4, r0
 8003350:	e9c0 3201 	strd	r3, r2, [r0, #4]
 8003354:	f8c0 321c 	str.w	r3, [r0, #540]	; 0x21c
 8003358:	f8a0 3220 	strh.w	r3, [r0, #544]	; 0x220
 800335c:	f8c0 3224 	str.w	r3, [r0, #548]	; 0x224
 8003360:	f8a0 3228 	strh.w	r3, [r0, #552]	; 0x228
 8003364:	f8c0 322c 	str.w	r3, [r0, #556]	; 0x22c
 8003368:	f8a0 3230 	strh.w	r3, [r0, #560]	; 0x230
 800336c:	f880 3232 	strb.w	r3, [r0, #562]	; 0x232
 8003370:	6828      	ldr	r0, [r5, #0]
 8003372:	b110      	cbz	r0, 800337a <TFTPDaemon::TFTPDaemon()+0x3a>
 8003374:	6803      	ldr	r3, [r0, #0]
 8003376:	69db      	ldr	r3, [r3, #28]
 8003378:	4798      	blx	r3
 800337a:	2100      	movs	r1, #0
 800337c:	602c      	str	r4, [r5, #0]
 800337e:	f104 030c 	add.w	r3, r4, #12
 8003382:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 8003386:	429a      	cmp	r2, r3
 8003388:	d101      	bne.n	800338e <TFTPDaemon::TFTPDaemon()+0x4e>
 800338a:	4620      	mov	r0, r4
 800338c:	bd38      	pop	{r3, r4, r5, pc}
 800338e:	f803 1b01 	strb.w	r1, [r3], #1
 8003392:	e7f8      	b.n	8003386 <TFTPDaemon::TFTPDaemon()+0x46>
 8003394:	08007528 	stmdaeq	r0, {r3, r5, r8, sl, ip, sp, lr}
 8003398:	200034d0 	ldrdcs	r3, [r0], -r0

0800339c <TFTPDaemon::~TFTPDaemon()>:
 800339c:	4b06      	ldr	r3, [pc, #24]	; (80033b8 <TFTPDaemon::~TFTPDaemon()+0x1c>)
 800339e:	b510      	push	{r4, lr}
 80033a0:	6003      	str	r3, [r0, #0]
 80033a2:	4b06      	ldr	r3, [pc, #24]	; (80033bc <TFTPDaemon::~TFTPDaemon()+0x20>)
 80033a4:	4604      	mov	r4, r0
 80033a6:	2145      	movs	r1, #69	; 0x45
 80033a8:	6818      	ldr	r0, [r3, #0]
 80033aa:	f000 f9fd 	bl	80037a8 <Network::End(unsigned short)>
 80033ae:	2200      	movs	r2, #0
 80033b0:	4b03      	ldr	r3, [pc, #12]	; (80033c0 <TFTPDaemon::~TFTPDaemon()+0x24>)
 80033b2:	4620      	mov	r0, r4
 80033b4:	601a      	str	r2, [r3, #0]
 80033b6:	bd10      	pop	{r4, pc}
 80033b8:	08007528 	stmdaeq	r0, {r3, r5, r8, sl, ip, sp, lr}
 80033bc:	200034d4 	ldrdcs	r3, [r0], -r4
 80033c0:	200034d0 	ldrdcs	r3, [r0], -r0

080033c4 <TFTPDaemon::SendError(unsigned short, char const*)>:
 80033c4:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 80033c8:	b510      	push	{r4, lr}
 80033ca:	b0a4      	sub	sp, #144	; 0x90
 80033cc:	f8ad 300c 	strh.w	r3, [sp, #12]
 80033d0:	237f      	movs	r3, #127	; 0x7f
 80033d2:	ba49      	rev16	r1, r1
 80033d4:	f8ad 100e 	strh.w	r1, [sp, #14]
 80033d8:	3a01      	subs	r2, #1
 80033da:	a904      	add	r1, sp, #16
 80033dc:	f812 4f01 	ldrb.w	r4, [r2, #1]!
 80033e0:	b92c      	cbnz	r4, 80033ee <TFTPDaemon::SendError(unsigned short, char const*)+0x2a>
 80033e2:	440b      	add	r3, r1
 80033e4:	4299      	cmp	r1, r3
 80033e6:	d006      	beq.n	80033f6 <TFTPDaemon::SendError(unsigned short, char const*)+0x32>
 80033e8:	f801 4b01 	strb.w	r4, [r1], #1
 80033ec:	e7fa      	b.n	80033e4 <TFTPDaemon::SendError(unsigned short, char const*)+0x20>
 80033ee:	3b01      	subs	r3, #1
 80033f0:	f801 4b01 	strb.w	r4, [r1], #1
 80033f4:	d1f2      	bne.n	80033dc <TFTPDaemon::SendError(unsigned short, char const*)+0x18>
 80033f6:	f8b0 3220 	ldrh.w	r3, [r0, #544]	; 0x220
 80033fa:	2284      	movs	r2, #132	; 0x84
 80033fc:	9300      	str	r3, [sp, #0]
 80033fe:	f8d0 321c 	ldr.w	r3, [r0, #540]	; 0x21c
 8003402:	a903      	add	r1, sp, #12
 8003404:	7a00      	ldrb	r0, [r0, #8]
 8003406:	f7ff fed9 	bl	80031bc <udp_send>
 800340a:	b024      	add	sp, #144	; 0x90
 800340c:	bd10      	pop	{r4, pc}

0800340e <TFTPDaemon::DoRead()>:
 800340e:	6843      	ldr	r3, [r0, #4]
 8003410:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003412:	2b02      	cmp	r3, #2
 8003414:	4604      	mov	r4, r0
 8003416:	f100 050c 	add.w	r5, r0, #12
 800341a:	d128      	bne.n	800346e <TFTPDaemon::DoRead()+0x60>
 800341c:	6803      	ldr	r3, [r0, #0]
 800341e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003422:	695e      	ldr	r6, [r3, #20]
 8003424:	f8b0 3228 	ldrh.w	r3, [r0, #552]	; 0x228
 8003428:	f100 0110 	add.w	r1, r0, #16
 800342c:	3301      	adds	r3, #1
 800342e:	b29b      	uxth	r3, r3
 8003430:	f8a0 3228 	strh.w	r3, [r0, #552]	; 0x228
 8003434:	47b0      	blx	r6
 8003436:	2300      	movs	r3, #0
 8003438:	7323      	strb	r3, [r4, #12]
 800343a:	2303      	movs	r3, #3
 800343c:	7363      	strb	r3, [r4, #13]
 800343e:	f8b4 3228 	ldrh.w	r3, [r4, #552]	; 0x228
 8003442:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8003446:	ba5b      	rev16	r3, r3
 8003448:	81e3      	strh	r3, [r4, #14]
 800344a:	f100 0304 	add.w	r3, r0, #4
 800344e:	f8a4 3230 	strh.w	r3, [r4, #560]	; 0x230
 8003452:	bf2c      	ite	cs
 8003454:	2300      	movcs	r3, #0
 8003456:	2301      	movcc	r3, #1
 8003458:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800345c:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
 8003460:	f884 3232 	strb.w	r3, [r4, #562]	; 0x232
 8003464:	d203      	bcs.n	800346e <TFTPDaemon::DoRead()+0x60>
 8003466:	6823      	ldr	r3, [r4, #0]
 8003468:	4620      	mov	r0, r4
 800346a:	691b      	ldr	r3, [r3, #16]
 800346c:	4798      	blx	r3
 800346e:	f8b4 3220 	ldrh.w	r3, [r4, #544]	; 0x220
 8003472:	4629      	mov	r1, r5
 8003474:	9300      	str	r3, [sp, #0]
 8003476:	f8b4 2230 	ldrh.w	r2, [r4, #560]	; 0x230
 800347a:	f8d4 321c 	ldr.w	r3, [r4, #540]	; 0x21c
 800347e:	7a20      	ldrb	r0, [r4, #8]
 8003480:	f7ff fe9c 	bl	80031bc <udp_send>
 8003484:	2303      	movs	r3, #3
 8003486:	6063      	str	r3, [r4, #4]
 8003488:	b002      	add	sp, #8
 800348a:	bd70      	pop	{r4, r5, r6, pc}

0800348c <TFTPDaemon::HandleRecvAck()>:
 800348c:	8983      	ldrh	r3, [r0, #12]
 800348e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003492:	d10c      	bne.n	80034ae <TFTPDaemon::HandleRecvAck()+0x22>
 8003494:	f8b0 3228 	ldrh.w	r3, [r0, #552]	; 0x228
 8003498:	89c2      	ldrh	r2, [r0, #14]
 800349a:	ba5b      	rev16	r3, r3
 800349c:	b29b      	uxth	r3, r3
 800349e:	429a      	cmp	r2, r3
 80034a0:	bf01      	itttt	eq
 80034a2:	f890 3232 	ldrbeq.w	r3, [r0, #562]	; 0x232
 80034a6:	f083 0301 	eoreq.w	r3, r3, #1
 80034aa:	005b      	lsleq	r3, r3, #1
 80034ac:	6043      	streq	r3, [r0, #4]
 80034ae:	4770      	bx	lr

080034b0 <TFTPDaemon::DoWriteAck()>:
 80034b0:	2300      	movs	r3, #0
 80034b2:	b507      	push	{r0, r1, r2, lr}
 80034b4:	7303      	strb	r3, [r0, #12]
 80034b6:	f8b0 3228 	ldrh.w	r3, [r0, #552]	; 0x228
 80034ba:	2204      	movs	r2, #4
 80034bc:	ba5b      	rev16	r3, r3
 80034be:	81c3      	strh	r3, [r0, #14]
 80034c0:	f890 3232 	ldrb.w	r3, [r0, #562]	; 0x232
 80034c4:	7342      	strb	r2, [r0, #13]
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	bf14      	ite	ne
 80034ca:	2300      	movne	r3, #0
 80034cc:	2305      	moveq	r3, #5
 80034ce:	6043      	str	r3, [r0, #4]
 80034d0:	f8b0 3220 	ldrh.w	r3, [r0, #544]	; 0x220
 80034d4:	f100 010c 	add.w	r1, r0, #12
 80034d8:	9300      	str	r3, [sp, #0]
 80034da:	f8d0 321c 	ldr.w	r3, [r0, #540]	; 0x21c
 80034de:	7a00      	ldrb	r0, [r0, #8]
 80034e0:	f7ff fe6c 	bl	80031bc <udp_send>
 80034e4:	b003      	add	sp, #12
 80034e6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080034ec <TFTPDaemon::HandleRequest()>:
 80034ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034ee:	8985      	ldrh	r5, [r0, #12]
 80034f0:	4604      	mov	r4, r0
 80034f2:	ba6d      	rev16	r5, r5
 80034f4:	b2ad      	uxth	r5, r5
 80034f6:	1e6b      	subs	r3, r5, #1
 80034f8:	2b01      	cmp	r3, #1
 80034fa:	d906      	bls.n	800350a <TFTPDaemon::HandleRequest()+0x1e>
 80034fc:	2104      	movs	r1, #4
 80034fe:	4a37      	ldr	r2, [pc, #220]	; (80035dc <TFTPDaemon::HandleRequest()+0xf0>)
 8003500:	4620      	mov	r0, r4
 8003502:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003506:	f7ff bf5d 	b.w	80033c4 <TFTPDaemon::SendError(unsigned short, char const*)>
 800350a:	f100 010e 	add.w	r1, r0, #14
 800350e:	460a      	mov	r2, r1
 8003510:	4613      	mov	r3, r2
 8003512:	7818      	ldrb	r0, [r3, #0]
 8003514:	3201      	adds	r2, #1
 8003516:	2800      	cmp	r0, #0
 8003518:	d1fa      	bne.n	8003510 <TFTPDaemon::HandleRequest()+0x24>
 800351a:	1a5b      	subs	r3, r3, r1
 800351c:	1e5a      	subs	r2, r3, #1
 800351e:	2a7f      	cmp	r2, #127	; 0x7f
 8003520:	d902      	bls.n	8003528 <TFTPDaemon::HandleRequest()+0x3c>
 8003522:	4601      	mov	r1, r0
 8003524:	4a2e      	ldr	r2, [pc, #184]	; (80035e0 <TFTPDaemon::HandleRequest()+0xf4>)
 8003526:	e7eb      	b.n	8003500 <TFTPDaemon::HandleRequest()+0x14>
 8003528:	4423      	add	r3, r4
 800352a:	f103 000e 	add.w	r0, r3, #14
 800352e:	4607      	mov	r7, r0
 8003530:	f8df c0b0 	ldr.w	ip, [pc, #176]	; 80035e4 <TFTPDaemon::HandleRequest()+0xf8>
 8003534:	f103 060f 	add.w	r6, r3, #15
 8003538:	3313      	adds	r3, #19
 800353a:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800353e:	f81c eb01 	ldrb.w	lr, [ip], #1
 8003542:	4572      	cmp	r2, lr
 8003544:	d00c      	beq.n	8003560 <TFTPDaemon::HandleRequest()+0x74>
 8003546:	4a28      	ldr	r2, [pc, #160]	; (80035e8 <TFTPDaemon::HandleRequest()+0xfc>)
 8003548:	1df3      	adds	r3, r6, #7
 800354a:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800354e:	f812 7b01 	ldrb.w	r7, [r2], #1
 8003552:	42be      	cmp	r6, r7
 8003554:	d1d2      	bne.n	80034fc <TFTPDaemon::HandleRequest()+0x10>
 8003556:	b10e      	cbz	r6, 800355c <TFTPDaemon::HandleRequest()+0x70>
 8003558:	4283      	cmp	r3, r0
 800355a:	d1f6      	bne.n	800354a <TFTPDaemon::HandleRequest()+0x5e>
 800355c:	2201      	movs	r2, #1
 800355e:	e003      	b.n	8003568 <TFTPDaemon::HandleRequest()+0x7c>
 8003560:	b112      	cbz	r2, 8003568 <TFTPDaemon::HandleRequest()+0x7c>
 8003562:	429f      	cmp	r7, r3
 8003564:	d1e9      	bne.n	800353a <TFTPDaemon::HandleRequest()+0x4e>
 8003566:	2200      	movs	r2, #0
 8003568:	2d02      	cmp	r5, #2
 800356a:	6823      	ldr	r3, [r4, #0]
 800356c:	d01d      	beq.n	80035aa <TFTPDaemon::HandleRequest()+0xbe>
 800356e:	4620      	mov	r0, r4
 8003570:	689b      	ldr	r3, [r3, #8]
 8003572:	4798      	blx	r3
 8003574:	b938      	cbnz	r0, 8003586 <TFTPDaemon::HandleRequest()+0x9a>
 8003576:	2101      	movs	r1, #1
 8003578:	4a1c      	ldr	r2, [pc, #112]	; (80035ec <TFTPDaemon::HandleRequest()+0x100>)
 800357a:	4620      	mov	r0, r4
 800357c:	f7ff ff22 	bl	80033c4 <TFTPDaemon::SendError(unsigned short, char const*)>
 8003580:	2301      	movs	r3, #1
 8003582:	6063      	str	r3, [r4, #4]
 8003584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003586:	4d1a      	ldr	r5, [pc, #104]	; (80035f0 <TFTPDaemon::HandleRequest()+0x104>)
 8003588:	2145      	movs	r1, #69	; 0x45
 800358a:	6828      	ldr	r0, [r5, #0]
 800358c:	f000 f90c 	bl	80037a8 <Network::End(unsigned short)>
 8003590:	f8b4 1220 	ldrh.w	r1, [r4, #544]	; 0x220
 8003594:	6828      	ldr	r0, [r5, #0]
 8003596:	f000 f904 	bl	80037a2 <Network::Begin(unsigned short)>
 800359a:	2302      	movs	r3, #2
 800359c:	60a0      	str	r0, [r4, #8]
 800359e:	6063      	str	r3, [r4, #4]
 80035a0:	4620      	mov	r0, r4
 80035a2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80035a6:	f7ff bf32 	b.w	800340e <TFTPDaemon::DoRead()>
 80035aa:	4620      	mov	r0, r4
 80035ac:	68db      	ldr	r3, [r3, #12]
 80035ae:	4798      	blx	r3
 80035b0:	b910      	cbnz	r0, 80035b8 <TFTPDaemon::HandleRequest()+0xcc>
 80035b2:	4629      	mov	r1, r5
 80035b4:	4a0f      	ldr	r2, [pc, #60]	; (80035f4 <TFTPDaemon::HandleRequest()+0x108>)
 80035b6:	e7e0      	b.n	800357a <TFTPDaemon::HandleRequest()+0x8e>
 80035b8:	4d0d      	ldr	r5, [pc, #52]	; (80035f0 <TFTPDaemon::HandleRequest()+0x104>)
 80035ba:	2145      	movs	r1, #69	; 0x45
 80035bc:	6828      	ldr	r0, [r5, #0]
 80035be:	f000 f8f3 	bl	80037a8 <Network::End(unsigned short)>
 80035c2:	f8b4 1220 	ldrh.w	r1, [r4, #544]	; 0x220
 80035c6:	6828      	ldr	r0, [r5, #0]
 80035c8:	f000 f8eb 	bl	80037a2 <Network::Begin(unsigned short)>
 80035cc:	2304      	movs	r3, #4
 80035ce:	60a0      	str	r0, [r4, #8]
 80035d0:	6063      	str	r3, [r4, #4]
 80035d2:	4620      	mov	r0, r4
 80035d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80035d8:	f7ff bf6a 	b.w	80034b0 <TFTPDaemon::DoWriteAck()>
 80035dc:	080074be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, ip, sp, lr}
 80035e0:	080074d0 	stmdaeq	r0, {r4, r6, r7, sl, ip, sp, lr}
 80035e4:	080074e2 	stmdaeq	r0, {r1, r5, r6, r7, sl, ip, sp, lr}
 80035e8:	080074e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip, sp, lr}
 80035ec:	080074f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, ip, sp, lr}
 80035f0:	200034d4 	ldrdcs	r3, [r0], -r4
 80035f4:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}

080035f8 <TFTPDaemon::HandleRecvData()>:
 80035f8:	b570      	push	{r4, r5, r6, lr}
 80035fa:	8983      	ldrh	r3, [r0, #12]
 80035fc:	4604      	mov	r4, r0
 80035fe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003602:	d129      	bne.n	8003658 <TFTPDaemon::HandleRecvData()+0x60>
 8003604:	4601      	mov	r1, r0
 8003606:	f8d0 5224 	ldr.w	r5, [r0, #548]	; 0x224
 800360a:	89c3      	ldrh	r3, [r0, #14]
 800360c:	f851 2b10 	ldr.w	r2, [r1], #16
 8003610:	3d04      	subs	r5, #4
 8003612:	ba5b      	rev16	r3, r3
 8003614:	6996      	ldr	r6, [r2, #24]
 8003616:	f8a0 3228 	strh.w	r3, [r0, #552]	; 0x228
 800361a:	462a      	mov	r2, r5
 800361c:	f8c0 522c 	str.w	r5, [r0, #556]	; 0x22c
 8003620:	b29b      	uxth	r3, r3
 8003622:	47b0      	blx	r6
 8003624:	4285      	cmp	r5, r0
 8003626:	d110      	bne.n	800364a <TFTPDaemon::HandleRecvData()+0x52>
 8003628:	f8d4 322c 	ldr.w	r3, [r4, #556]	; 0x22c
 800362c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003630:	d206      	bcs.n	8003640 <TFTPDaemon::HandleRecvData()+0x48>
 8003632:	2301      	movs	r3, #1
 8003634:	f884 3232 	strb.w	r3, [r4, #562]	; 0x232
 8003638:	6823      	ldr	r3, [r4, #0]
 800363a:	4620      	mov	r0, r4
 800363c:	691b      	ldr	r3, [r3, #16]
 800363e:	4798      	blx	r3
 8003640:	4620      	mov	r0, r4
 8003642:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003646:	f7ff bf33 	b.w	80034b0 <TFTPDaemon::DoWriteAck()>
 800364a:	2103      	movs	r1, #3
 800364c:	4620      	mov	r0, r4
 800364e:	4a03      	ldr	r2, [pc, #12]	; (800365c <TFTPDaemon::HandleRecvData()+0x64>)
 8003650:	f7ff feb8 	bl	80033c4 <TFTPDaemon::SendError(unsigned short, char const*)>
 8003654:	2300      	movs	r3, #0
 8003656:	6063      	str	r3, [r4, #4]
 8003658:	bd70      	pop	{r4, r5, r6, pc}
 800365a:	bf00      	nop
 800365c:	08007511 	stmdaeq	r0, {r0, r4, r8, sl, ip, sp, lr}

08003660 <TFTPDaemon::Run()>:
 8003660:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003662:	6847      	ldr	r7, [r0, #4]
 8003664:	4604      	mov	r4, r0
 8003666:	f100 050c 	add.w	r5, r0, #12
 800366a:	bb07      	cbnz	r7, 80036ae <TFTPDaemon::Run()+0x4e>
 800366c:	f8b0 1220 	ldrh.w	r1, [r0, #544]	; 0x220
 8003670:	4e25      	ldr	r6, [pc, #148]	; (8003708 <TFTPDaemon::Run()+0xa8>)
 8003672:	b139      	cbz	r1, 8003684 <TFTPDaemon::Run()+0x24>
 8003674:	6830      	ldr	r0, [r6, #0]
 8003676:	f000 f897 	bl	80037a8 <Network::End(unsigned short)>
 800367a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800367e:	f8a4 7220 	strh.w	r7, [r4, #544]	; 0x220
 8003682:	60a3      	str	r3, [r4, #8]
 8003684:	2145      	movs	r1, #69	; 0x45
 8003686:	6830      	ldr	r0, [r6, #0]
 8003688:	f000 f88b 	bl	80037a2 <Network::Begin(unsigned short)>
 800368c:	2300      	movs	r3, #0
 800368e:	2201      	movs	r2, #1
 8003690:	60a0      	str	r0, [r4, #8]
 8003692:	f8a4 3228 	strh.w	r3, [r4, #552]	; 0x228
 8003696:	6062      	str	r2, [r4, #4]
 8003698:	f884 3232 	strb.w	r3, [r4, #562]	; 0x232
 800369c:	34a0      	adds	r4, #160	; 0xa0
 800369e:	42ac      	cmp	r4, r5
 80036a0:	d102      	bne.n	80036a8 <TFTPDaemon::Run()+0x48>
 80036a2:	2001      	movs	r0, #1
 80036a4:	b003      	add	sp, #12
 80036a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80036a8:	f805 3b01 	strb.w	r3, [r5], #1
 80036ac:	e7f7      	b.n	800369e <TFTPDaemon::Run()+0x3e>
 80036ae:	f500 7308 	add.w	r3, r0, #544	; 0x220
 80036b2:	9300      	str	r3, [sp, #0]
 80036b4:	f44f 7204 	mov.w	r2, #528	; 0x210
 80036b8:	f500 7307 	add.w	r3, r0, #540	; 0x21c
 80036bc:	4629      	mov	r1, r5
 80036be:	7a00      	ldrb	r0, [r0, #8]
 80036c0:	f7ff fd20 	bl	8003104 <udp_recv>
 80036c4:	6863      	ldr	r3, [r4, #4]
 80036c6:	f8c4 0224 	str.w	r0, [r4, #548]	; 0x224
 80036ca:	3b01      	subs	r3, #1
 80036cc:	2b04      	cmp	r3, #4
 80036ce:	d814      	bhi.n	80036fa <TFTPDaemon::Run()+0x9a>
 80036d0:	e8df f003 	tbb	[pc, r3]
 80036d4:	130d0903 	movwne	r0, #55555	; 0xd903
 80036d8:	28040013 	stmdacs	r4, {r0, r1, r4}
 80036dc:	d9e1      	bls.n	80036a2 <TFTPDaemon::Run()+0x42>
 80036de:	4620      	mov	r0, r4
 80036e0:	f7ff ff04 	bl	80034ec <TFTPDaemon::HandleRequest()>
 80036e4:	e7dd      	b.n	80036a2 <TFTPDaemon::Run()+0x42>
 80036e6:	4620      	mov	r0, r4
 80036e8:	f7ff fe91 	bl	800340e <TFTPDaemon::DoRead()>
 80036ec:	e7d9      	b.n	80036a2 <TFTPDaemon::Run()+0x42>
 80036ee:	2804      	cmp	r0, #4
 80036f0:	d1d7      	bne.n	80036a2 <TFTPDaemon::Run()+0x42>
 80036f2:	4620      	mov	r0, r4
 80036f4:	f7ff feca 	bl	800348c <TFTPDaemon::HandleRecvAck()>
 80036f8:	e7d3      	b.n	80036a2 <TFTPDaemon::Run()+0x42>
 80036fa:	f5b0 7f01 	cmp.w	r0, #516	; 0x204
 80036fe:	d8d0      	bhi.n	80036a2 <TFTPDaemon::Run()+0x42>
 8003700:	4620      	mov	r0, r4
 8003702:	f7ff ff79 	bl	80035f8 <TFTPDaemon::HandleRecvData()>
 8003706:	e7cc      	b.n	80036a2 <TFTPDaemon::Run()+0x42>
 8003708:	200034d4 	ldrdcs	r3, [r0], -r4

0800370c <net::link_handle_change(net::Link)>:
 800370c:	b928      	cbnz	r0, 800371a <net::link_handle_change(net::Link)+0xe>
 800370e:	4b03      	ldr	r3, [pc, #12]	; (800371c <net::link_handle_change(net::Link)+0x10>)
 8003710:	6818      	ldr	r0, [r3, #0]
 8003712:	7943      	ldrb	r3, [r0, #5]
 8003714:	b10b      	cbz	r3, 800371a <net::link_handle_change(net::Link)+0xe>
 8003716:	f000 b9a3 	b.w	8003a60 <Network::EnableDhcp()>
 800371a:	4770      	bx	lr
 800371c:	200034d4 	ldrdcs	r3, [r0], -r4

08003720 <strncpy.constprop.0.isra.0>:
 8003720:	233f      	movs	r3, #63	; 0x3f
 8003722:	3901      	subs	r1, #1
 8003724:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003728:	b92a      	cbnz	r2, 8003736 <strncpy.constprop.0.isra.0+0x16>
 800372a:	4403      	add	r3, r0
 800372c:	4298      	cmp	r0, r3
 800372e:	d006      	beq.n	800373e <strncpy.constprop.0.isra.0+0x1e>
 8003730:	f800 2b01 	strb.w	r2, [r0], #1
 8003734:	e7fa      	b.n	800372c <strncpy.constprop.0.isra.0+0xc>
 8003736:	3b01      	subs	r3, #1
 8003738:	f800 2b01 	strb.w	r2, [r0], #1
 800373c:	d1f2      	bne.n	8003724 <strncpy.constprop.0.isra.0+0x4>
 800373e:	4770      	bx	lr

08003740 <net::phy_customized_led()>:
 8003740:	4770      	bx	lr
	...

08003744 <Network::Network()>:
 8003744:	4a11      	ldr	r2, [pc, #68]	; (800378c <Network::Network()+0x48>)
 8003746:	2300      	movs	r3, #0
 8003748:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800374c:	6010      	str	r0, [r2, #0]
 800374e:	2201      	movs	r2, #1
 8003750:	e9c0 2100 	strd	r2, r1, [r0]
 8003754:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8003758:	2200      	movs	r2, #0
 800375a:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 800375e:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 8003762:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8003766:	490a      	ldr	r1, [pc, #40]	; (8003790 <Network::Network()+0x4c>)
 8003768:	6102      	str	r2, [r0, #16]
 800376a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800376e:	61c3      	str	r3, [r0, #28]
 8003770:	f880 3020 	strb.w	r3, [r0, #32]
 8003774:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8003778:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800377c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003780:	f802 3f01 	strb.w	r3, [r2, #1]!
 8003784:	2b00      	cmp	r3, #0
 8003786:	d1f9      	bne.n	800377c <Network::Network()+0x38>
 8003788:	4770      	bx	lr
 800378a:	bf00      	nop
 800378c:	200034d4 	ldrdcs	r3, [r0], -r4
 8003790:	08007548 	stmdaeq	r0, {r3, r6, r8, sl, ip, sp, lr}

08003794 <Network::Shutdown()>:
 8003794:	b508      	push	{r3, lr}
 8003796:	f7fd f9b7 	bl	8000b08 <network::display_emac_shutdown()>
 800379a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800379e:	f7fc bd53 	b.w	8000248 <net_shutdown>

080037a2 <Network::Begin(unsigned short)>:
 80037a2:	4608      	mov	r0, r1
 80037a4:	f7ff bc70 	b.w	8003088 <udp_bind>

080037a8 <Network::End(unsigned short)>:
 80037a8:	4608      	mov	r0, r1
 80037aa:	f7ff bc8b 	b.w	80030c4 <udp_unbind>

080037ae <Network::MacAddressCopyTo(unsigned char*)>:
 80037ae:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 80037b2:	3901      	subs	r1, #1
 80037b4:	30a5      	adds	r0, #165	; 0xa5
 80037b6:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80037ba:	4283      	cmp	r3, r0
 80037bc:	f801 2f01 	strb.w	r2, [r1, #1]!
 80037c0:	d1f9      	bne.n	80037b6 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 80037c2:	4770      	bx	lr

080037c4 <Network::SetDefaultIp()>:
 80037c4:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80037c8:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 80037cc:	041b      	lsls	r3, r3, #16
 80037ce:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80037d2:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 80037d6:	3302      	adds	r3, #2
 80037d8:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 80037dc:	22ff      	movs	r2, #255	; 0xff
 80037de:	6143      	str	r3, [r0, #20]
 80037e0:	e9c0 3206 	strd	r3, r2, [r0, #24]
 80037e4:	4770      	bx	lr
	...

080037e8 <Network::Init(NetworkParamsStore*)>:
 80037e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037ec:	b0a5      	sub	sp, #148	; 0x94
 80037ee:	4604      	mov	r4, r0
 80037f0:	a80b      	add	r0, sp, #44	; 0x2c
 80037f2:	f000 f9f7 	bl	8003be4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80037f6:	a80b      	add	r0, sp, #44	; 0x2c
 80037f8:	f000 fa00 	bl	8003bfc <NetworkParams::Load()>
 80037fc:	b110      	cbz	r0, 8003804 <Network::Init(NetworkParamsStore*)+0x1c>
 80037fe:	a80b      	add	r0, sp, #44	; 0x2c
 8003800:	f000 fa08 	bl	8003c14 <NetworkParams::Dump()>
 8003804:	f7fd f936 	bl	8000a74 <network::display_emac_start()>
 8003808:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800380a:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800380e:	9308      	str	r3, [sp, #32]
 8003810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003812:	4628      	mov	r0, r5
 8003814:	9309      	str	r3, [sp, #36]	; 0x24
 8003816:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003818:	f104 0620 	add.w	r6, r4, #32
 800381c:	930a      	str	r3, [sp, #40]	; 0x28
 800381e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8003822:	7163      	strb	r3, [r4, #5]
 8003824:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003826:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800382a:	bf18      	it	ne
 800382c:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8003830:	061b      	lsls	r3, r3, #24
 8003832:	bf54      	ite	pl
 8003834:	2300      	movpl	r3, #0
 8003836:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800383a:	60e2      	str	r2, [r4, #12]
 800383c:	6123      	str	r3, [r4, #16]
 800383e:	f002 fddd 	bl	80063fc <emac_start(unsigned char*)>
 8003842:	f7ff ff7d 	bl	8003740 <net::phy_customized_led()>
 8003846:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800384a:	2b00      	cmp	r3, #0
 800384c:	f040 80c1 	bne.w	80039d2 <Network::Init(NetworkParamsStore*)+0x1ea>
 8003850:	497f      	ldr	r1, [pc, #508]	; (8003a50 <Network::Init(NetworkParamsStore*)+0x268>)
 8003852:	f104 001f 	add.w	r0, r4, #31
 8003856:	f811 2b01 	ldrb.w	r2, [r1], #1
 800385a:	1c5f      	adds	r7, r3, #1
 800385c:	2a00      	cmp	r2, #0
 800385e:	f040 80b4 	bne.w	80039ca <Network::Init(NetworkParamsStore*)+0x1e2>
 8003862:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8003866:	18e1      	adds	r1, r4, r3
 8003868:	0910      	lsrs	r0, r2, #4
 800386a:	2a9f      	cmp	r2, #159	; 0x9f
 800386c:	f002 020f 	and.w	r2, r2, #15
 8003870:	bf94      	ite	ls
 8003872:	3030      	addls	r0, #48	; 0x30
 8003874:	3037      	addhi	r0, #55	; 0x37
 8003876:	2a09      	cmp	r2, #9
 8003878:	bf94      	ite	ls
 800387a:	3230      	addls	r2, #48	; 0x30
 800387c:	3237      	addhi	r2, #55	; 0x37
 800387e:	4427      	add	r7, r4
 8003880:	f881 0020 	strb.w	r0, [r1, #32]
 8003884:	f887 2020 	strb.w	r2, [r7, #32]
 8003888:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800388c:	f103 0e02 	add.w	lr, r3, #2
 8003890:	0910      	lsrs	r0, r2, #4
 8003892:	2a9f      	cmp	r2, #159	; 0x9f
 8003894:	f002 020f 	and.w	r2, r2, #15
 8003898:	bf94      	ite	ls
 800389a:	3030      	addls	r0, #48	; 0x30
 800389c:	3037      	addhi	r0, #55	; 0x37
 800389e:	f103 0c03 	add.w	ip, r3, #3
 80038a2:	2a09      	cmp	r2, #9
 80038a4:	eb04 070e 	add.w	r7, r4, lr
 80038a8:	f887 0020 	strb.w	r0, [r7, #32]
 80038ac:	bf94      	ite	ls
 80038ae:	3230      	addls	r2, #48	; 0x30
 80038b0:	3237      	addhi	r2, #55	; 0x37
 80038b2:	eb04 000c 	add.w	r0, r4, ip
 80038b6:	f880 2020 	strb.w	r2, [r0, #32]
 80038ba:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 80038be:	1d1f      	adds	r7, r3, #4
 80038c0:	0910      	lsrs	r0, r2, #4
 80038c2:	2a9f      	cmp	r2, #159	; 0x9f
 80038c4:	f002 020f 	and.w	r2, r2, #15
 80038c8:	bf94      	ite	ls
 80038ca:	3030      	addls	r0, #48	; 0x30
 80038cc:	3037      	addhi	r0, #55	; 0x37
 80038ce:	3305      	adds	r3, #5
 80038d0:	2a09      	cmp	r2, #9
 80038d2:	4423      	add	r3, r4
 80038d4:	4427      	add	r7, r4
 80038d6:	bf94      	ite	ls
 80038d8:	3230      	addls	r2, #48	; 0x30
 80038da:	3237      	addhi	r2, #55	; 0x37
 80038dc:	f887 0020 	strb.w	r0, [r7, #32]
 80038e0:	f883 2020 	strb.w	r2, [r3, #32]
 80038e4:	2300      	movs	r3, #0
 80038e6:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 80038ea:	f7ff fd17 	bl	800331c <net::link_register_read()>
 80038ee:	f7ff fd15 	bl	800331c <net::link_register_read()>
 80038f2:	7963      	ldrb	r3, [r4, #5]
 80038f4:	6020      	str	r0, [r4, #0]
 80038f6:	2800      	cmp	r0, #0
 80038f8:	f040 8095 	bne.w	8003a26 <Network::Init(NetworkParamsStore*)+0x23e>
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	f040 80a3 	bne.w	8003a48 <Network::Init(NetworkParamsStore*)+0x260>
 8003902:	9b08      	ldr	r3, [sp, #32]
 8003904:	2b00      	cmp	r3, #0
 8003906:	d16d      	bne.n	80039e4 <Network::Init(NetworkParamsStore*)+0x1fc>
 8003908:	4620      	mov	r0, r4
 800390a:	f7ff ff5b 	bl	80037c4 <Network::SetDefaultIp()>
 800390e:	6963      	ldr	r3, [r4, #20]
 8003910:	69e2      	ldr	r2, [r4, #28]
 8003912:	9308      	str	r3, [sp, #32]
 8003914:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8003918:	f104 0805 	add.w	r8, r4, #5
 800391c:	f104 0907 	add.w	r9, r4, #7
 8003920:	4643      	mov	r3, r8
 8003922:	4632      	mov	r2, r6
 8003924:	4628      	mov	r0, r5
 8003926:	f8cd 9000 	str.w	r9, [sp]
 800392a:	a908      	add	r1, sp, #32
 800392c:	f7fc fc3c 	bl	80001a8 <net_init>
 8003930:	79e3      	ldrb	r3, [r4, #7]
 8003932:	b113      	cbz	r3, 800393a <Network::Init(NetworkParamsStore*)+0x152>
 8003934:	2004      	movs	r0, #4
 8003936:	f7fd f8f9 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800393a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800393e:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 8003942:	9304      	str	r3, [sp, #16]
 8003944:	233c      	movs	r3, #60	; 0x3c
 8003946:	fb03 f30a 	mul.w	r3, r3, sl
 800394a:	4f42      	ldr	r7, [pc, #264]	; (8003a54 <Network::Init(NetworkParamsStore*)+0x26c>)
 800394c:	f8df b108 	ldr.w	fp, [pc, #264]	; 8003a58 <Network::Init(NetworkParamsStore*)+0x270>
 8003950:	9303      	str	r3, [sp, #12]
 8003952:	79e3      	ldrb	r3, [r4, #7]
 8003954:	b373      	cbz	r3, 80039b4 <Network::Init(NetworkParamsStore*)+0x1cc>
 8003956:	f1ba 0f00 	cmp.w	sl, #0
 800395a:	d02b      	beq.n	80039b4 <Network::Init(NetworkParamsStore*)+0x1cc>
 800395c:	9b04      	ldr	r3, [sp, #16]
 800395e:	b34b      	cbz	r3, 80039b4 <Network::Init(NetworkParamsStore*)+0x1cc>
 8003960:	2104      	movs	r1, #4
 8003962:	6838      	ldr	r0, [r7, #0]
 8003964:	f000 fda0 	bl	80044a8 <LedBlink::SetMode(ledblink::Mode)>
 8003968:	2003      	movs	r0, #3
 800396a:	f7fd f8df 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800396e:	2000      	movs	r0, #0
 8003970:	f000 ff9e 	bl	80048b0 <time>
 8003974:	9005      	str	r0, [sp, #20]
 8003976:	2000      	movs	r0, #0
 8003978:	f000 ff9a 	bl	80048b0 <time>
 800397c:	9b05      	ldr	r3, [sp, #20]
 800397e:	4937      	ldr	r1, [pc, #220]	; (8003a5c <Network::Init(NetworkParamsStore*)+0x274>)
 8003980:	1ac0      	subs	r0, r0, r3
 8003982:	9b03      	ldr	r3, [sp, #12]
 8003984:	4298      	cmp	r0, r3
 8003986:	db35      	blt.n	80039f4 <Network::Init(NetworkParamsStore*)+0x20c>
 8003988:	2001      	movs	r0, #1
 800398a:	f7fd f8cf 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800398e:	2101      	movs	r1, #1
 8003990:	6838      	ldr	r0, [r7, #0]
 8003992:	f000 fd89 	bl	80044a8 <LedBlink::SetMode(ledblink::Mode)>
 8003996:	2301      	movs	r3, #1
 8003998:	7163      	strb	r3, [r4, #5]
 800399a:	2300      	movs	r3, #0
 800399c:	4632      	mov	r2, r6
 800399e:	71e3      	strb	r3, [r4, #7]
 80039a0:	4628      	mov	r0, r5
 80039a2:	4643      	mov	r3, r8
 80039a4:	f8cd 9000 	str.w	r9, [sp]
 80039a8:	a908      	add	r1, sp, #32
 80039aa:	f7fc fbfd 	bl	80001a8 <net_init>
 80039ae:	7963      	ldrb	r3, [r4, #5]
 80039b0:	2b00      	cmp	r3, #0
 80039b2:	d0ce      	beq.n	8003952 <Network::Init(NetworkParamsStore*)+0x16a>
 80039b4:	9b08      	ldr	r3, [sp, #32]
 80039b6:	6163      	str	r3, [r4, #20]
 80039b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039ba:	61e3      	str	r3, [r4, #28]
 80039bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039be:	61a3      	str	r3, [r4, #24]
 80039c0:	f7fd f86a 	bl	8000a98 <network::display_ip()>
 80039c4:	b025      	add	sp, #148	; 0x94
 80039c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039ca:	463b      	mov	r3, r7
 80039cc:	f800 2f01 	strb.w	r2, [r0, #1]!
 80039d0:	e741      	b.n	8003856 <Network::Init(NetworkParamsStore*)+0x6e>
 80039d2:	4630      	mov	r0, r6
 80039d4:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80039d8:	f7ff fea2 	bl	8003720 <strncpy.constprop.0.isra.0>
 80039dc:	2300      	movs	r3, #0
 80039de:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80039e2:	e782      	b.n	80038ea <Network::Init(NetworkParamsStore*)+0x102>
 80039e4:	69e1      	ldr	r1, [r4, #28]
 80039e6:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80039ea:	4053      	eors	r3, r2
 80039ec:	420b      	tst	r3, r1
 80039ee:	bf18      	it	ne
 80039f0:	920a      	strne	r2, [sp, #40]	; 0x28
 80039f2:	e791      	b.n	8003918 <Network::Init(NetworkParamsStore*)+0x130>
 80039f4:	683b      	ldr	r3, [r7, #0]
 80039f6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 80039fa:	f1bc 0f00 	cmp.w	ip, #0
 80039fe:	d0ba      	beq.n	8003976 <Network::Init(NetworkParamsStore*)+0x18e>
 8003a00:	6808      	ldr	r0, [r1, #0]
 8003a02:	695a      	ldr	r2, [r3, #20]
 8003a04:	1a80      	subs	r0, r0, r2
 8003a06:	4584      	cmp	ip, r0
 8003a08:	d8b5      	bhi.n	8003976 <Network::Init(NetworkParamsStore*)+0x18e>
 8003a0a:	6808      	ldr	r0, [r1, #0]
 8003a0c:	6158      	str	r0, [r3, #20]
 8003a0e:	6918      	ldr	r0, [r3, #16]
 8003a10:	2801      	cmp	r0, #1
 8003a12:	f080 0201 	eor.w	r2, r0, #1
 8003a16:	611a      	str	r2, [r3, #16]
 8003a18:	bf16      	itet	ne
 8003a1a:	2301      	movne	r3, #1
 8003a1c:	f8cb 0014 	streq.w	r0, [fp, #20]
 8003a20:	f8cb 3010 	strne.w	r3, [fp, #16]
 8003a24:	e7a7      	b.n	8003976 <Network::Init(NetworkParamsStore*)+0x18e>
 8003a26:	b11b      	cbz	r3, 8003a30 <Network::Init(NetworkParamsStore*)+0x248>
 8003a28:	2300      	movs	r3, #0
 8003a2a:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8003a2e:	9308      	str	r3, [sp, #32]
 8003a30:	2300      	movs	r3, #0
 8003a32:	f88d 301f 	strb.w	r3, [sp, #31]
 8003a36:	f10d 031f 	add.w	r3, sp, #31
 8003a3a:	4632      	mov	r2, r6
 8003a3c:	4628      	mov	r0, r5
 8003a3e:	9300      	str	r3, [sp, #0]
 8003a40:	a908      	add	r1, sp, #32
 8003a42:	f7fc fbb1 	bl	80001a8 <net_init>
 8003a46:	e7b5      	b.n	80039b4 <Network::Init(NetworkParamsStore*)+0x1cc>
 8003a48:	2001      	movs	r0, #1
 8003a4a:	f7fd f86f 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8003a4e:	e763      	b.n	8003918 <Network::Init(NetworkParamsStore*)+0x130>
 8003a50:	0800754d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, ip, sp, lr}
 8003a54:	200039e4 	andcs	r3, r0, r4, ror #19
 8003a58:	40011000 	andmi	r1, r1, r0
 8003a5c:	200039fc 	strdcs	r3, [r0], -ip

08003a60 <Network::EnableDhcp()>:
 8003a60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003a62:	4d21      	ldr	r5, [pc, #132]	; (8003ae8 <Network::EnableDhcp()+0x88>)
 8003a64:	4604      	mov	r4, r0
 8003a66:	682b      	ldr	r3, [r5, #0]
 8003a68:	781e      	ldrb	r6, [r3, #0]
 8003a6a:	b136      	cbz	r6, 8003a7a <Network::EnableDhcp()+0x1a>
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	2104      	movs	r1, #4
 8003a70:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8003a74:	701a      	strb	r2, [r3, #0]
 8003a76:	f001 fc51 	bl	800531c <fwdgt_config>
 8003a7a:	2001      	movs	r0, #1
 8003a7c:	f7fd f856 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8003a80:	1de2      	adds	r2, r4, #7
 8003a82:	f104 0120 	add.w	r1, r4, #32
 8003a86:	a801      	add	r0, sp, #4
 8003a88:	f7ff fa30 	bl	8002eec <net_set_dhcp>
 8003a8c:	79e3      	ldrb	r3, [r4, #7]
 8003a8e:	7160      	strb	r0, [r4, #5]
 8003a90:	b33b      	cbz	r3, 8003ae2 <Network::EnableDhcp()+0x82>
 8003a92:	2004      	movs	r0, #4
 8003a94:	f7fd f84a 	bl	8000b2c <network::display_dhcp_status(network::dhcp::ClientStatus)>
 8003a98:	b16e      	cbz	r6, 8003ab6 <Network::EnableDhcp()+0x56>
 8003a9a:	2102      	movs	r1, #2
 8003a9c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8003aa0:	682d      	ldr	r5, [r5, #0]
 8003aa2:	f001 fc3b 	bl	800531c <fwdgt_config>
 8003aa6:	2801      	cmp	r0, #1
 8003aa8:	bf0c      	ite	eq
 8003aaa:	2301      	moveq	r3, #1
 8003aac:	2300      	movne	r3, #0
 8003aae:	702b      	strb	r3, [r5, #0]
 8003ab0:	d101      	bne.n	8003ab6 <Network::EnableDhcp()+0x56>
 8003ab2:	f001 fc23 	bl	80052fc <fwdgt_enable>
 8003ab6:	9b01      	ldr	r3, [sp, #4]
 8003ab8:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8003abc:	6163      	str	r3, [r4, #20]
 8003abe:	9b02      	ldr	r3, [sp, #8]
 8003ac0:	61e3      	str	r3, [r4, #28]
 8003ac2:	9b03      	ldr	r3, [sp, #12]
 8003ac4:	61a3      	str	r3, [r4, #24]
 8003ac6:	b118      	cbz	r0, 8003ad0 <Network::EnableDhcp()+0x70>
 8003ac8:	6803      	ldr	r3, [r0, #0]
 8003aca:	7961      	ldrb	r1, [r4, #5]
 8003acc:	699b      	ldr	r3, [r3, #24]
 8003ace:	4798      	blx	r3
 8003ad0:	f7fc ffe2 	bl	8000a98 <network::display_ip()>
 8003ad4:	f7fd f814 	bl	8000b00 <network::display_netmask()>
 8003ad8:	f7fd f814 	bl	8000b04 <network::display_gateway()>
 8003adc:	7960      	ldrb	r0, [r4, #5]
 8003ade:	b004      	add	sp, #16
 8003ae0:	bd70      	pop	{r4, r5, r6, pc}
 8003ae2:	2002      	movs	r0, #2
 8003ae4:	e7d6      	b.n	8003a94 <Network::EnableDhcp()+0x34>
 8003ae6:	bf00      	nop
 8003ae8:	200039e8 	andcs	r3, r0, r8, ror #19

08003aec <Network::Print()>:
 8003aec:	b530      	push	{r4, r5, lr}
 8003aee:	4604      	mov	r4, r0
 8003af0:	b085      	sub	sp, #20
 8003af2:	4832      	ldr	r0, [pc, #200]	; (8003bbc <Network::Print()+0xd0>)
 8003af4:	f7fd fa5e 	bl	8000fb4 <printf>
 8003af8:	f104 0120 	add.w	r1, r4, #32
 8003afc:	4830      	ldr	r0, [pc, #192]	; (8003bc0 <Network::Print()+0xd4>)
 8003afe:	f7fd fa59 	bl	8000fb4 <printf>
 8003b02:	68a1      	ldr	r1, [r4, #8]
 8003b04:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 8003b08:	482e      	ldr	r0, [pc, #184]	; (8003bc4 <Network::Print()+0xd8>)
 8003b0a:	f7fd fa53 	bl	8000fb4 <printf>
 8003b0e:	69e0      	ldr	r0, [r4, #28]
 8003b10:	f7fd f844 	bl	8000b9c <__popcountsi2>
 8003b14:	6965      	ldr	r5, [r4, #20]
 8003b16:	9001      	str	r0, [sp, #4]
 8003b18:	0e2b      	lsrs	r3, r5, #24
 8003b1a:	9300      	str	r3, [sp, #0]
 8003b1c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8003b20:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8003b24:	b2e9      	uxtb	r1, r5
 8003b26:	4828      	ldr	r0, [pc, #160]	; (8003bc8 <Network::Print()+0xdc>)
 8003b28:	f7fd fa44 	bl	8000fb4 <printf>
 8003b2c:	69e1      	ldr	r1, [r4, #28]
 8003b2e:	4827      	ldr	r0, [pc, #156]	; (8003bcc <Network::Print()+0xe0>)
 8003b30:	0e0b      	lsrs	r3, r1, #24
 8003b32:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8003b36:	9300      	str	r3, [sp, #0]
 8003b38:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8003b3c:	b2c9      	uxtb	r1, r1
 8003b3e:	f7fd fa39 	bl	8000fb4 <printf>
 8003b42:	69a1      	ldr	r1, [r4, #24]
 8003b44:	4822      	ldr	r0, [pc, #136]	; (8003bd0 <Network::Print()+0xe4>)
 8003b46:	0e0b      	lsrs	r3, r1, #24
 8003b48:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8003b4c:	9300      	str	r3, [sp, #0]
 8003b4e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8003b52:	b2c9      	uxtb	r1, r1
 8003b54:	f7fd fa2e 	bl	8000fb4 <printf>
 8003b58:	69e3      	ldr	r3, [r4, #28]
 8003b5a:	6961      	ldr	r1, [r4, #20]
 8003b5c:	481d      	ldr	r0, [pc, #116]	; (8003bd4 <Network::Print()+0xe8>)
 8003b5e:	ea61 0103 	orn	r1, r1, r3
 8003b62:	0e0b      	lsrs	r3, r1, #24
 8003b64:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8003b68:	9300      	str	r3, [sp, #0]
 8003b6a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8003b6e:	b2c9      	uxtb	r1, r1
 8003b70:	f7fd fa20 	bl	8000fb4 <printf>
 8003b74:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8003b78:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8003b7c:	9302      	str	r3, [sp, #8]
 8003b7e:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8003b82:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8003b86:	9301      	str	r3, [sp, #4]
 8003b88:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8003b8c:	4812      	ldr	r0, [pc, #72]	; (8003bd8 <Network::Print()+0xec>)
 8003b8e:	9300      	str	r3, [sp, #0]
 8003b90:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8003b94:	f7fd fa0e 	bl	8000fb4 <printf>
 8003b98:	4b10      	ldr	r3, [pc, #64]	; (8003bdc <Network::Print()+0xf0>)
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	79da      	ldrb	r2, [r3, #7]
 8003b9e:	b952      	cbnz	r2, 8003bb6 <Network::Print()+0xca>
 8003ba0:	795b      	ldrb	r3, [r3, #5]
 8003ba2:	2b00      	cmp	r3, #0
 8003ba4:	bf14      	ite	ne
 8003ba6:	2144      	movne	r1, #68	; 0x44
 8003ba8:	2153      	moveq	r1, #83	; 0x53
 8003baa:	480d      	ldr	r0, [pc, #52]	; (8003be0 <Network::Print()+0xf4>)
 8003bac:	b005      	add	sp, #20
 8003bae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003bb2:	f7fd b9ff 	b.w	8000fb4 <printf>
 8003bb6:	215a      	movs	r1, #90	; 0x5a
 8003bb8:	e7f7      	b.n	8003baa <Network::Print()+0xbe>
 8003bba:	bf00      	nop
 8003bbc:	08007559 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, ip, sp, lr}
 8003bc0:	08007562 	stmdaeq	r0, {r1, r5, r6, r8, sl, ip, sp, lr}
 8003bc4:	08007573 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}
 8003bc8:	08007588 	stmdaeq	r0, {r3, r7, r8, sl, ip, sp, lr}
 8003bcc:	080075a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, ip, sp, lr}
 8003bd0:	080075bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, sl, ip, sp, lr}
 8003bd4:	080075d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, ip, sp, lr}
 8003bd8:	080075f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 8003bdc:	200034d4 	ldrdcs	r3, [r0], -r4
 8003be0:	0800761f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, sl, ip, sp, lr}

08003be4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8003be4:	b510      	push	{r4, lr}
 8003be6:	225e      	movs	r2, #94	; 0x5e
 8003be8:	4604      	mov	r4, r0
 8003bea:	f840 1b04 	str.w	r1, [r0], #4
 8003bee:	2100      	movs	r1, #0
 8003bf0:	f000 fd81 	bl	80046f6 <memset>
 8003bf4:	2301      	movs	r3, #1
 8003bf6:	4620      	mov	r0, r4
 8003bf8:	7623      	strb	r3, [r4, #24]
 8003bfa:	bd10      	pop	{r4, pc}

08003bfc <NetworkParams::Load()>:
 8003bfc:	b508      	push	{r3, lr}
 8003bfe:	2300      	movs	r3, #0
 8003c00:	4601      	mov	r1, r0
 8003c02:	6043      	str	r3, [r0, #4]
 8003c04:	6800      	ldr	r0, [r0, #0]
 8003c06:	b120      	cbz	r0, 8003c12 <NetworkParams::Load()+0x16>
 8003c08:	6803      	ldr	r3, [r0, #0]
 8003c0a:	3104      	adds	r1, #4
 8003c0c:	68db      	ldr	r3, [r3, #12]
 8003c0e:	4798      	blx	r3
 8003c10:	2001      	movs	r0, #1
 8003c12:	bd08      	pop	{r3, pc}

08003c14 <NetworkParams::Dump()>:
 8003c14:	4770      	bx	lr

08003c16 <memcpy.isra.0>:
 8003c16:	3801      	subs	r0, #1
 8003c18:	440a      	add	r2, r1
 8003c1a:	4291      	cmp	r1, r2
 8003c1c:	d100      	bne.n	8003c20 <memcpy.isra.0+0xa>
 8003c1e:	4770      	bx	lr
 8003c20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003c24:	f800 3f01 	strb.w	r3, [r0, #1]!
 8003c28:	e7f7      	b.n	8003c1a <memcpy.isra.0+0x4>
	...

08003c2c <arp_announce>:
 8003c2c:	4803      	ldr	r0, [pc, #12]	; (8003c3c <arp_announce+0x10>)
 8003c2e:	69c3      	ldr	r3, [r0, #28]
 8003c30:	b113      	cbz	r3, 8003c38 <arp_announce+0xc>
 8003c32:	212a      	movs	r1, #42	; 0x2a
 8003c34:	f001 bfb4 	b.w	8005ba0 <emac_eth_send>
 8003c38:	4770      	bx	lr
 8003c3a:	bf00      	nop
 8003c3c:	200034d8 	ldrdcs	r3, [r0], -r8

08003c40 <arp_handle_request>:
 8003c40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003c42:	2204      	movs	r2, #4
 8003c44:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8003c48:	4604      	mov	r4, r0
 8003c4a:	eb0d 0002 	add.w	r0, sp, r2
 8003c4e:	f7ff ffe2 	bl	8003c16 <memcpy.isra.0>
 8003c52:	4b0d      	ldr	r3, [pc, #52]	; (8003c88 <arp_handle_request+0x48>)
 8003c54:	9a01      	ldr	r2, [sp, #4]
 8003c56:	69db      	ldr	r3, [r3, #28]
 8003c58:	429a      	cmp	r2, r3
 8003c5a:	d113      	bne.n	8003c84 <arp_handle_request+0x44>
 8003c5c:	2206      	movs	r2, #6
 8003c5e:	4d0b      	ldr	r5, [pc, #44]	; (8003c8c <arp_handle_request+0x4c>)
 8003c60:	18a1      	adds	r1, r4, r2
 8003c62:	4628      	mov	r0, r5
 8003c64:	f7ff ffd7 	bl	8003c16 <memcpy.isra.0>
 8003c68:	f104 0116 	add.w	r1, r4, #22
 8003c6c:	f105 0020 	add.w	r0, r5, #32
 8003c70:	2206      	movs	r2, #6
 8003c72:	f7ff ffd0 	bl	8003c16 <memcpy.isra.0>
 8003c76:	69e3      	ldr	r3, [r4, #28]
 8003c78:	212a      	movs	r1, #42	; 0x2a
 8003c7a:	4628      	mov	r0, r5
 8003c7c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8003c80:	f001 ff8e 	bl	8005ba0 <emac_eth_send>
 8003c84:	b003      	add	sp, #12
 8003c86:	bd30      	pop	{r4, r5, pc}
 8003c88:	200034d8 	ldrdcs	r3, [r0], -r8
 8003c8c:	20003504 	andcs	r3, r0, r4, lsl #10

08003c90 <arp_handle_reply>:
 8003c90:	69c1      	ldr	r1, [r0, #28]
 8003c92:	3016      	adds	r0, #22
 8003c94:	f000 b80a 	b.w	8003cac <arp_cache_update>

08003c98 <arp_send_request>:
 8003c98:	4b03      	ldr	r3, [pc, #12]	; (8003ca8 <arp_send_request+0x10>)
 8003c9a:	212a      	movs	r1, #42	; 0x2a
 8003c9c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8003ca0:	4618      	mov	r0, r3
 8003ca2:	f001 bf7d 	b.w	8005ba0 <emac_eth_send>
 8003ca6:	bf00      	nop
 8003ca8:	20003530 	andcs	r3, r0, r0, lsr r5

08003cac <arp_cache_update>:
 8003cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003cae:	4e11      	ldr	r6, [pc, #68]	; (8003cf4 <arp_cache_update+0x48>)
 8003cb0:	8833      	ldrh	r3, [r6, #0]
 8003cb2:	2b20      	cmp	r3, #32
 8003cb4:	d018      	beq.n	8003ce8 <arp_cache_update+0x3c>
 8003cb6:	2400      	movs	r4, #0
 8003cb8:	220c      	movs	r2, #12
 8003cba:	4d0f      	ldr	r5, [pc, #60]	; (8003cf8 <arp_cache_update+0x4c>)
 8003cbc:	b2a7      	uxth	r7, r4
 8003cbe:	42bb      	cmp	r3, r7
 8003cc0:	d80b      	bhi.n	8003cda <arp_cache_update+0x2e>
 8003cc2:	fb02 5203 	mla	r2, r2, r3, r5
 8003cc6:	1d84      	adds	r4, r0, #6
 8003cc8:	3203      	adds	r2, #3
 8003cca:	42a0      	cmp	r0, r4
 8003ccc:	d10d      	bne.n	8003cea <arp_cache_update+0x3e>
 8003cce:	220c      	movs	r2, #12
 8003cd0:	435a      	muls	r2, r3
 8003cd2:	3301      	adds	r3, #1
 8003cd4:	50a9      	str	r1, [r5, r2]
 8003cd6:	8033      	strh	r3, [r6, #0]
 8003cd8:	e006      	b.n	8003ce8 <arp_cache_update+0x3c>
 8003cda:	3401      	adds	r4, #1
 8003cdc:	fb02 5704 	mla	r7, r2, r4, r5
 8003ce0:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8003ce4:	428f      	cmp	r7, r1
 8003ce6:	d1e9      	bne.n	8003cbc <arp_cache_update+0x10>
 8003ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003cea:	f810 7b01 	ldrb.w	r7, [r0], #1
 8003cee:	f802 7f01 	strb.w	r7, [r2, #1]!
 8003cf2:	e7ea      	b.n	8003cca <arp_cache_update+0x1e>
 8003cf4:	200036dc 	ldrdcs	r3, [r0], -ip
 8003cf8:	2000355c 	andcs	r3, r0, ip, asr r5

08003cfc <arp_cache_lookup>:
 8003cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d00:	2200      	movs	r2, #0
 8003d02:	4606      	mov	r6, r0
 8003d04:	460c      	mov	r4, r1
 8003d06:	200c      	movs	r0, #12
 8003d08:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8003d90 <arp_cache_lookup+0x94>
 8003d0c:	fb00 f302 	mul.w	r3, r0, r2
 8003d10:	f853 1008 	ldr.w	r1, [r3, r8]
 8003d14:	42b1      	cmp	r1, r6
 8003d16:	d10d      	bne.n	8003d34 <arp_cache_lookup+0x38>
 8003d18:	3304      	adds	r3, #4
 8003d1a:	4443      	add	r3, r8
 8003d1c:	3c01      	subs	r4, #1
 8003d1e:	1d9a      	adds	r2, r3, #6
 8003d20:	4293      	cmp	r3, r2
 8003d22:	d102      	bne.n	8003d2a <arp_cache_lookup+0x2e>
 8003d24:	4630      	mov	r0, r6
 8003d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d2a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8003d2e:	f804 1f01 	strb.w	r1, [r4, #1]!
 8003d32:	e7f5      	b.n	8003d20 <arp_cache_lookup+0x24>
 8003d34:	b111      	cbz	r1, 8003d3c <arp_cache_lookup+0x40>
 8003d36:	3201      	adds	r2, #1
 8003d38:	2a20      	cmp	r2, #32
 8003d3a:	d1e7      	bne.n	8003d0c <arp_cache_lookup+0x10>
 8003d3c:	2704      	movs	r7, #4
 8003d3e:	f8df a054 	ldr.w	sl, [pc, #84]	; 8003d94 <arp_cache_lookup+0x98>
 8003d42:	f8ba 5000 	ldrh.w	r5, [sl]
 8003d46:	3f01      	subs	r7, #1
 8003d48:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8003d4c:	d101      	bne.n	8003d52 <arp_cache_lookup+0x56>
 8003d4e:	463e      	mov	r6, r7
 8003d50:	e7e8      	b.n	8003d24 <arp_cache_lookup+0x28>
 8003d52:	4630      	mov	r0, r6
 8003d54:	f7ff ffa0 	bl	8003c98 <arp_send_request>
 8003d58:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8003d5c:	f1b9 0901 	subs.w	r9, r9, #1
 8003d60:	f8ba 3000 	ldrh.w	r3, [sl]
 8003d64:	d011      	beq.n	8003d8a <arp_cache_lookup+0x8e>
 8003d66:	429d      	cmp	r5, r3
 8003d68:	d00c      	beq.n	8003d84 <arp_cache_lookup+0x88>
 8003d6a:	230c      	movs	r3, #12
 8003d6c:	fb03 8505 	mla	r5, r3, r5, r8
 8003d70:	3c01      	subs	r4, #1
 8003d72:	1d2b      	adds	r3, r5, #4
 8003d74:	350a      	adds	r5, #10
 8003d76:	42ab      	cmp	r3, r5
 8003d78:	d0d4      	beq.n	8003d24 <arp_cache_lookup+0x28>
 8003d7a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d7e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8003d82:	e7f8      	b.n	8003d76 <arp_cache_lookup+0x7a>
 8003d84:	f7fc fbe6 	bl	8000554 <net_handle>
 8003d88:	e7e8      	b.n	8003d5c <arp_cache_lookup+0x60>
 8003d8a:	429d      	cmp	r5, r3
 8003d8c:	d0db      	beq.n	8003d46 <arp_cache_lookup+0x4a>
 8003d8e:	e7ec      	b.n	8003d6a <arp_cache_lookup+0x6e>
 8003d90:	2000355c 	andcs	r3, r0, ip, asr r5
 8003d94:	200036dc 	ldrdcs	r3, [r0], -ip

08003d98 <_parse_response>:
 8003d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d9c:	2400      	movs	r4, #0
 8003d9e:	460d      	mov	r5, r1
 8003da0:	46a3      	mov	fp, r4
 8003da2:	4627      	mov	r7, r4
 8003da4:	46a2      	mov	sl, r4
 8003da6:	46a1      	mov	r9, r4
 8003da8:	46a0      	mov	r8, r4
 8003daa:	4e50      	ldr	r6, [pc, #320]	; (8003eec <_parse_response+0x154>)
 8003dac:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8003db0:	6833      	ldr	r3, [r6, #0]
 8003db2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8003db6:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8003dba:	9009      	str	r0, [sp, #36]	; 0x24
 8003dbc:	9402      	str	r4, [sp, #8]
 8003dbe:	9407      	str	r4, [sp, #28]
 8003dc0:	9308      	str	r3, [sp, #32]
 8003dc2:	f7fc fbc7 	bl	8000554 <net_handle>
 8003dc6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8003dca:	9300      	str	r3, [sp, #0]
 8003dcc:	f44f 7209 	mov.w	r2, #548	; 0x224
 8003dd0:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8003dd4:	ab0c      	add	r3, sp, #48	; 0x30
 8003dd6:	a90d      	add	r1, sp, #52	; 0x34
 8003dd8:	f7ff f994 	bl	8003104 <udp_recv>
 8003ddc:	2800      	cmp	r0, #0
 8003dde:	d03f      	beq.n	8003e60 <_parse_response+0xc8>
 8003de0:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8003de4:	2b43      	cmp	r3, #67	; 0x43
 8003de6:	d13b      	bne.n	8003e60 <_parse_response+0xc8>
 8003de8:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8003dec:	1e6b      	subs	r3, r5, #1
 8003dee:	1d69      	adds	r1, r5, #5
 8003df0:	4299      	cmp	r1, r3
 8003df2:	d12f      	bne.n	8003e54 <_parse_response+0xbc>
 8003df4:	2100      	movs	r1, #0
 8003df6:	ab0d      	add	r3, sp, #52	; 0x34
 8003df8:	181d      	adds	r5, r3, r0
 8003dfa:	468c      	mov	ip, r1
 8003dfc:	460e      	mov	r6, r1
 8003dfe:	4608      	mov	r0, r1
 8003e00:	ab49      	add	r3, sp, #292	; 0x124
 8003e02:	42ab      	cmp	r3, r5
 8003e04:	d337      	bcc.n	8003e76 <_parse_response+0xde>
 8003e06:	b141      	cbz	r1, 8003e1a <_parse_response+0x82>
 8003e08:	4b39      	ldr	r3, [pc, #228]	; (8003ef0 <_parse_response+0x158>)
 8003e0a:	9a07      	ldr	r2, [sp, #28]
 8003e0c:	f883 8003 	strb.w	r8, [r3, #3]
 8003e10:	709a      	strb	r2, [r3, #2]
 8003e12:	9a06      	ldr	r2, [sp, #24]
 8003e14:	705a      	strb	r2, [r3, #1]
 8003e16:	9a05      	ldr	r2, [sp, #20]
 8003e18:	701a      	strb	r2, [r3, #0]
 8003e1a:	f1bc 0f00 	cmp.w	ip, #0
 8003e1e:	d007      	beq.n	8003e30 <_parse_response+0x98>
 8003e20:	4b34      	ldr	r3, [pc, #208]	; (8003ef4 <_parse_response+0x15c>)
 8003e22:	9a04      	ldr	r2, [sp, #16]
 8003e24:	705c      	strb	r4, [r3, #1]
 8003e26:	70da      	strb	r2, [r3, #3]
 8003e28:	9a03      	ldr	r2, [sp, #12]
 8003e2a:	709a      	strb	r2, [r3, #2]
 8003e2c:	9a02      	ldr	r2, [sp, #8]
 8003e2e:	701a      	strb	r2, [r3, #0]
 8003e30:	b13e      	cbz	r6, 8003e42 <_parse_response+0xaa>
 8003e32:	4b31      	ldr	r3, [pc, #196]	; (8003ef8 <_parse_response+0x160>)
 8003e34:	70df      	strb	r7, [r3, #3]
 8003e36:	f883 a002 	strb.w	sl, [r3, #2]
 8003e3a:	f883 9001 	strb.w	r9, [r3, #1]
 8003e3e:	f883 b000 	strb.w	fp, [r3]
 8003e42:	2802      	cmp	r0, #2
 8003e44:	d102      	bne.n	8003e4c <_parse_response+0xb4>
 8003e46:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003e48:	4b2c      	ldr	r3, [pc, #176]	; (8003efc <_parse_response+0x164>)
 8003e4a:	601a      	str	r2, [r3, #0]
 8003e4c:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8003e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e54:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8003e58:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8003e5c:	45e6      	cmp	lr, ip
 8003e5e:	d0c7      	beq.n	8003df0 <_parse_response+0x58>
 8003e60:	6833      	ldr	r3, [r6, #0]
 8003e62:	9a08      	ldr	r2, [sp, #32]
 8003e64:	1a9b      	subs	r3, r3, r2
 8003e66:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8003e6a:	d3aa      	bcc.n	8003dc2 <_parse_response+0x2a>
 8003e6c:	2800      	cmp	r0, #0
 8003e6e:	d1c1      	bne.n	8003df4 <_parse_response+0x5c>
 8003e70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003e74:	e7ea      	b.n	8003e4c <_parse_response+0xb4>
 8003e76:	781a      	ldrb	r2, [r3, #0]
 8003e78:	2a35      	cmp	r2, #53	; 0x35
 8003e7a:	d011      	beq.n	8003ea0 <_parse_response+0x108>
 8003e7c:	d808      	bhi.n	8003e90 <_parse_response+0xf8>
 8003e7e:	2a01      	cmp	r2, #1
 8003e80:	d011      	beq.n	8003ea6 <_parse_response+0x10e>
 8003e82:	2a03      	cmp	r2, #3
 8003e84:	d019      	beq.n	8003eba <_parse_response+0x122>
 8003e86:	b14a      	cbz	r2, 8003e9c <_parse_response+0x104>
 8003e88:	1c9a      	adds	r2, r3, #2
 8003e8a:	785b      	ldrb	r3, [r3, #1]
 8003e8c:	4413      	add	r3, r2
 8003e8e:	e7b8      	b.n	8003e02 <_parse_response+0x6a>
 8003e90:	2a36      	cmp	r2, #54	; 0x36
 8003e92:	d01f      	beq.n	8003ed4 <_parse_response+0x13c>
 8003e94:	2aff      	cmp	r2, #255	; 0xff
 8003e96:	d1f7      	bne.n	8003e88 <_parse_response+0xf0>
 8003e98:	462b      	mov	r3, r5
 8003e9a:	e7b2      	b.n	8003e02 <_parse_response+0x6a>
 8003e9c:	3301      	adds	r3, #1
 8003e9e:	e7b0      	b.n	8003e02 <_parse_response+0x6a>
 8003ea0:	7898      	ldrb	r0, [r3, #2]
 8003ea2:	3303      	adds	r3, #3
 8003ea4:	e7ad      	b.n	8003e02 <_parse_response+0x6a>
 8003ea6:	f893 b002 	ldrb.w	fp, [r3, #2]
 8003eaa:	f893 9003 	ldrb.w	r9, [r3, #3]
 8003eae:	f893 a004 	ldrb.w	sl, [r3, #4]
 8003eb2:	795f      	ldrb	r7, [r3, #5]
 8003eb4:	4616      	mov	r6, r2
 8003eb6:	3306      	adds	r3, #6
 8003eb8:	e7a3      	b.n	8003e02 <_parse_response+0x6a>
 8003eba:	789a      	ldrb	r2, [r3, #2]
 8003ebc:	78dc      	ldrb	r4, [r3, #3]
 8003ebe:	9202      	str	r2, [sp, #8]
 8003ec0:	791a      	ldrb	r2, [r3, #4]
 8003ec2:	f04f 0c01 	mov.w	ip, #1
 8003ec6:	9203      	str	r2, [sp, #12]
 8003ec8:	795a      	ldrb	r2, [r3, #5]
 8003eca:	9204      	str	r2, [sp, #16]
 8003ecc:	785a      	ldrb	r2, [r3, #1]
 8003ece:	4413      	add	r3, r2
 8003ed0:	3302      	adds	r3, #2
 8003ed2:	e796      	b.n	8003e02 <_parse_response+0x6a>
 8003ed4:	789a      	ldrb	r2, [r3, #2]
 8003ed6:	f893 8005 	ldrb.w	r8, [r3, #5]
 8003eda:	9205      	str	r2, [sp, #20]
 8003edc:	78da      	ldrb	r2, [r3, #3]
 8003ede:	2101      	movs	r1, #1
 8003ee0:	9206      	str	r2, [sp, #24]
 8003ee2:	791a      	ldrb	r2, [r3, #4]
 8003ee4:	3306      	adds	r3, #6
 8003ee6:	9207      	str	r2, [sp, #28]
 8003ee8:	e78b      	b.n	8003e02 <_parse_response+0x6a>
 8003eea:	bf00      	nop
 8003eec:	200039fc 	strdcs	r3, [r0], -ip
 8003ef0:	20003910 	andcs	r3, r0, r0, lsl r9
 8003ef4:	200036e0 	andcs	r3, r0, r0, ror #13
 8003ef8:	200036e8 	andcs	r3, r0, r8, ror #13
 8003efc:	200036e4 	andcs	r3, r0, r4, ror #13

08003f00 <memcpy.isra.0>:
 8003f00:	3801      	subs	r0, #1
 8003f02:	440a      	add	r2, r1
 8003f04:	4291      	cmp	r1, r2
 8003f06:	d100      	bne.n	8003f0a <memcpy.isra.0+0xa>
 8003f08:	4770      	bx	lr
 8003f0a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f0e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8003f12:	e7f7      	b.n	8003f04 <memcpy.isra.0+0x4>

08003f14 <dhcp_client>:
 8003f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f18:	b087      	sub	sp, #28
 8003f1a:	9203      	str	r2, [sp, #12]
 8003f1c:	4a77      	ldr	r2, [pc, #476]	; (80040fc <dhcp_client+0x1e8>)
 8003f1e:	460f      	mov	r7, r1
 8003f20:	4605      	mov	r5, r0
 8003f22:	f44f 7309 	mov.w	r3, #548	; 0x224
 8003f26:	4614      	mov	r4, r2
 8003f28:	2100      	movs	r1, #0
 8003f2a:	3b01      	subs	r3, #1
 8003f2c:	f802 1b01 	strb.w	r1, [r2], #1
 8003f30:	d1fb      	bne.n	8003f2a <dhcp_client+0x16>
 8003f32:	f240 1301 	movw	r3, #257	; 0x101
 8003f36:	2206      	movs	r2, #6
 8003f38:	4629      	mov	r1, r5
 8003f3a:	4871      	ldr	r0, [pc, #452]	; (8004100 <dhcp_client+0x1ec>)
 8003f3c:	8023      	strh	r3, [r4, #0]
 8003f3e:	70a2      	strb	r2, [r4, #2]
 8003f40:	f7ff ffde 	bl	8003f00 <memcpy.isra.0>
 8003f44:	4b6f      	ldr	r3, [pc, #444]	; (8004104 <dhcp_client+0x1f0>)
 8003f46:	2044      	movs	r0, #68	; 0x44
 8003f48:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8003f4c:	f240 1335 	movw	r3, #309	; 0x135
 8003f50:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8003f54:	f7ff f898 	bl	8003088 <udp_bind>
 8003f58:	1e06      	subs	r6, r0, #0
 8003f5a:	f2c0 80c9 	blt.w	80040f0 <dhcp_client+0x1dc>
 8003f5e:	f04f 0915 	mov.w	r9, #21
 8003f62:	f8df a198 	ldr.w	sl, [pc, #408]	; 80040fc <dhcp_client+0x1e8>
 8003f66:	f1b9 0901 	subs.w	r9, r9, #1
 8003f6a:	d11f      	bne.n	8003fac <dhcp_client+0x98>
 8003f6c:	464c      	mov	r4, r9
 8003f6e:	2044      	movs	r0, #68	; 0x44
 8003f70:	f7ff f8a8 	bl	80030c4 <udp_unbind>
 8003f74:	2c00      	cmp	r4, #0
 8003f76:	f000 80be 	beq.w	80040f6 <dhcp_client+0x1e2>
 8003f7a:	2204      	movs	r2, #4
 8003f7c:	4962      	ldr	r1, [pc, #392]	; (8004108 <dhcp_client+0x1f4>)
 8003f7e:	a805      	add	r0, sp, #20
 8003f80:	f7ff ffbe 	bl	8003f00 <memcpy.isra.0>
 8003f84:	9b05      	ldr	r3, [sp, #20]
 8003f86:	2204      	movs	r2, #4
 8003f88:	4960      	ldr	r1, [pc, #384]	; (800410c <dhcp_client+0x1f8>)
 8003f8a:	603b      	str	r3, [r7, #0]
 8003f8c:	a805      	add	r0, sp, #20
 8003f8e:	f7ff ffb7 	bl	8003f00 <memcpy.isra.0>
 8003f92:	9b05      	ldr	r3, [sp, #20]
 8003f94:	a805      	add	r0, sp, #20
 8003f96:	60bb      	str	r3, [r7, #8]
 8003f98:	2204      	movs	r2, #4
 8003f9a:	495d      	ldr	r1, [pc, #372]	; (8004110 <dhcp_client+0x1fc>)
 8003f9c:	f7ff ffb0 	bl	8003f00 <memcpy.isra.0>
 8003fa0:	2000      	movs	r0, #0
 8003fa2:	9b05      	ldr	r3, [sp, #20]
 8003fa4:	607b      	str	r3, [r7, #4]
 8003fa6:	b007      	add	sp, #28
 8003fa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fac:	f643 5301 	movw	r3, #15617	; 0x3d01
 8003fb0:	f240 1807 	movw	r8, #263	; 0x107
 8003fb4:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8003fb8:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8003fbc:	782b      	ldrb	r3, [r5, #0]
 8003fbe:	4a55      	ldr	r2, [pc, #340]	; (8004114 <dhcp_client+0x200>)
 8003fc0:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8003fc4:	786b      	ldrb	r3, [r5, #1]
 8003fc6:	fa5f fb86 	uxtb.w	fp, r6
 8003fca:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8003fce:	78ab      	ldrb	r3, [r5, #2]
 8003fd0:	4651      	mov	r1, sl
 8003fd2:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8003fd6:	78eb      	ldrb	r3, [r5, #3]
 8003fd8:	4658      	mov	r0, fp
 8003fda:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8003fde:	792b      	ldrb	r3, [r5, #4]
 8003fe0:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8003fe4:	796b      	ldrb	r3, [r5, #5]
 8003fe6:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8003fea:	4b4b      	ldr	r3, [pc, #300]	; (8004118 <dhcp_client+0x204>)
 8003fec:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8003ff0:	23ff      	movs	r3, #255	; 0xff
 8003ff2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003ff6:	2343      	movs	r3, #67	; 0x43
 8003ff8:	f240 1205 	movw	r2, #261	; 0x105
 8003ffc:	9300      	str	r3, [sp, #0]
 8003ffe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004002:	f7ff f8db 	bl	80031bc <udp_send>
 8004006:	4629      	mov	r1, r5
 8004008:	4630      	mov	r0, r6
 800400a:	f7ff fec5 	bl	8003d98 <_parse_response>
 800400e:	2802      	cmp	r0, #2
 8004010:	d1a9      	bne.n	8003f66 <dhcp_client+0x52>
 8004012:	f643 5303 	movw	r3, #15619	; 0x3d03
 8004016:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800401a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800401e:	782b      	ldrb	r3, [r5, #0]
 8004020:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800411c <dhcp_client+0x208>
 8004024:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8004028:	786b      	ldrb	r3, [r5, #1]
 800402a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800402e:	78ab      	ldrb	r3, [r5, #2]
 8004030:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8004034:	78eb      	ldrb	r3, [r5, #3]
 8004036:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800403a:	792b      	ldrb	r3, [r5, #4]
 800403c:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8004040:	796b      	ldrb	r3, [r5, #5]
 8004042:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8004046:	f240 4332 	movw	r3, #1074	; 0x432
 800404a:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800404e:	4b2e      	ldr	r3, [pc, #184]	; (8004108 <dhcp_client+0x1f4>)
 8004050:	881a      	ldrh	r2, [r3, #0]
 8004052:	885b      	ldrh	r3, [r3, #2]
 8004054:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8004058:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800405c:	f240 4336 	movw	r3, #1078	; 0x436
 8004060:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8004064:	4b2e      	ldr	r3, [pc, #184]	; (8004120 <dhcp_client+0x20c>)
 8004066:	221e      	movs	r2, #30
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800406e:	230c      	movs	r3, #12
 8004070:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8004074:	9b03      	ldr	r3, [sp, #12]
 8004076:	1e58      	subs	r0, r3, #1
 8004078:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800407c:	f1a2 0e1e 	sub.w	lr, r2, #30
 8004080:	1c51      	adds	r1, r2, #1
 8004082:	bb8b      	cbnz	r3, 80040e8 <dhcp_client+0x1d4>
 8004084:	2037      	movs	r0, #55	; 0x37
 8004086:	18a3      	adds	r3, r4, r2
 8004088:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800408c:	2006      	movs	r0, #6
 800408e:	4421      	add	r1, r4
 8004090:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8004094:	2103      	movs	r1, #3
 8004096:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800409a:	210f      	movs	r1, #15
 800409c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 80040a0:	213a      	movs	r1, #58	; 0x3a
 80040a2:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80040a6:	213b      	movs	r1, #59	; 0x3b
 80040a8:	f04f 0801 	mov.w	r8, #1
 80040ac:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80040b0:	21ff      	movs	r1, #255	; 0xff
 80040b2:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80040b6:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 80040ba:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 80040be:	2343      	movs	r3, #67	; 0x43
 80040c0:	32f5      	adds	r2, #245	; 0xf5
 80040c2:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 80040c6:	4651      	mov	r1, sl
 80040c8:	9300      	str	r3, [sp, #0]
 80040ca:	b292      	uxth	r2, r2
 80040cc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80040d0:	4658      	mov	r0, fp
 80040d2:	f7ff f873 	bl	80031bc <udp_send>
 80040d6:	4629      	mov	r1, r5
 80040d8:	4630      	mov	r0, r6
 80040da:	f7ff fe5d 	bl	8003d98 <_parse_response>
 80040de:	2805      	cmp	r0, #5
 80040e0:	f47f af41 	bne.w	8003f66 <dhcp_client+0x52>
 80040e4:	4644      	mov	r4, r8
 80040e6:	e742      	b.n	8003f6e <dhcp_client+0x5a>
 80040e8:	460a      	mov	r2, r1
 80040ea:	f80c 3f01 	strb.w	r3, [ip, #1]!
 80040ee:	e7c3      	b.n	8004078 <dhcp_client+0x164>
 80040f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80040f4:	e757      	b.n	8003fa6 <dhcp_client+0x92>
 80040f6:	f06f 0001 	mvn.w	r0, #1
 80040fa:	e754      	b.n	8003fa6 <dhcp_client+0x92>
 80040fc:	200036ec 	andcs	r3, r0, ip, ror #13
 8004100:	20003708 	andcs	r3, r0, r8, lsl #14
 8004104:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8004108:	200036e4 	andcs	r3, r0, r4, ror #13
 800410c:	200036e0 	andcs	r3, r0, r0, ror #13
 8004110:	200036e8 	andcs	r3, r0, r8, ror #13
 8004114:	03010637 	movweq	r0, #5687	; 0x1637
 8004118:	3b3a0f06 	blcc	8e87d38 <__exidx_end+0xe80680>
 800411c:	200037f5 	strdcs	r3, [r0], -r5
 8004120:	20003910 	andcs	r3, r0, r0, lsl r9

08004124 <dhcp_client_release>:
 8004124:	b507      	push	{r0, r1, r2, lr}
 8004126:	2044      	movs	r0, #68	; 0x44
 8004128:	f7fe ffae 	bl	8003088 <udp_bind>
 800412c:	f243 6307 	movw	r3, #13831	; 0x3607
 8004130:	4911      	ldr	r1, [pc, #68]	; (8004178 <dhcp_client_release+0x54>)
 8004132:	b2c0      	uxtb	r0, r0
 8004134:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8004138:	2304      	movs	r3, #4
 800413a:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800413e:	4b0f      	ldr	r3, [pc, #60]	; (800417c <dhcp_client_release+0x58>)
 8004140:	781a      	ldrb	r2, [r3, #0]
 8004142:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8004146:	785a      	ldrb	r2, [r3, #1]
 8004148:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800414c:	789a      	ldrb	r2, [r3, #2]
 800414e:	78db      	ldrb	r3, [r3, #3]
 8004150:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8004154:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8004158:	23ff      	movs	r3, #255	; 0xff
 800415a:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800415e:	2343      	movs	r3, #67	; 0x43
 8004160:	22fa      	movs	r2, #250	; 0xfa
 8004162:	9300      	str	r3, [sp, #0]
 8004164:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004168:	f7ff f828 	bl	80031bc <udp_send>
 800416c:	2044      	movs	r0, #68	; 0x44
 800416e:	b003      	add	sp, #12
 8004170:	f85d eb04 	ldr.w	lr, [sp], #4
 8004174:	f7fe bfa6 	b.w	80030c4 <udp_unbind>
 8004178:	200036ec 	andcs	r3, r0, ip, ror #13
 800417c:	20003910 	andcs	r3, r0, r0, lsl r9

08004180 <memcpy.isra.0>:
 8004180:	3801      	subs	r0, #1
 8004182:	440a      	add	r2, r1
 8004184:	4291      	cmp	r1, r2
 8004186:	d100      	bne.n	800418a <memcpy.isra.0+0xa>
 8004188:	4770      	bx	lr
 800418a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800418e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8004192:	e7f7      	b.n	8004184 <memcpy.isra.0+0x4>

08004194 <_send_report>:
 8004194:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004196:	491c      	ldr	r1, [pc, #112]	; (8004208 <_send_report+0x74>)
 8004198:	4c1c      	ldr	r4, [pc, #112]	; (800420c <_send_report+0x78>)
 800419a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800419e:	9001      	str	r0, [sp, #4]
 80041a0:	70cb      	strb	r3, [r1, #3]
 80041a2:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80041a6:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80041aa:	710b      	strb	r3, [r1, #4]
 80041ac:	7148      	strb	r0, [r1, #5]
 80041ae:	2206      	movs	r2, #6
 80041b0:	4620      	mov	r0, r4
 80041b2:	f7ff ffe5 	bl	8004180 <memcpy.isra.0>
 80041b6:	2204      	movs	r2, #4
 80041b8:	2700      	movs	r7, #0
 80041ba:	4d15      	ldr	r5, [pc, #84]	; (8004210 <_send_report+0x7c>)
 80041bc:	eb0d 0102 	add.w	r1, sp, r2
 80041c0:	882b      	ldrh	r3, [r5, #0]
 80041c2:	f104 001e 	add.w	r0, r4, #30
 80041c6:	f104 060e 	add.w	r6, r4, #14
 80041ca:	8263      	strh	r3, [r4, #18]
 80041cc:	f7ff ffd8 	bl	8004180 <memcpy.isra.0>
 80041d0:	2118      	movs	r1, #24
 80041d2:	4630      	mov	r0, r6
 80041d4:	8327      	strh	r7, [r4, #24]
 80041d6:	f000 f88c 	bl	80042f2 <net_chksum>
 80041da:	2204      	movs	r2, #4
 80041dc:	8320      	strh	r0, [r4, #24]
 80041de:	eb0d 0102 	add.w	r1, sp, r2
 80041e2:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 80041e6:	f7ff ffcb 	bl	8004180 <memcpy.isra.0>
 80041ea:	2120      	movs	r1, #32
 80041ec:	4630      	mov	r0, r6
 80041ee:	8527      	strh	r7, [r4, #40]	; 0x28
 80041f0:	f000 f87f 	bl	80042f2 <net_chksum>
 80041f4:	212e      	movs	r1, #46	; 0x2e
 80041f6:	8520      	strh	r0, [r4, #40]	; 0x28
 80041f8:	4620      	mov	r0, r4
 80041fa:	f001 fcd1 	bl	8005ba0 <emac_eth_send>
 80041fe:	882b      	ldrh	r3, [r5, #0]
 8004200:	3301      	adds	r3, #1
 8004202:	802b      	strh	r3, [r5, #0]
 8004204:	b003      	add	sp, #12
 8004206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004208:	20003954 	andcs	r3, r0, r4, asr r9
 800420c:	2000395c 	andcs	r3, r0, ip, asr r9
 8004210:	2000391c 	andcs	r3, r0, ip, lsl r9

08004214 <igmp_set_ip>:
 8004214:	b507      	push	{r0, r1, r2, lr}
 8004216:	2204      	movs	r2, #4
 8004218:	6803      	ldr	r3, [r0, #0]
 800421a:	eb0d 0102 	add.w	r1, sp, r2
 800421e:	4806      	ldr	r0, [pc, #24]	; (8004238 <igmp_set_ip+0x24>)
 8004220:	9301      	str	r3, [sp, #4]
 8004222:	f7ff ffad 	bl	8004180 <memcpy.isra.0>
 8004226:	2204      	movs	r2, #4
 8004228:	4804      	ldr	r0, [pc, #16]	; (800423c <igmp_set_ip+0x28>)
 800422a:	eb0d 0102 	add.w	r1, sp, r2
 800422e:	f7ff ffa7 	bl	8004180 <memcpy.isra.0>
 8004232:	b003      	add	sp, #12
 8004234:	f85d fb04 	ldr.w	pc, [sp], #4
 8004238:	20003976 	andcs	r3, r0, r6, ror r9
 800423c:	2000393e 	andcs	r3, r0, lr, lsr r9

08004240 <igmp_timer>:
 8004240:	b538      	push	{r3, r4, r5, lr}
 8004242:	2500      	movs	r5, #0
 8004244:	4c0a      	ldr	r4, [pc, #40]	; (8004270 <igmp_timer+0x30>)
 8004246:	7962      	ldrb	r2, [r4, #5]
 8004248:	7923      	ldrb	r3, [r4, #4]
 800424a:	b105      	cbz	r5, 800424e <igmp_timer+0xe>
 800424c:	bd38      	pop	{r3, r4, r5, pc}
 800424e:	2a01      	cmp	r2, #1
 8004250:	d1fc      	bne.n	800424c <igmp_timer+0xc>
 8004252:	2b00      	cmp	r3, #0
 8004254:	d0fa      	beq.n	800424c <igmp_timer+0xc>
 8004256:	3b01      	subs	r3, #1
 8004258:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 800425c:	4615      	mov	r5, r2
 800425e:	7123      	strb	r3, [r4, #4]
 8004260:	d1f4      	bne.n	800424c <igmp_timer+0xc>
 8004262:	6820      	ldr	r0, [r4, #0]
 8004264:	f7ff ff96 	bl	8004194 <_send_report>
 8004268:	2302      	movs	r3, #2
 800426a:	7163      	strb	r3, [r4, #5]
 800426c:	e7eb      	b.n	8004246 <igmp_timer+0x6>
 800426e:	bf00      	nop
 8004270:	20003914 	andcs	r3, r0, r4, lsl r9

08004274 <igmp_leave>:
 8004274:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004276:	4e16      	ldr	r6, [pc, #88]	; (80042d0 <igmp_leave+0x5c>)
 8004278:	6833      	ldr	r3, [r6, #0]
 800427a:	4298      	cmp	r0, r3
 800427c:	d125      	bne.n	80042ca <igmp_leave+0x56>
 800427e:	2400      	movs	r4, #0
 8004280:	4f14      	ldr	r7, [pc, #80]	; (80042d4 <igmp_leave+0x60>)
 8004282:	4d15      	ldr	r5, [pc, #84]	; (80042d8 <igmp_leave+0x64>)
 8004284:	883b      	ldrh	r3, [r7, #0]
 8004286:	2118      	movs	r1, #24
 8004288:	9001      	str	r0, [sp, #4]
 800428a:	4814      	ldr	r0, [pc, #80]	; (80042dc <igmp_leave+0x68>)
 800428c:	826b      	strh	r3, [r5, #18]
 800428e:	832c      	strh	r4, [r5, #24]
 8004290:	f000 f82f 	bl	80042f2 <net_chksum>
 8004294:	2204      	movs	r2, #4
 8004296:	8328      	strh	r0, [r5, #24]
 8004298:	eb0d 0102 	add.w	r1, sp, r2
 800429c:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80042a0:	f7ff ff6e 	bl	8004180 <memcpy.isra.0>
 80042a4:	2120      	movs	r1, #32
 80042a6:	f105 000e 	add.w	r0, r5, #14
 80042aa:	852c      	strh	r4, [r5, #40]	; 0x28
 80042ac:	f000 f821 	bl	80042f2 <net_chksum>
 80042b0:	212e      	movs	r1, #46	; 0x2e
 80042b2:	8528      	strh	r0, [r5, #40]	; 0x28
 80042b4:	4628      	mov	r0, r5
 80042b6:	f001 fc73 	bl	8005ba0 <emac_eth_send>
 80042ba:	4620      	mov	r0, r4
 80042bc:	883b      	ldrh	r3, [r7, #0]
 80042be:	6034      	str	r4, [r6, #0]
 80042c0:	3301      	adds	r3, #1
 80042c2:	803b      	strh	r3, [r7, #0]
 80042c4:	80b4      	strh	r4, [r6, #4]
 80042c6:	b003      	add	sp, #12
 80042c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042ce:	e7fa      	b.n	80042c6 <igmp_leave+0x52>
 80042d0:	20003914 	andcs	r3, r0, r4, lsl r9
 80042d4:	2000391c 	andcs	r3, r0, ip, lsl r9
 80042d8:	20003924 	andcs	r3, r0, r4, lsr #18
 80042dc:	2000396a 	andcs	r3, r0, sl, ror #18

080042e0 <ip_set_ip>:
 80042e0:	b510      	push	{r4, lr}
 80042e2:	4604      	mov	r4, r0
 80042e4:	f7fe feb0 	bl	8003048 <udp_set_ip>
 80042e8:	4620      	mov	r0, r4
 80042ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042ee:	f7ff bf91 	b.w	8004214 <igmp_set_ip>

080042f2 <net_chksum>:
 80042f2:	2300      	movs	r3, #0
 80042f4:	f021 0201 	bic.w	r2, r1, #1
 80042f8:	b530      	push	{r4, r5, lr}
 80042fa:	1884      	adds	r4, r0, r2
 80042fc:	42a0      	cmp	r0, r4
 80042fe:	d10b      	bne.n	8004318 <net_chksum+0x26>
 8004300:	4291      	cmp	r1, r2
 8004302:	d004      	beq.n	800430e <net_chksum+0x1c>
 8004304:	7802      	ldrb	r2, [r0, #0]
 8004306:	0212      	lsls	r2, r2, #8
 8004308:	ba52      	rev16	r2, r2
 800430a:	b292      	uxth	r2, r2
 800430c:	4413      	add	r3, r2
 800430e:	0c1a      	lsrs	r2, r3, #16
 8004310:	d106      	bne.n	8004320 <net_chksum+0x2e>
 8004312:	43d8      	mvns	r0, r3
 8004314:	b280      	uxth	r0, r0
 8004316:	bd30      	pop	{r4, r5, pc}
 8004318:	f830 5b02 	ldrh.w	r5, [r0], #2
 800431c:	442b      	add	r3, r5
 800431e:	e7ed      	b.n	80042fc <net_chksum+0xa>
 8004320:	b29b      	uxth	r3, r3
 8004322:	e7f3      	b.n	800430c <net_chksum+0x1a>

08004324 <memcpy.isra.0>:
 8004324:	3801      	subs	r0, #1
 8004326:	440a      	add	r2, r1
 8004328:	4291      	cmp	r1, r2
 800432a:	d100      	bne.n	800432e <memcpy.isra.0+0xa>
 800432c:	4770      	bx	lr
 800432e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004332:	f800 3f01 	strb.w	r3, [r0, #1]!
 8004336:	e7f7      	b.n	8004328 <memcpy.isra.0+0x4>

08004338 <console_putc>:
 8004338:	f000 bad6 	b.w	80048e8 <uart0_putc>

0800433c <console_puts>:
 800433c:	f000 baf4 	b.w	8004928 <uart0_puts>

08004340 <console_set_fg_color>:
 8004340:	2807      	cmp	r0, #7
 8004342:	d810      	bhi.n	8004366 <console_set_fg_color+0x26>
 8004344:	e8df f000 	tbb	[pc, r0]
 8004348:	0b090704 	bleq	8245f60 <__exidx_end+0x23e8a8>
 800434c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8004318 <net_chksum+0x26>
 8004350:	4806      	ldr	r0, [pc, #24]	; (800436c <console_set_fg_color+0x2c>)
 8004352:	f000 bae9 	b.w	8004928 <uart0_puts>
 8004356:	4806      	ldr	r0, [pc, #24]	; (8004370 <console_set_fg_color+0x30>)
 8004358:	e7fb      	b.n	8004352 <console_set_fg_color+0x12>
 800435a:	4806      	ldr	r0, [pc, #24]	; (8004374 <console_set_fg_color+0x34>)
 800435c:	e7f9      	b.n	8004352 <console_set_fg_color+0x12>
 800435e:	4806      	ldr	r0, [pc, #24]	; (8004378 <console_set_fg_color+0x38>)
 8004360:	e7f7      	b.n	8004352 <console_set_fg_color+0x12>
 8004362:	4806      	ldr	r0, [pc, #24]	; (800437c <console_set_fg_color+0x3c>)
 8004364:	e7f5      	b.n	8004352 <console_set_fg_color+0x12>
 8004366:	4806      	ldr	r0, [pc, #24]	; (8004380 <console_set_fg_color+0x40>)
 8004368:	e7f3      	b.n	8004352 <console_set_fg_color+0x12>
 800436a:	bf00      	nop
 800436c:	0800763c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, ip, sp, lr}
 8004370:	08007642 	stmdaeq	r0, {r1, r6, r9, sl, ip, sp, lr}
 8004374:	08007648 	stmdaeq	r0, {r3, r6, r9, sl, ip, sp, lr}
 8004378:	0800764e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl, ip, sp, lr}
 800437c:	08007630 	stmdaeq	r0, {r4, r5, r9, sl, ip, sp, lr}
 8004380:	08007654 	stmdaeq	r0, {r2, r4, r6, r9, sl, ip, sp, lr}

08004384 <console_error>:
 8004384:	b510      	push	{r4, lr}
 8004386:	4604      	mov	r4, r0
 8004388:	4805      	ldr	r0, [pc, #20]	; (80043a0 <console_error+0x1c>)
 800438a:	f000 facd 	bl	8004928 <uart0_puts>
 800438e:	4620      	mov	r0, r4
 8004390:	f000 faca 	bl	8004928 <uart0_puts>
 8004394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004398:	4802      	ldr	r0, [pc, #8]	; (80043a4 <console_error+0x20>)
 800439a:	f000 bac5 	b.w	8004928 <uart0_puts>
 800439e:	bf00      	nop
 80043a0:	08007642 	stmdaeq	r0, {r1, r6, r9, sl, ip, sp, lr}
 80043a4:	08007630 	stmdaeq	r0, {r4, r5, r9, sl, ip, sp, lr}

080043a8 <console_status>:
 80043a8:	b510      	push	{r4, lr}
 80043aa:	460c      	mov	r4, r1
 80043ac:	b280      	uxth	r0, r0
 80043ae:	f7ff ffc7 	bl	8004340 <console_set_fg_color>
 80043b2:	4807      	ldr	r0, [pc, #28]	; (80043d0 <console_status+0x28>)
 80043b4:	f000 fab8 	bl	8004928 <uart0_puts>
 80043b8:	4620      	mov	r0, r4
 80043ba:	f000 fab5 	bl	8004928 <uart0_puts>
 80043be:	200a      	movs	r0, #10
 80043c0:	f000 fa92 	bl	80048e8 <uart0_putc>
 80043c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80043c8:	4802      	ldr	r0, [pc, #8]	; (80043d4 <console_status+0x2c>)
 80043ca:	f000 baad 	b.w	8004928 <uart0_puts>
 80043ce:	bf00      	nop
 80043d0:	08007636 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, ip, sp, lr}
 80043d4:	08007630 	stmdaeq	r0, {r4, r5, r9, sl, ip, sp, lr}

080043d8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80043d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043dc:	4617      	mov	r7, r2
 80043de:	461e      	mov	r6, r3
 80043e0:	4d14      	ldr	r5, [pc, #80]	; (8004434 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80043e2:	4b15      	ldr	r3, [pc, #84]	; (8004438 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80043e4:	b086      	sub	sp, #24
 80043e6:	6018      	str	r0, [r3, #0]
 80043e8:	4604      	mov	r4, r0
 80043ea:	f105 0803 	add.w	r8, r5, #3
 80043ee:	2203      	movs	r2, #3
 80043f0:	4628      	mov	r0, r5
 80043f2:	f000 f969 	bl	80046c8 <memmove>
 80043f6:	4639      	mov	r1, r7
 80043f8:	220b      	movs	r2, #11
 80043fa:	4640      	mov	r0, r8
 80043fc:	f000 f964 	bl	80046c8 <memmove>
 8004400:	f105 030e 	add.w	r3, r5, #14
 8004404:	4631      	mov	r1, r6
 8004406:	2208      	movs	r2, #8
 8004408:	4618      	mov	r0, r3
 800440a:	f000 f95d 	bl	80046c8 <memmove>
 800440e:	2308      	movs	r3, #8
 8004410:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8004414:	230b      	movs	r3, #11
 8004416:	9302      	str	r3, [sp, #8]
 8004418:	4b08      	ldr	r3, [pc, #32]	; (800443c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800441a:	9005      	str	r0, [sp, #20]
 800441c:	e9cd 5300 	strd	r5, r3, [sp]
 8004420:	213f      	movs	r1, #63	; 0x3f
 8004422:	2303      	movs	r3, #3
 8004424:	4a06      	ldr	r2, [pc, #24]	; (8004440 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8004426:	4807      	ldr	r0, [pc, #28]	; (8004444 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8004428:	f7fc fdd4 	bl	8000fd4 <snprintf>
 800442c:	4620      	mov	r0, r4
 800442e:	b006      	add	sp, #24
 8004430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004434:	2000398a 	andcs	r3, r0, sl, lsl #19
 8004438:	200039e0 	andcs	r3, r0, r0, ror #19
 800443c:	080071f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip, sp, lr}
 8004440:	0800765a 	stmdaeq	r0, {r1, r3, r4, r6, r9, sl, ip, sp, lr}
 8004444:	200039a0 	andcs	r3, r0, r0, lsr #19

08004448 <FirmwareVersion::Print(char const*)>:
 8004448:	b510      	push	{r4, lr}
 800444a:	460c      	mov	r4, r1
 800444c:	4804      	ldr	r0, [pc, #16]	; (8004460 <FirmwareVersion::Print(char const*)+0x18>)
 800444e:	f000 f973 	bl	8004738 <puts>
 8004452:	b124      	cbz	r4, 800445e <FirmwareVersion::Print(char const*)+0x16>
 8004454:	4620      	mov	r0, r4
 8004456:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800445a:	f000 b96d 	b.w	8004738 <puts>
 800445e:	bd10      	pop	{r4, pc}
 8004460:	200039a0 	andcs	r3, r0, r0, lsr #19

08004464 <LedBlink::LedBlink()>:
 8004464:	b538      	push	{r3, r4, r5, lr}
 8004466:	2205      	movs	r2, #5
 8004468:	2300      	movs	r3, #0
 800446a:	e9c0 3200 	strd	r3, r2, [r0]
 800446e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8004472:	6083      	str	r3, [r0, #8]
 8004474:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8004478:	6143      	str	r3, [r0, #20]
 800447a:	4b09      	ldr	r3, [pc, #36]	; (80044a0 <LedBlink::LedBlink()+0x3c>)
 800447c:	4d09      	ldr	r5, [pc, #36]	; (80044a4 <LedBlink::LedBlink()+0x40>)
 800447e:	4604      	mov	r4, r0
 8004480:	6018      	str	r0, [r3, #0]
 8004482:	f240 6004 	movw	r0, #1540	; 0x604
 8004486:	f001 f815 	bl	80054b4 <rcu_periph_clock_enable>
 800448a:	4628      	mov	r0, r5
 800448c:	2301      	movs	r3, #1
 800448e:	2203      	movs	r2, #3
 8004490:	2110      	movs	r1, #16
 8004492:	f000 ff6d 	bl	8005370 <gpio_init>
 8004496:	2301      	movs	r3, #1
 8004498:	4620      	mov	r0, r4
 800449a:	616b      	str	r3, [r5, #20]
 800449c:	bd38      	pop	{r3, r4, r5, pc}
 800449e:	bf00      	nop
 80044a0:	200039e4 	andcs	r3, r0, r4, ror #19
 80044a4:	40011000 	andmi	r1, r1, r0

080044a8 <LedBlink::SetMode(ledblink::Mode)>:
 80044a8:	6843      	ldr	r3, [r0, #4]
 80044aa:	428b      	cmp	r3, r1
 80044ac:	d02f      	beq.n	800450e <LedBlink::SetMode(ledblink::Mode)+0x66>
 80044ae:	6041      	str	r1, [r0, #4]
 80044b0:	2904      	cmp	r1, #4
 80044b2:	d822      	bhi.n	80044fa <LedBlink::SetMode(ledblink::Mode)+0x52>
 80044b4:	e8df f001 	tbb	[pc, r1]
 80044b8:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 80044bc:	23ff001d 	mvnscs	r0, #29
 80044c0:	6003      	str	r3, [r0, #0]
 80044c2:	2300      	movs	r3, #0
 80044c4:	2201      	movs	r2, #1
 80044c6:	60c3      	str	r3, [r0, #12]
 80044c8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80044cc:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80044d0:	611a      	str	r2, [r3, #16]
 80044d2:	6880      	ldr	r0, [r0, #8]
 80044d4:	b1d8      	cbz	r0, 800450e <LedBlink::SetMode(ledblink::Mode)+0x66>
 80044d6:	6803      	ldr	r3, [r0, #0]
 80044d8:	689b      	ldr	r3, [r3, #8]
 80044da:	4718      	bx	r3
 80044dc:	2301      	movs	r3, #1
 80044de:	6003      	str	r3, [r0, #0]
 80044e0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80044e4:	60c3      	str	r3, [r0, #12]
 80044e6:	e7f4      	b.n	80044d2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80044e8:	2303      	movs	r3, #3
 80044ea:	6003      	str	r3, [r0, #0]
 80044ec:	f240 134d 	movw	r3, #333	; 0x14d
 80044f0:	e7f8      	b.n	80044e4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80044f2:	2305      	movs	r3, #5
 80044f4:	6003      	str	r3, [r0, #0]
 80044f6:	23c8      	movs	r3, #200	; 0xc8
 80044f8:	e7f4      	b.n	80044e4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80044fa:	2300      	movs	r3, #0
 80044fc:	2201      	movs	r2, #1
 80044fe:	6003      	str	r3, [r0, #0]
 8004500:	60c3      	str	r3, [r0, #12]
 8004502:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004506:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800450a:	615a      	str	r2, [r3, #20]
 800450c:	e7e1      	b.n	80044d2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800450e:	4770      	bx	lr

08004510 <Hardware::Hardware()>:
 8004510:	b570      	push	{r4, r5, r6, lr}
 8004512:	2400      	movs	r4, #0
 8004514:	4b24      	ldr	r3, [pc, #144]	; (80045a8 <Hardware::Hardware()+0x98>)
 8004516:	b090      	sub	sp, #64	; 0x40
 8004518:	7004      	strb	r4, [r0, #0]
 800451a:	6018      	str	r0, [r3, #0]
 800451c:	4605      	mov	r5, r0
 800451e:	f7fc f809 	bl	8000534 <console_init>
 8004522:	f000 fa11 	bl	8004948 <systick_config>
 8004526:	f001 ff3d 	bl	80063a4 <udelay_init()>
 800452a:	f001 feed 	bl	8006308 <micros_init()>
 800452e:	f240 701b 	movw	r0, #1819	; 0x71b
 8004532:	f000 ffbf 	bl	80054b4 <rcu_periph_clock_enable>
 8004536:	f240 701c 	movw	r0, #1820	; 0x71c
 800453a:	f000 ffbb 	bl	80054b4 <rcu_periph_clock_enable>
 800453e:	4e1b      	ldr	r6, [pc, #108]	; (80045ac <Hardware::Hardware()+0x9c>)
 8004540:	f000 ffb0 	bl	80054a4 <pmu_backup_write_enable>
 8004544:	4621      	mov	r1, r4
 8004546:	2002      	movs	r0, #2
 8004548:	f000 faa2 	bl	8004a90 <bkp_data_write>
 800454c:	f240 7004 	movw	r0, #1796	; 0x704
 8004550:	f000 ffb0 	bl	80054b4 <rcu_periph_clock_enable>
 8004554:	4630      	mov	r0, r6
 8004556:	f001 f911 	bl	800577c <timer_deinit>
 800455a:	2377      	movs	r3, #119	; 0x77
 800455c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004560:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004564:	a903      	add	r1, sp, #12
 8004566:	4630      	mov	r0, r6
 8004568:	9305      	str	r3, [sp, #20]
 800456a:	f001 f9ad 	bl	80058c8 <timer_init>
 800456e:	4630      	mov	r0, r6
 8004570:	f001 fa02 	bl	8005978 <timer_enable>
 8004574:	f001 fb16 	bl	8005ba4 <gd32_adc_init()>
 8004578:	2307      	movs	r3, #7
 800457a:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 800457e:	237b      	movs	r3, #123	; 0x7b
 8004580:	a807      	add	r0, sp, #28
 8004582:	930c      	str	r3, [sp, #48]	; 0x30
 8004584:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8004588:	9407      	str	r4, [sp, #28]
 800458a:	940f      	str	r4, [sp, #60]	; 0x3c
 800458c:	f000 f902 	bl	8004794 <mktime>
 8004590:	4621      	mov	r1, r4
 8004592:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8004596:	a801      	add	r0, sp, #4
 8004598:	f000 f972 	bl	8004880 <settimeofday>
 800459c:	f001 fb5c 	bl	8005c58 <gd32_i2c_begin>
 80045a0:	4628      	mov	r0, r5
 80045a2:	b010      	add	sp, #64	; 0x40
 80045a4:	bd70      	pop	{r4, r5, r6, pc}
 80045a6:	bf00      	nop
 80045a8:	200039e8 	andcs	r3, r0, r8, ror #19
 80045ac:	40001000 	andmi	r1, r0, r0

080045b0 <Hardware::Reboot()>:
 80045b0:	b508      	push	{r3, lr}
 80045b2:	2300      	movs	r3, #0
 80045b4:	4604      	mov	r4, r0
 80045b6:	7003      	strb	r3, [r0, #0]
 80045b8:	2104      	movs	r1, #4
 80045ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80045be:	f000 fead 	bl	800531c <fwdgt_config>
 80045c2:	4620      	mov	r0, r4
 80045c4:	f7fc f94d 	bl	8000862 <Hardware::RebootHandler()>
 80045c8:	2102      	movs	r1, #2
 80045ca:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80045ce:	f000 fea5 	bl	800531c <fwdgt_config>
 80045d2:	2801      	cmp	r0, #1
 80045d4:	bf0c      	ite	eq
 80045d6:	2301      	moveq	r3, #1
 80045d8:	2300      	movne	r3, #0
 80045da:	7023      	strb	r3, [r4, #0]
 80045dc:	d101      	bne.n	80045e2 <Hardware::Reboot()+0x32>
 80045de:	f000 fe8d 	bl	80052fc <fwdgt_enable>
 80045e2:	2208      	movs	r2, #8
 80045e4:	4b0d      	ldr	r3, [pc, #52]	; (800461c <Hardware::Reboot()+0x6c>)
 80045e6:	2501      	movs	r5, #1
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	480d      	ldr	r0, [pc, #52]	; (8004620 <Hardware::Reboot()+0x70>)
 80045ec:	601a      	str	r2, [r3, #0]
 80045ee:	227d      	movs	r2, #125	; 0x7d
 80045f0:	490c      	ldr	r1, [pc, #48]	; (8004624 <Hardware::Reboot()+0x74>)
 80045f2:	60da      	str	r2, [r3, #12]
 80045f4:	68dc      	ldr	r4, [r3, #12]
 80045f6:	b904      	cbnz	r4, 80045fa <Hardware::Reboot()+0x4a>
 80045f8:	e7fe      	b.n	80045f8 <Hardware::Reboot()+0x48>
 80045fa:	6802      	ldr	r2, [r0, #0]
 80045fc:	695e      	ldr	r6, [r3, #20]
 80045fe:	1b92      	subs	r2, r2, r6
 8004600:	4294      	cmp	r4, r2
 8004602:	d8f8      	bhi.n	80045f6 <Hardware::Reboot()+0x46>
 8004604:	6802      	ldr	r2, [r0, #0]
 8004606:	615a      	str	r2, [r3, #20]
 8004608:	691a      	ldr	r2, [r3, #16]
 800460a:	2a01      	cmp	r2, #1
 800460c:	f082 0401 	eor.w	r4, r2, #1
 8004610:	611c      	str	r4, [r3, #16]
 8004612:	bf14      	ite	ne
 8004614:	610d      	strne	r5, [r1, #16]
 8004616:	614a      	streq	r2, [r1, #20]
 8004618:	e7ec      	b.n	80045f4 <Hardware::Reboot()+0x44>
 800461a:	bf00      	nop
 800461c:	200039e4 	andcs	r3, r0, r4, ror #19
 8004620:	200039fc 	strdcs	r3, [r0], -ip
 8004624:	40011000 	andmi	r1, r1, r0

08004628 <operator delete(void*)>:
 8004628:	f000 b834 	b.w	8004694 <free>

0800462c <operator delete[](void*)>:
 800462c:	f000 b832 	b.w	8004694 <free>

08004630 <operator new(unsigned int)>:
 8004630:	f000 b802 	b.w	8004638 <malloc>

08004634 <operator new[](unsigned int)>:
 8004634:	f000 b800 	b.w	8004638 <malloc>

08004638 <malloc>:
 8004638:	b510      	push	{r4, lr}
 800463a:	b1d8      	cbz	r0, 8004674 <malloc+0x3c>
 800463c:	4a11      	ldr	r2, [pc, #68]	; (8004684 <malloc+0x4c>)
 800463e:	6811      	ldr	r1, [r2, #0]
 8004640:	b971      	cbnz	r1, 8004660 <malloc+0x28>
 8004642:	4911      	ldr	r1, [pc, #68]	; (8004688 <malloc+0x50>)
 8004644:	f100 021b 	add.w	r2, r0, #27
 8004648:	680b      	ldr	r3, [r1, #0]
 800464a:	4c10      	ldr	r4, [pc, #64]	; (800468c <malloc+0x54>)
 800464c:	f022 020f 	bic.w	r2, r2, #15
 8004650:	441a      	add	r2, r3
 8004652:	42a2      	cmp	r2, r4
 8004654:	d80f      	bhi.n	8004676 <malloc+0x3e>
 8004656:	600a      	str	r2, [r1, #0]
 8004658:	4a0d      	ldr	r2, [pc, #52]	; (8004690 <malloc+0x58>)
 800465a:	e9c3 2000 	strd	r2, r0, [r3]
 800465e:	e005      	b.n	800466c <malloc+0x34>
 8004660:	4288      	cmp	r0, r1
 8004662:	d90a      	bls.n	800467a <malloc+0x42>
 8004664:	3208      	adds	r2, #8
 8004666:	e7ea      	b.n	800463e <malloc+0x6>
 8004668:	6899      	ldr	r1, [r3, #8]
 800466a:	6051      	str	r1, [r2, #4]
 800466c:	2200      	movs	r2, #0
 800466e:	f103 000c 	add.w	r0, r3, #12
 8004672:	609a      	str	r2, [r3, #8]
 8004674:	bd10      	pop	{r4, pc}
 8004676:	2000      	movs	r0, #0
 8004678:	e7fc      	b.n	8004674 <malloc+0x3c>
 800467a:	6853      	ldr	r3, [r2, #4]
 800467c:	2b00      	cmp	r3, #0
 800467e:	d1f3      	bne.n	8004668 <malloc+0x30>
 8004680:	4608      	mov	r0, r1
 8004682:	e7de      	b.n	8004642 <malloc+0xa>
 8004684:	20000020 	andcs	r0, r0, r0, lsr #32
 8004688:	2000001c 	andcs	r0, r0, ip, lsl r0
 800468c:	2003fc00 	andcs	pc, r3, r0, lsl #24
 8004690:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08004694 <free>:
 8004694:	b138      	cbz	r0, 80046a6 <free+0x12>
 8004696:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 800469a:	4b09      	ldr	r3, [pc, #36]	; (80046c0 <free+0x2c>)
 800469c:	429a      	cmp	r2, r3
 800469e:	d102      	bne.n	80046a6 <free+0x12>
 80046a0:	4b08      	ldr	r3, [pc, #32]	; (80046c4 <free+0x30>)
 80046a2:	681a      	ldr	r2, [r3, #0]
 80046a4:	b902      	cbnz	r2, 80046a8 <free+0x14>
 80046a6:	4770      	bx	lr
 80046a8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80046ac:	4291      	cmp	r1, r2
 80046ae:	d104      	bne.n	80046ba <free+0x26>
 80046b0:	685a      	ldr	r2, [r3, #4]
 80046b2:	380c      	subs	r0, #12
 80046b4:	6082      	str	r2, [r0, #8]
 80046b6:	6058      	str	r0, [r3, #4]
 80046b8:	4770      	bx	lr
 80046ba:	3308      	adds	r3, #8
 80046bc:	e7f1      	b.n	80046a2 <free+0xe>
 80046be:	bf00      	nop
 80046c0:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80046c4:	20000020 	andcs	r0, r0, r0, lsr #32

080046c8 <memmove>:
 80046c8:	4288      	cmp	r0, r1
 80046ca:	b510      	push	{r4, lr}
 80046cc:	eb01 0302 	add.w	r3, r1, r2
 80046d0:	d208      	bcs.n	80046e4 <memmove+0x1c>
 80046d2:	1e42      	subs	r2, r0, #1
 80046d4:	4299      	cmp	r1, r3
 80046d6:	d100      	bne.n	80046da <memmove+0x12>
 80046d8:	bd10      	pop	{r4, pc}
 80046da:	f811 4b01 	ldrb.w	r4, [r1], #1
 80046de:	f802 4f01 	strb.w	r4, [r2, #1]!
 80046e2:	e7f7      	b.n	80046d4 <memmove+0xc>
 80046e4:	4601      	mov	r1, r0
 80046e6:	4402      	add	r2, r0
 80046e8:	428a      	cmp	r2, r1
 80046ea:	d0f5      	beq.n	80046d8 <memmove+0x10>
 80046ec:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80046f0:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80046f4:	e7f8      	b.n	80046e8 <memmove+0x20>

080046f6 <memset>:
 80046f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80046f8:	b1c2      	cbz	r2, 800472c <memset+0x36>
 80046fa:	4603      	mov	r3, r0
 80046fc:	b2c9      	uxtb	r1, r1
 80046fe:	075c      	lsls	r4, r3, #29
 8004700:	d110      	bne.n	8004724 <memset+0x2e>
 8004702:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8004706:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800470a:	463d      	mov	r5, r7
 800470c:	461e      	mov	r6, r3
 800470e:	f022 0407 	bic.w	r4, r2, #7
 8004712:	441c      	add	r4, r3
 8004714:	42a6      	cmp	r6, r4
 8004716:	d10a      	bne.n	800472e <memset+0x38>
 8004718:	4413      	add	r3, r2
 800471a:	429c      	cmp	r4, r3
 800471c:	d006      	beq.n	800472c <memset+0x36>
 800471e:	f804 1b01 	strb.w	r1, [r4], #1
 8004722:	e7fa      	b.n	800471a <memset+0x24>
 8004724:	3a01      	subs	r2, #1
 8004726:	f803 1b01 	strb.w	r1, [r3], #1
 800472a:	d1e8      	bne.n	80046fe <memset+0x8>
 800472c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800472e:	f846 7b08 	str.w	r7, [r6], #8
 8004732:	f846 5c04 	str.w	r5, [r6, #-4]
 8004736:	e7ed      	b.n	8004714 <memset+0x1e>

08004738 <puts>:
 8004738:	b508      	push	{r3, lr}
 800473a:	f7ff fdff 	bl	800433c <console_puts>
 800473e:	200a      	movs	r0, #10
 8004740:	f7ff fdfa 	bl	8004338 <console_putc>
 8004744:	2001      	movs	r0, #1
 8004746:	bd08      	pop	{r3, pc}

08004748 <isleapyear>:
 8004748:	2264      	movs	r2, #100	; 0x64
 800474a:	fb90 f3f2 	sdiv	r3, r0, r2
 800474e:	fb02 0313 	mls	r3, r2, r3, r0
 8004752:	b94b      	cbnz	r3, 8004768 <isleapyear+0x20>
 8004754:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8004758:	fb90 f2f3 	sdiv	r2, r0, r3
 800475c:	fb03 0012 	mls	r0, r3, r2, r0
 8004760:	fab0 f080 	clz	r0, r0
 8004764:	0940      	lsrs	r0, r0, #5
 8004766:	4770      	bx	lr
 8004768:	f010 0f03 	tst.w	r0, #3
 800476c:	bf0c      	ite	eq
 800476e:	2001      	moveq	r0, #1
 8004770:	2000      	movne	r0, #0
 8004772:	4770      	bx	lr

08004774 <getdaysofmonth>:
 8004774:	b510      	push	{r4, lr}
 8004776:	4604      	mov	r4, r0
 8004778:	2c01      	cmp	r4, #1
 800477a:	4608      	mov	r0, r1
 800477c:	d102      	bne.n	8004784 <getdaysofmonth+0x10>
 800477e:	f7ff ffe3 	bl	8004748 <isleapyear>
 8004782:	b918      	cbnz	r0, 800478c <getdaysofmonth+0x18>
 8004784:	4b02      	ldr	r3, [pc, #8]	; (8004790 <getdaysofmonth+0x1c>)
 8004786:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800478a:	bd10      	pop	{r4, pc}
 800478c:	201d      	movs	r0, #29
 800478e:	e7fc      	b.n	800478a <getdaysofmonth+0x16>
 8004790:	08007680 	stmdaeq	r0, {r7, r9, sl, ip, sp, lr}

08004794 <mktime>:
 8004794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004798:	4604      	mov	r4, r0
 800479a:	2800      	cmp	r0, #0
 800479c:	d043      	beq.n	8004826 <mktime+0x92>
 800479e:	6941      	ldr	r1, [r0, #20]
 80047a0:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80047a4:	2b45      	cmp	r3, #69	; 0x45
 80047a6:	d83e      	bhi.n	8004826 <mktime+0x92>
 80047a8:	2600      	movs	r6, #0
 80047aa:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80047ae:	f240 186d 	movw	r8, #365	; 0x16d
 80047b2:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80047b6:	42af      	cmp	r7, r5
 80047b8:	da24      	bge.n	8004804 <mktime+0x70>
 80047ba:	6927      	ldr	r7, [r4, #16]
 80047bc:	2f0b      	cmp	r7, #11
 80047be:	d832      	bhi.n	8004826 <mktime+0x92>
 80047c0:	2500      	movs	r5, #0
 80047c2:	42af      	cmp	r7, r5
 80047c4:	d129      	bne.n	800481a <mktime+0x86>
 80047c6:	68e5      	ldr	r5, [r4, #12]
 80047c8:	2d00      	cmp	r5, #0
 80047ca:	dd2c      	ble.n	8004826 <mktime+0x92>
 80047cc:	4638      	mov	r0, r7
 80047ce:	f7ff ffd1 	bl	8004774 <getdaysofmonth>
 80047d2:	4285      	cmp	r5, r0
 80047d4:	dc27      	bgt.n	8004826 <mktime+0x92>
 80047d6:	2318      	movs	r3, #24
 80047d8:	3d01      	subs	r5, #1
 80047da:	4435      	add	r5, r6
 80047dc:	435d      	muls	r5, r3
 80047de:	68a3      	ldr	r3, [r4, #8]
 80047e0:	2b17      	cmp	r3, #23
 80047e2:	d820      	bhi.n	8004826 <mktime+0x92>
 80047e4:	213c      	movs	r1, #60	; 0x3c
 80047e6:	442b      	add	r3, r5
 80047e8:	fb01 f203 	mul.w	r2, r1, r3
 80047ec:	6863      	ldr	r3, [r4, #4]
 80047ee:	2b3b      	cmp	r3, #59	; 0x3b
 80047f0:	d819      	bhi.n	8004826 <mktime+0x92>
 80047f2:	6820      	ldr	r0, [r4, #0]
 80047f4:	4413      	add	r3, r2
 80047f6:	283b      	cmp	r0, #59	; 0x3b
 80047f8:	fb01 f303 	mul.w	r3, r1, r3
 80047fc:	d813      	bhi.n	8004826 <mktime+0x92>
 80047fe:	4418      	add	r0, r3
 8004800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004804:	4628      	mov	r0, r5
 8004806:	f7ff ff9f 	bl	8004748 <isleapyear>
 800480a:	2800      	cmp	r0, #0
 800480c:	bf14      	ite	ne
 800480e:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8004812:	4643      	moveq	r3, r8
 8004814:	3501      	adds	r5, #1
 8004816:	441e      	add	r6, r3
 8004818:	e7cd      	b.n	80047b6 <mktime+0x22>
 800481a:	4628      	mov	r0, r5
 800481c:	f7ff ffaa 	bl	8004774 <getdaysofmonth>
 8004820:	3501      	adds	r5, #1
 8004822:	4406      	add	r6, r0
 8004824:	e7cd      	b.n	80047c2 <mktime+0x2e>
 8004826:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800482a:	e7e9      	b.n	8004800 <mktime+0x6c>

0800482c <gettimeofday>:
 800482c:	b538      	push	{r3, r4, r5, lr}
 800482e:	4b10      	ldr	r3, [pc, #64]	; (8004870 <gettimeofday+0x44>)
 8004830:	4a10      	ldr	r2, [pc, #64]	; (8004874 <gettimeofday+0x48>)
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	6814      	ldr	r4, [r2, #0]
 8004836:	6013      	str	r3, [r2, #0]
 8004838:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800483c:	429c      	cmp	r4, r3
 800483e:	bf2c      	ite	cs
 8004840:	1ae4      	subcs	r4, r4, r3
 8004842:	1b1c      	subcc	r4, r3, r4
 8004844:	4354      	muls	r4, r2
 8004846:	4b0c      	ldr	r3, [pc, #48]	; (8004878 <gettimeofday+0x4c>)
 8004848:	4605      	mov	r5, r0
 800484a:	e9d3 2100 	ldrd	r2, r1, [r3]
 800484e:	18a4      	adds	r4, r4, r2
 8004850:	f141 0100 	adc.w	r1, r1, #0
 8004854:	e9c3 4100 	strd	r4, r1, [r3]
 8004858:	4620      	mov	r0, r4
 800485a:	2300      	movs	r3, #0
 800485c:	4a07      	ldr	r2, [pc, #28]	; (800487c <gettimeofday+0x50>)
 800485e:	f7fb ffa7 	bl	80007b0 <__aeabi_uldivmod>
 8004862:	4b06      	ldr	r3, [pc, #24]	; (800487c <gettimeofday+0x50>)
 8004864:	6028      	str	r0, [r5, #0]
 8004866:	fb03 4410 	mls	r4, r3, r0, r4
 800486a:	2000      	movs	r0, #0
 800486c:	606c      	str	r4, [r5, #4]
 800486e:	bd38      	pop	{r3, r4, r5, pc}
 8004870:	200039fc 	strdcs	r3, [r0], -ip
 8004874:	200039f8 	strdcs	r3, [r0], -r8
 8004878:	200039f0 	strdcs	r3, [r0], -r0
 800487c:	000f4240 	andeq	r4, pc, r0, asr #4

08004880 <settimeofday>:
 8004880:	4b07      	ldr	r3, [pc, #28]	; (80048a0 <settimeofday+0x20>)
 8004882:	b510      	push	{r4, lr}
 8004884:	681a      	ldr	r2, [r3, #0]
 8004886:	4b07      	ldr	r3, [pc, #28]	; (80048a4 <settimeofday+0x24>)
 8004888:	6804      	ldr	r4, [r0, #0]
 800488a:	601a      	str	r2, [r3, #0]
 800488c:	6843      	ldr	r3, [r0, #4]
 800488e:	4806      	ldr	r0, [pc, #24]	; (80048a8 <settimeofday+0x28>)
 8004890:	17da      	asrs	r2, r3, #31
 8004892:	fbc4 3200 	smlal	r3, r2, r4, r0
 8004896:	4905      	ldr	r1, [pc, #20]	; (80048ac <settimeofday+0x2c>)
 8004898:	2000      	movs	r0, #0
 800489a:	e9c1 3200 	strd	r3, r2, [r1]
 800489e:	bd10      	pop	{r4, pc}
 80048a0:	200039fc 	strdcs	r3, [r0], -ip
 80048a4:	200039f8 	strdcs	r3, [r0], -r8
 80048a8:	000f4240 	andeq	r4, pc, r0, asr #4
 80048ac:	200039f0 	strdcs	r3, [r0], -r0

080048b0 <time>:
 80048b0:	b513      	push	{r0, r1, r4, lr}
 80048b2:	4604      	mov	r4, r0
 80048b4:	2100      	movs	r1, #0
 80048b6:	4668      	mov	r0, sp
 80048b8:	f7ff ffb8 	bl	800482c <gettimeofday>
 80048bc:	9800      	ldr	r0, [sp, #0]
 80048be:	b104      	cbz	r4, 80048c2 <time+0x12>
 80048c0:	6020      	str	r0, [r4, #0]
 80048c2:	b002      	add	sp, #8
 80048c4:	bd10      	pop	{r4, pc}
	...

080048c8 <uart0_init>:
 80048c8:	2301      	movs	r3, #1
 80048ca:	b507      	push	{r0, r1, r2, lr}
 80048cc:	2208      	movs	r2, #8
 80048ce:	9300      	str	r3, [sp, #0]
 80048d0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80048d4:	2300      	movs	r3, #0
 80048d6:	4803      	ldr	r0, [pc, #12]	; (80048e4 <uart0_init+0x1c>)
 80048d8:	f001 fbfe 	bl	80060d8 <gd32_uart_begin>
 80048dc:	b003      	add	sp, #12
 80048de:	f85d fb04 	ldr.w	pc, [sp], #4
 80048e2:	bf00      	nop
 80048e4:	40013800 	andmi	r3, r1, r0, lsl #16

080048e8 <uart0_putc>:
 80048e8:	280a      	cmp	r0, #10
 80048ea:	b538      	push	{r3, r4, r5, lr}
 80048ec:	4604      	mov	r4, r0
 80048ee:	d10a      	bne.n	8004906 <uart0_putc+0x1e>
 80048f0:	4d0b      	ldr	r5, [pc, #44]	; (8004920 <uart0_putc+0x38>)
 80048f2:	2107      	movs	r1, #7
 80048f4:	4628      	mov	r0, r5
 80048f6:	f001 f92f 	bl	8005b58 <usart_flag_get>
 80048fa:	2800      	cmp	r0, #0
 80048fc:	d0f9      	beq.n	80048f2 <uart0_putc+0xa>
 80048fe:	220d      	movs	r2, #13
 8004900:	4b08      	ldr	r3, [pc, #32]	; (8004924 <uart0_putc+0x3c>)
 8004902:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8004906:	4d06      	ldr	r5, [pc, #24]	; (8004920 <uart0_putc+0x38>)
 8004908:	2107      	movs	r1, #7
 800490a:	4628      	mov	r0, r5
 800490c:	f001 f924 	bl	8005b58 <usart_flag_get>
 8004910:	2800      	cmp	r0, #0
 8004912:	d0f9      	beq.n	8004908 <uart0_putc+0x20>
 8004914:	4b03      	ldr	r3, [pc, #12]	; (8004924 <uart0_putc+0x3c>)
 8004916:	b2e4      	uxtb	r4, r4
 8004918:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800491c:	bd38      	pop	{r3, r4, r5, pc}
 800491e:	bf00      	nop
 8004920:	40013800 	andmi	r3, r1, r0, lsl #16
 8004924:	40013000 	andmi	r3, r1, r0

08004928 <uart0_puts>:
 8004928:	b510      	push	{r4, lr}
 800492a:	1e44      	subs	r4, r0, #1
 800492c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8004930:	b903      	cbnz	r3, 8004934 <uart0_puts+0xc>
 8004932:	bd10      	pop	{r4, pc}
 8004934:	2b0a      	cmp	r3, #10
 8004936:	d102      	bne.n	800493e <uart0_puts+0x16>
 8004938:	200d      	movs	r0, #13
 800493a:	f7ff ffd5 	bl	80048e8 <uart0_putc>
 800493e:	7820      	ldrb	r0, [r4, #0]
 8004940:	f7ff ffd2 	bl	80048e8 <uart0_putc>
 8004944:	e7f2      	b.n	800492c <uart0_puts+0x4>
	...

08004948 <systick_config>:
 8004948:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800494c:	4b0b      	ldr	r3, [pc, #44]	; (800497c <systick_config+0x34>)
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	fbb3 f3f2 	udiv	r3, r3, r2
 8004954:	3b01      	subs	r3, #1
 8004956:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800495a:	d20d      	bcs.n	8004978 <systick_config+0x30>
 800495c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8004960:	21f0      	movs	r1, #240	; 0xf0
 8004962:	6153      	str	r3, [r2, #20]
 8004964:	4b06      	ldr	r3, [pc, #24]	; (8004980 <systick_config+0x38>)
 8004966:	2007      	movs	r0, #7
 8004968:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800496c:	2100      	movs	r1, #0
 800496e:	6191      	str	r1, [r2, #24]
 8004970:	6110      	str	r0, [r2, #16]
 8004972:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8004976:	4770      	bx	lr
 8004978:	e7fe      	b.n	8004978 <systick_config+0x30>
 800497a:	bf00      	nop
 800497c:	20000080 	andcs	r0, r0, r0, lsl #1
 8004980:	e000ed00 	and	lr, r0, r0, lsl #26

08004984 <SysTick_Handler>:
 8004984:	4a02      	ldr	r2, [pc, #8]	; (8004990 <SysTick_Handler+0xc>)
 8004986:	6813      	ldr	r3, [r2, #0]
 8004988:	3301      	adds	r3, #1
 800498a:	6013      	str	r3, [r2, #0]
 800498c:	4770      	bx	lr
 800498e:	bf00      	nop
 8004990:	200039fc 	strdcs	r3, [r0], -ip

08004994 <SystemInit>:
 8004994:	4b3a      	ldr	r3, [pc, #232]	; (8004a80 <SystemInit+0xec>)
 8004996:	681a      	ldr	r2, [r3, #0]
 8004998:	f042 0201 	orr.w	r2, r2, #1
 800499c:	601a      	str	r2, [r3, #0]
 800499e:	6859      	ldr	r1, [r3, #4]
 80049a0:	4a38      	ldr	r2, [pc, #224]	; (8004a84 <SystemInit+0xf0>)
 80049a2:	400a      	ands	r2, r1
 80049a4:	605a      	str	r2, [r3, #4]
 80049a6:	681a      	ldr	r2, [r3, #0]
 80049a8:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80049ac:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80049b0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80049b4:	601a      	str	r2, [r3, #0]
 80049b6:	681a      	ldr	r2, [r3, #0]
 80049b8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80049bc:	601a      	str	r2, [r3, #0]
 80049be:	685a      	ldr	r2, [r3, #4]
 80049c0:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80049c4:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80049c8:	605a      	str	r2, [r3, #4]
 80049ca:	681a      	ldr	r2, [r3, #0]
 80049cc:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	2200      	movs	r2, #0
 80049d4:	62da      	str	r2, [r3, #44]	; 0x2c
 80049d6:	6099      	str	r1, [r3, #8]
 80049d8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80049dc:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 80049e0:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80049e4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80049e8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80049ec:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80049f0:	4a25      	ldr	r2, [pc, #148]	; (8004a88 <SystemInit+0xf4>)
 80049f2:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80049f6:	681a      	ldr	r2, [r3, #0]
 80049f8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80049fc:	601a      	str	r2, [r3, #0]
 80049fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004a02:	6819      	ldr	r1, [r3, #0]
 8004a04:	0389      	lsls	r1, r1, #14
 8004a06:	d401      	bmi.n	8004a0c <SystemInit+0x78>
 8004a08:	3a01      	subs	r2, #1
 8004a0a:	d1fa      	bne.n	8004a02 <SystemInit+0x6e>
 8004a0c:	681a      	ldr	r2, [r3, #0]
 8004a0e:	0392      	lsls	r2, r2, #14
 8004a10:	d400      	bmi.n	8004a14 <SystemInit+0x80>
 8004a12:	e7fe      	b.n	8004a12 <SystemInit+0x7e>
 8004a14:	685a      	ldr	r2, [r3, #4]
 8004a16:	605a      	str	r2, [r3, #4]
 8004a18:	685a      	ldr	r2, [r3, #4]
 8004a1a:	605a      	str	r2, [r3, #4]
 8004a1c:	685a      	ldr	r2, [r3, #4]
 8004a1e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a22:	605a      	str	r2, [r3, #4]
 8004a24:	685a      	ldr	r2, [r3, #4]
 8004a26:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8004a2a:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8004a2e:	605a      	str	r2, [r3, #4]
 8004a30:	685a      	ldr	r2, [r3, #4]
 8004a32:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8004a36:	605a      	str	r2, [r3, #4]
 8004a38:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004a3a:	4a14      	ldr	r2, [pc, #80]	; (8004a8c <SystemInit+0xf8>)
 8004a3c:	400a      	ands	r2, r1
 8004a3e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004a40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004a42:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8004a46:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8004a4a:	62da      	str	r2, [r3, #44]	; 0x2c
 8004a4c:	681a      	ldr	r2, [r3, #0]
 8004a4e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8004a52:	601a      	str	r2, [r3, #0]
 8004a54:	681a      	ldr	r2, [r3, #0]
 8004a56:	0110      	lsls	r0, r2, #4
 8004a58:	d5fc      	bpl.n	8004a54 <SystemInit+0xc0>
 8004a5a:	681a      	ldr	r2, [r3, #0]
 8004a5c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004a60:	601a      	str	r2, [r3, #0]
 8004a62:	681a      	ldr	r2, [r3, #0]
 8004a64:	0191      	lsls	r1, r2, #6
 8004a66:	d5fc      	bpl.n	8004a62 <SystemInit+0xce>
 8004a68:	685a      	ldr	r2, [r3, #4]
 8004a6a:	f022 0203 	bic.w	r2, r2, #3
 8004a6e:	605a      	str	r2, [r3, #4]
 8004a70:	685a      	ldr	r2, [r3, #4]
 8004a72:	f042 0202 	orr.w	r2, r2, #2
 8004a76:	605a      	str	r2, [r3, #4]
 8004a78:	685a      	ldr	r2, [r3, #4]
 8004a7a:	0712      	lsls	r2, r2, #28
 8004a7c:	d5fc      	bpl.n	8004a78 <SystemInit+0xe4>
 8004a7e:	4770      	bx	lr
 8004a80:	40021000 	andmi	r1, r2, r0
 8004a84:	e0ff000c 	rscs	r0, pc, ip
 8004a88:	20003010 	andcs	r3, r0, r0, lsl r0
 8004a8c:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08004a90 <bkp_data_write>:
 8004a90:	f1a0 030b 	sub.w	r3, r0, #11
 8004a94:	2b1f      	cmp	r3, #31
 8004a96:	d804      	bhi.n	8004aa2 <bkp_data_write+0x12>
 8004a98:	4b07      	ldr	r3, [pc, #28]	; (8004ab8 <bkp_data_write+0x28>)
 8004a9a:	4403      	add	r3, r0
 8004a9c:	009b      	lsls	r3, r3, #2
 8004a9e:	8019      	strh	r1, [r3, #0]
 8004aa0:	4770      	bx	lr
 8004aa2:	1e43      	subs	r3, r0, #1
 8004aa4:	2b09      	cmp	r3, #9
 8004aa6:	bf9f      	itttt	ls
 8004aa8:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8004aac:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8004ab0:	0080      	lslls	r0, r0, #2
 8004ab2:	8001      	strhls	r1, [r0, #0]
 8004ab4:	4770      	bx	lr
 8004ab6:	bf00      	nop
 8004ab8:	10001b05 	andne	r1, r0, r5, lsl #22

08004abc <bkp_data_read>:
 8004abc:	f1a0 030b 	sub.w	r3, r0, #11
 8004ac0:	2b1f      	cmp	r3, #31
 8004ac2:	d805      	bhi.n	8004ad0 <bkp_data_read+0x14>
 8004ac4:	4b08      	ldr	r3, [pc, #32]	; (8004ae8 <bkp_data_read+0x2c>)
 8004ac6:	4403      	add	r3, r0
 8004ac8:	009b      	lsls	r3, r3, #2
 8004aca:	8818      	ldrh	r0, [r3, #0]
 8004acc:	b280      	uxth	r0, r0
 8004ace:	4770      	bx	lr
 8004ad0:	1e43      	subs	r3, r0, #1
 8004ad2:	2b09      	cmp	r3, #9
 8004ad4:	d806      	bhi.n	8004ae4 <bkp_data_read+0x28>
 8004ad6:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8004ada:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8004ade:	0080      	lsls	r0, r0, #2
 8004ae0:	8800      	ldrh	r0, [r0, #0]
 8004ae2:	e7f3      	b.n	8004acc <bkp_data_read+0x10>
 8004ae4:	2000      	movs	r0, #0
 8004ae6:	4770      	bx	lr
 8004ae8:	10001b05 	andne	r1, r0, r5, lsl #22

08004aec <enet_delay>:
 8004aec:	2300      	movs	r3, #0
 8004aee:	b082      	sub	sp, #8
 8004af0:	9301      	str	r3, [sp, #4]
 8004af2:	9001      	str	r0, [sp, #4]
 8004af4:	9b01      	ldr	r3, [sp, #4]
 8004af6:	b90b      	cbnz	r3, 8004afc <enet_delay+0x10>
 8004af8:	b002      	add	sp, #8
 8004afa:	4770      	bx	lr
 8004afc:	9b01      	ldr	r3, [sp, #4]
 8004afe:	3b01      	subs	r3, #1
 8004b00:	9301      	str	r3, [sp, #4]
 8004b02:	e7f7      	b.n	8004af4 <enet_delay+0x8>

08004b04 <enet_software_reset>:
 8004b04:	4b07      	ldr	r3, [pc, #28]	; (8004b24 <enet_software_reset+0x20>)
 8004b06:	681a      	ldr	r2, [r3, #0]
 8004b08:	f042 0201 	orr.w	r2, r2, #1
 8004b0c:	601a      	str	r2, [r3, #0]
 8004b0e:	4a06      	ldr	r2, [pc, #24]	; (8004b28 <enet_software_reset+0x24>)
 8004b10:	6819      	ldr	r1, [r3, #0]
 8004b12:	07c9      	lsls	r1, r1, #31
 8004b14:	d501      	bpl.n	8004b1a <enet_software_reset+0x16>
 8004b16:	3a01      	subs	r2, #1
 8004b18:	d1fa      	bne.n	8004b10 <enet_software_reset+0xc>
 8004b1a:	6818      	ldr	r0, [r3, #0]
 8004b1c:	43c0      	mvns	r0, r0
 8004b1e:	f000 0001 	and.w	r0, r0, #1
 8004b22:	4770      	bx	lr
 8004b24:	40029000 	andmi	r9, r2, r0
 8004b28:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08004b2c <enet_descriptors_chain_init>:
 8004b2c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8004b30:	b570      	push	{r4, r5, r6, lr}
 8004b32:	4a17      	ldr	r2, [pc, #92]	; (8004b90 <enet_descriptors_chain_init+0x64>)
 8004b34:	d120      	bne.n	8004b78 <enet_descriptors_chain_init+0x4c>
 8004b36:	2100      	movs	r1, #0
 8004b38:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8004b3c:	2401      	movs	r4, #1
 8004b3e:	4b15      	ldr	r3, [pc, #84]	; (8004b94 <enet_descriptors_chain_init+0x68>)
 8004b40:	6113      	str	r3, [r2, #16]
 8004b42:	4a15      	ldr	r2, [pc, #84]	; (8004b98 <enet_descriptors_chain_init+0x6c>)
 8004b44:	6013      	str	r3, [r2, #0]
 8004b46:	4a15      	ldr	r2, [pc, #84]	; (8004b9c <enet_descriptors_chain_init+0x70>)
 8004b48:	2500      	movs	r5, #0
 8004b4a:	4e15      	ldr	r6, [pc, #84]	; (8004ba0 <enet_descriptors_chain_init+0x74>)
 8004b4c:	2c01      	cmp	r4, #1
 8004b4e:	6035      	str	r5, [r6, #0]
 8004b50:	4e14      	ldr	r6, [pc, #80]	; (8004ba4 <enet_descriptors_chain_init+0x78>)
 8004b52:	609a      	str	r2, [r3, #8]
 8004b54:	6035      	str	r5, [r6, #0]
 8004b56:	bf0c      	ite	eq
 8004b58:	461d      	moveq	r5, r3
 8004b5a:	f103 0510 	addne.w	r5, r3, #16
 8004b5e:	2c02      	cmp	r4, #2
 8004b60:	bf08      	it	eq
 8004b62:	f202 52f4 	addweq	r2, r2, #1524	; 0x5f4
 8004b66:	e9c3 0100 	strd	r0, r1, [r3]
 8004b6a:	bf04      	itt	eq
 8004b6c:	e9c3 0104 	strdeq	r0, r1, [r3, #16]
 8004b70:	e9c3 2306 	strdeq	r2, r3, [r3, #24]
 8004b74:	60dd      	str	r5, [r3, #12]
 8004b76:	bd70      	pop	{r4, r5, r6, pc}
 8004b78:	4b0b      	ldr	r3, [pc, #44]	; (8004ba8 <enet_descriptors_chain_init+0x7c>)
 8004b7a:	f244 51f4 	movw	r1, #17908	; 0x45f4
 8004b7e:	60d3      	str	r3, [r2, #12]
 8004b80:	4a0a      	ldr	r2, [pc, #40]	; (8004bac <enet_descriptors_chain_init+0x80>)
 8004b82:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 8004b86:	6013      	str	r3, [r2, #0]
 8004b88:	2402      	movs	r4, #2
 8004b8a:	4a09      	ldr	r2, [pc, #36]	; (8004bb0 <enet_descriptors_chain_init+0x84>)
 8004b8c:	e7dc      	b.n	8004b48 <enet_descriptors_chain_init+0x1c>
 8004b8e:	bf00      	nop
 8004b90:	40029000 	andmi	r9, r2, r0
 8004b94:	20004c48 	andcs	r4, r0, r8, asr #24
 8004b98:	20003a0c 	andcs	r3, r0, ip, lsl #20
 8004b9c:	20004654 	andcs	r4, r0, r4, asr r6
 8004ba0:	20003a00 	andcs	r3, r0, r0, lsl #20
 8004ba4:	20003a04 	andcs	r3, r0, r4, lsl #20
 8004ba8:	20004634 	andcs	r4, r0, r4, lsr r6
 8004bac:	20003a08 	andcs	r3, r0, r8, lsl #20
 8004bb0:	20003a4c 	andcs	r3, r0, ip, asr #20

08004bb4 <enet_frame_receive>:
 8004bb4:	4a1d      	ldr	r2, [pc, #116]	; (8004c2c <enet_frame_receive+0x78>)
 8004bb6:	b510      	push	{r4, lr}
 8004bb8:	6813      	ldr	r3, [r2, #0]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	db33      	blt.n	8004c28 <enet_frame_receive+0x74>
 8004bc0:	b970      	cbnz	r0, 8004be0 <enet_frame_receive+0x2c>
 8004bc2:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8004bc6:	6813      	ldr	r3, [r2, #0]
 8004bc8:	6019      	str	r1, [r3, #0]
 8004bca:	4919      	ldr	r1, [pc, #100]	; (8004c30 <enet_frame_receive+0x7c>)
 8004bcc:	6948      	ldr	r0, [r1, #20]
 8004bce:	0604      	lsls	r4, r0, #24
 8004bd0:	d419      	bmi.n	8004c06 <enet_frame_receive+0x52>
 8004bd2:	6859      	ldr	r1, [r3, #4]
 8004bd4:	0448      	lsls	r0, r1, #17
 8004bd6:	d51b      	bpl.n	8004c10 <enet_frame_receive+0x5c>
 8004bd8:	68db      	ldr	r3, [r3, #12]
 8004bda:	2001      	movs	r0, #1
 8004bdc:	6013      	str	r3, [r2, #0]
 8004bde:	bd10      	pop	{r4, pc}
 8004be0:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8004be4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8004be8:	d11e      	bne.n	8004c28 <enet_frame_receive+0x74>
 8004bea:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8004bee:	3b04      	subs	r3, #4
 8004bf0:	428b      	cmp	r3, r1
 8004bf2:	d819      	bhi.n	8004c28 <enet_frame_receive+0x74>
 8004bf4:	2100      	movs	r1, #0
 8004bf6:	4299      	cmp	r1, r3
 8004bf8:	6814      	ldr	r4, [r2, #0]
 8004bfa:	d2e2      	bcs.n	8004bc2 <enet_frame_receive+0xe>
 8004bfc:	68a4      	ldr	r4, [r4, #8]
 8004bfe:	5d0c      	ldrb	r4, [r1, r4]
 8004c00:	5444      	strb	r4, [r0, r1]
 8004c02:	3101      	adds	r1, #1
 8004c04:	e7f7      	b.n	8004bf6 <enet_frame_receive+0x42>
 8004c06:	2080      	movs	r0, #128	; 0x80
 8004c08:	6148      	str	r0, [r1, #20]
 8004c0a:	2000      	movs	r0, #0
 8004c0c:	6088      	str	r0, [r1, #8]
 8004c0e:	e7e0      	b.n	8004bd2 <enet_frame_receive+0x1e>
 8004c10:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8004c14:	4906      	ldr	r1, [pc, #24]	; (8004c30 <enet_frame_receive+0x7c>)
 8004c16:	bf05      	ittet	eq
 8004c18:	3310      	addeq	r3, #16
 8004c1a:	6809      	ldreq	r1, [r1, #0]
 8004c1c:	68cb      	ldrne	r3, [r1, #12]
 8004c1e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8004c22:	bf08      	it	eq
 8004c24:	185b      	addeq	r3, r3, r1
 8004c26:	e7d8      	b.n	8004bda <enet_frame_receive+0x26>
 8004c28:	2000      	movs	r0, #0
 8004c2a:	e7d8      	b.n	8004bde <enet_frame_receive+0x2a>
 8004c2c:	20003a08 	andcs	r3, r0, r8, lsl #20
 8004c30:	40029000 	andmi	r9, r2, r0

08004c34 <enet_frame_transmit>:
 8004c34:	4a1e      	ldr	r2, [pc, #120]	; (8004cb0 <enet_frame_transmit+0x7c>)
 8004c36:	b530      	push	{r4, r5, lr}
 8004c38:	6813      	ldr	r3, [r2, #0]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	db34      	blt.n	8004caa <enet_frame_transmit+0x76>
 8004c40:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8004c44:	4299      	cmp	r1, r3
 8004c46:	d830      	bhi.n	8004caa <enet_frame_transmit+0x76>
 8004c48:	b9e8      	cbnz	r0, 8004c86 <enet_frame_transmit+0x52>
 8004c4a:	6813      	ldr	r3, [r2, #0]
 8004c4c:	4819      	ldr	r0, [pc, #100]	; (8004cb4 <enet_frame_transmit+0x80>)
 8004c4e:	6059      	str	r1, [r3, #4]
 8004c50:	6819      	ldr	r1, [r3, #0]
 8004c52:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8004c56:	6019      	str	r1, [r3, #0]
 8004c58:	6941      	ldr	r1, [r0, #20]
 8004c5a:	6944      	ldr	r4, [r0, #20]
 8004c5c:	f001 0104 	and.w	r1, r1, #4
 8004c60:	f004 0420 	and.w	r4, r4, #32
 8004c64:	4321      	orrs	r1, r4
 8004c66:	d110      	bne.n	8004c8a <enet_frame_transmit+0x56>
 8004c68:	6819      	ldr	r1, [r3, #0]
 8004c6a:	02c8      	lsls	r0, r1, #11
 8004c6c:	d511      	bpl.n	8004c92 <enet_frame_transmit+0x5e>
 8004c6e:	68db      	ldr	r3, [r3, #12]
 8004c70:	2001      	movs	r0, #1
 8004c72:	6013      	str	r3, [r2, #0]
 8004c74:	bd30      	pop	{r4, r5, pc}
 8004c76:	5cc5      	ldrb	r5, [r0, r3]
 8004c78:	68a4      	ldr	r4, [r4, #8]
 8004c7a:	551d      	strb	r5, [r3, r4]
 8004c7c:	3301      	adds	r3, #1
 8004c7e:	428b      	cmp	r3, r1
 8004c80:	6814      	ldr	r4, [r2, #0]
 8004c82:	d1f8      	bne.n	8004c76 <enet_frame_transmit+0x42>
 8004c84:	e7e1      	b.n	8004c4a <enet_frame_transmit+0x16>
 8004c86:	2300      	movs	r3, #0
 8004c88:	e7f9      	b.n	8004c7e <enet_frame_transmit+0x4a>
 8004c8a:	6141      	str	r1, [r0, #20]
 8004c8c:	2100      	movs	r1, #0
 8004c8e:	6041      	str	r1, [r0, #4]
 8004c90:	e7ea      	b.n	8004c68 <enet_frame_transmit+0x34>
 8004c92:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8004c96:	4907      	ldr	r1, [pc, #28]	; (8004cb4 <enet_frame_transmit+0x80>)
 8004c98:	bf05      	ittet	eq
 8004c9a:	3310      	addeq	r3, #16
 8004c9c:	6809      	ldreq	r1, [r1, #0]
 8004c9e:	690b      	ldrne	r3, [r1, #16]
 8004ca0:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8004ca4:	bf08      	it	eq
 8004ca6:	185b      	addeq	r3, r3, r1
 8004ca8:	e7e2      	b.n	8004c70 <enet_frame_transmit+0x3c>
 8004caa:	2000      	movs	r0, #0
 8004cac:	e7e2      	b.n	8004c74 <enet_frame_transmit+0x40>
 8004cae:	bf00      	nop
 8004cb0:	20003a0c 	andcs	r3, r0, ip, lsl #20
 8004cb4:	40029000 	andmi	r9, r2, r0

08004cb8 <enet_transmit_checksum_config>:
 8004cb8:	6803      	ldr	r3, [r0, #0]
 8004cba:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8004cbe:	430b      	orrs	r3, r1
 8004cc0:	6003      	str	r3, [r0, #0]
 8004cc2:	4770      	bx	lr

08004cc4 <enet_mac_address_set>:
 8004cc4:	888a      	ldrh	r2, [r1, #4]
 8004cc6:	4b03      	ldr	r3, [pc, #12]	; (8004cd4 <enet_mac_address_set+0x10>)
 8004cc8:	50c2      	str	r2, [r0, r3]
 8004cca:	680a      	ldr	r2, [r1, #0]
 8004ccc:	3304      	adds	r3, #4
 8004cce:	50c2      	str	r2, [r0, r3]
 8004cd0:	4770      	bx	lr
 8004cd2:	bf00      	nop
 8004cd4:	40028040 	andmi	r8, r2, r0, asr #32

08004cd8 <enet_rx_enable>:
 8004cd8:	4a05      	ldr	r2, [pc, #20]	; (8004cf0 <enet_rx_enable+0x18>)
 8004cda:	6813      	ldr	r3, [r2, #0]
 8004cdc:	f043 0304 	orr.w	r3, r3, #4
 8004ce0:	6013      	str	r3, [r2, #0]
 8004ce2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8004ce6:	6993      	ldr	r3, [r2, #24]
 8004ce8:	f043 0302 	orr.w	r3, r3, #2
 8004cec:	6193      	str	r3, [r2, #24]
 8004cee:	4770      	bx	lr
 8004cf0:	40028000 	andmi	r8, r2, r0

08004cf4 <enet_phy_write_read>:
 8004cf4:	b530      	push	{r4, r5, lr}
 8004cf6:	4604      	mov	r4, r0
 8004cf8:	4d13      	ldr	r5, [pc, #76]	; (8004d48 <enet_phy_write_read+0x54>)
 8004cfa:	0192      	lsls	r2, r2, #6
 8004cfc:	6928      	ldr	r0, [r5, #16]
 8004cfe:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8004d02:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8004d06:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8004d0a:	4302      	orrs	r2, r0
 8004d0c:	02c9      	lsls	r1, r1, #11
 8004d0e:	b289      	uxth	r1, r1
 8004d10:	2c02      	cmp	r4, #2
 8004d12:	ea42 0204 	orr.w	r2, r2, r4
 8004d16:	ea42 0201 	orr.w	r2, r2, r1
 8004d1a:	bf08      	it	eq
 8004d1c:	8819      	ldrheq	r1, [r3, #0]
 8004d1e:	f042 0201 	orr.w	r2, r2, #1
 8004d22:	bf08      	it	eq
 8004d24:	6169      	streq	r1, [r5, #20]
 8004d26:	612a      	str	r2, [r5, #16]
 8004d28:	4907      	ldr	r1, [pc, #28]	; (8004d48 <enet_phy_write_read+0x54>)
 8004d2a:	4a08      	ldr	r2, [pc, #32]	; (8004d4c <enet_phy_write_read+0x58>)
 8004d2c:	6908      	ldr	r0, [r1, #16]
 8004d2e:	07c0      	lsls	r0, r0, #31
 8004d30:	d501      	bpl.n	8004d36 <enet_phy_write_read+0x42>
 8004d32:	3a01      	subs	r2, #1
 8004d34:	d1fa      	bne.n	8004d2c <enet_phy_write_read+0x38>
 8004d36:	690a      	ldr	r2, [r1, #16]
 8004d38:	43d2      	mvns	r2, r2
 8004d3a:	f002 0001 	and.w	r0, r2, #1
 8004d3e:	b90c      	cbnz	r4, 8004d44 <enet_phy_write_read+0x50>
 8004d40:	694a      	ldr	r2, [r1, #20]
 8004d42:	801a      	strh	r2, [r3, #0]
 8004d44:	bd30      	pop	{r4, r5, pc}
 8004d46:	bf00      	nop
 8004d48:	40028000 	andmi	r8, r2, r0
 8004d4c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08004d50 <enet_phy_config>:
 8004d50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004d52:	4d22      	ldr	r5, [pc, #136]	; (8004ddc <enet_phy_config+0x8c>)
 8004d54:	2001      	movs	r0, #1
 8004d56:	692c      	ldr	r4, [r5, #16]
 8004d58:	f000 fc88 	bl	800566c <rcu_clock_freq_get>
 8004d5c:	4b20      	ldr	r3, [pc, #128]	; (8004de0 <enet_phy_config+0x90>)
 8004d5e:	4a21      	ldr	r2, [pc, #132]	; (8004de4 <enet_phy_config+0x94>)
 8004d60:	4403      	add	r3, r0
 8004d62:	4293      	cmp	r3, r2
 8004d64:	f024 041c 	bic.w	r4, r4, #28
 8004d68:	d21f      	bcs.n	8004daa <enet_phy_config+0x5a>
 8004d6a:	f044 0408 	orr.w	r4, r4, #8
 8004d6e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004d72:	612c      	str	r4, [r5, #16]
 8004d74:	2200      	movs	r2, #0
 8004d76:	f8ad 3006 	strh.w	r3, [sp, #6]
 8004d7a:	2101      	movs	r1, #1
 8004d7c:	2002      	movs	r0, #2
 8004d7e:	f10d 0306 	add.w	r3, sp, #6
 8004d82:	f7ff ffb7 	bl	8004cf4 <enet_phy_write_read>
 8004d86:	b310      	cbz	r0, 8004dce <enet_phy_config+0x7e>
 8004d88:	2200      	movs	r2, #0
 8004d8a:	4817      	ldr	r0, [pc, #92]	; (8004de8 <enet_phy_config+0x98>)
 8004d8c:	f7ff feae 	bl	8004aec <enet_delay>
 8004d90:	2101      	movs	r1, #1
 8004d92:	4610      	mov	r0, r2
 8004d94:	f10d 0306 	add.w	r3, sp, #6
 8004d98:	f7ff ffac 	bl	8004cf4 <enet_phy_write_read>
 8004d9c:	b1b8      	cbz	r0, 8004dce <enet_phy_config+0x7e>
 8004d9e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8004da2:	43c0      	mvns	r0, r0
 8004da4:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8004da8:	e012      	b.n	8004dd0 <enet_phy_config+0x80>
 8004daa:	4b10      	ldr	r3, [pc, #64]	; (8004dec <enet_phy_config+0x9c>)
 8004dac:	4a10      	ldr	r2, [pc, #64]	; (8004df0 <enet_phy_config+0xa0>)
 8004dae:	4403      	add	r3, r0
 8004db0:	4293      	cmp	r3, r2
 8004db2:	d802      	bhi.n	8004dba <enet_phy_config+0x6a>
 8004db4:	f044 040c 	orr.w	r4, r4, #12
 8004db8:	e7d9      	b.n	8004d6e <enet_phy_config+0x1e>
 8004dba:	4b0e      	ldr	r3, [pc, #56]	; (8004df4 <enet_phy_config+0xa4>)
 8004dbc:	4a0e      	ldr	r2, [pc, #56]	; (8004df8 <enet_phy_config+0xa8>)
 8004dbe:	4403      	add	r3, r0
 8004dc0:	4293      	cmp	r3, r2
 8004dc2:	d3d4      	bcc.n	8004d6e <enet_phy_config+0x1e>
 8004dc4:	4b0d      	ldr	r3, [pc, #52]	; (8004dfc <enet_phy_config+0xac>)
 8004dc6:	4a0e      	ldr	r2, [pc, #56]	; (8004e00 <enet_phy_config+0xb0>)
 8004dc8:	4403      	add	r3, r0
 8004dca:	4293      	cmp	r3, r2
 8004dcc:	d902      	bls.n	8004dd4 <enet_phy_config+0x84>
 8004dce:	2000      	movs	r0, #0
 8004dd0:	b003      	add	sp, #12
 8004dd2:	bd30      	pop	{r4, r5, pc}
 8004dd4:	f044 0404 	orr.w	r4, r4, #4
 8004dd8:	e7c9      	b.n	8004d6e <enet_phy_config+0x1e>
 8004dda:	bf00      	nop
 8004ddc:	40028000 	andmi	r8, r2, r0
 8004de0:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8004de4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8004de8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8004dec:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8004df0:	017d783f 	cmneq	sp, pc, lsr r8
 8004df4:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8004df8:	02625a00 	rsbeq	r5, r2, #0, 20
 8004dfc:	fa0a1f00 	blx	828ca04 <__exidx_end+0x28534c>
 8004e00:	01312d00 	teqeq	r1, r0, lsl #26

08004e04 <enet_init>:
 8004e04:	2300      	movs	r3, #0
 8004e06:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004e08:	4604      	mov	r4, r0
 8004e0a:	460d      	mov	r5, r1
 8004e0c:	4616      	mov	r6, r2
 8004e0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8004e12:	f7ff ff9d 	bl	8004d50 <enet_phy_config>
 8004e16:	2800      	cmp	r0, #0
 8004e18:	d039      	beq.n	8004e8e <enet_init+0x8a>
 8004e1a:	4b3c      	ldr	r3, [pc, #240]	; (8004f0c <enet_init+0x108>)
 8004e1c:	4a3c      	ldr	r2, [pc, #240]	; (8004f10 <enet_init+0x10c>)
 8004e1e:	6819      	ldr	r1, [r3, #0]
 8004e20:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8004e24:	400a      	ands	r2, r1
 8004e26:	601a      	str	r2, [r3, #0]
 8004e28:	2200      	movs	r2, #0
 8004e2a:	605a      	str	r2, [r3, #4]
 8004e2c:	609a      	str	r2, [r3, #8]
 8004e2e:	60da      	str	r2, [r3, #12]
 8004e30:	6999      	ldr	r1, [r3, #24]
 8004e32:	2c01      	cmp	r4, #1
 8004e34:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8004e38:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8004e3c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8004e40:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8004e44:	6199      	str	r1, [r3, #24]
 8004e46:	4933      	ldr	r1, [pc, #204]	; (8004f14 <enet_init+0x110>)
 8004e48:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8004e4c:	61da      	str	r2, [r3, #28]
 8004e4e:	6988      	ldr	r0, [r1, #24]
 8004e50:	4b31      	ldr	r3, [pc, #196]	; (8004f18 <enet_init+0x114>)
 8004e52:	ea03 0300 	and.w	r3, r3, r0
 8004e56:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8004e5a:	618b      	str	r3, [r1, #24]
 8004e5c:	680b      	ldr	r3, [r1, #0]
 8004e5e:	4b2f      	ldr	r3, [pc, #188]	; (8004f1c <enet_init+0x118>)
 8004e60:	600b      	str	r3, [r1, #0]
 8004e62:	d01e      	beq.n	8004ea2 <enet_init+0x9e>
 8004e64:	08e3      	lsrs	r3, r4, #3
 8004e66:	0861      	lsrs	r1, r4, #1
 8004e68:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8004e6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e70:	430b      	orrs	r3, r1
 8004e72:	f8ad 3006 	strh.w	r3, [sp, #6]
 8004e76:	2101      	movs	r1, #1
 8004e78:	2002      	movs	r0, #2
 8004e7a:	f10d 0306 	add.w	r3, sp, #6
 8004e7e:	f7ff ff39 	bl	8004cf4 <enet_phy_write_read>
 8004e82:	b158      	cbz	r0, 8004e9c <enet_init+0x98>
 8004e84:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8004e88:	f7ff fe30 	bl	8004aec <enet_delay>
 8004e8c:	e05d      	b.n	8004f4a <enet_init+0x146>
 8004e8e:	4824      	ldr	r0, [pc, #144]	; (8004f20 <enet_init+0x11c>)
 8004e90:	f7ff fe2c 	bl	8004aec <enet_delay>
 8004e94:	f7ff ff5c 	bl	8004d50 <enet_phy_config>
 8004e98:	2800      	cmp	r0, #0
 8004e9a:	d1be      	bne.n	8004e1a <enet_init+0x16>
 8004e9c:	2000      	movs	r0, #0
 8004e9e:	b003      	add	sp, #12
 8004ea0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004ea2:	4614      	mov	r4, r2
 8004ea4:	4f1f      	ldr	r7, [pc, #124]	; (8004f24 <enet_init+0x120>)
 8004ea6:	2201      	movs	r2, #1
 8004ea8:	2000      	movs	r0, #0
 8004eaa:	4611      	mov	r1, r2
 8004eac:	f10d 0306 	add.w	r3, sp, #6
 8004eb0:	f7ff ff20 	bl	8004cf4 <enet_phy_write_read>
 8004eb4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8004eb8:	3401      	adds	r4, #1
 8004eba:	f002 0204 	and.w	r2, r2, #4
 8004ebe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004ec2:	b912      	cbnz	r2, 8004eca <enet_init+0xc6>
 8004ec4:	42bc      	cmp	r4, r7
 8004ec6:	d1ee      	bne.n	8004ea6 <enet_init+0xa2>
 8004ec8:	e7e8      	b.n	8004e9c <enet_init+0x98>
 8004eca:	42bc      	cmp	r4, r7
 8004ecc:	d0e6      	beq.n	8004e9c <enet_init+0x98>
 8004ece:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004ed2:	2101      	movs	r1, #1
 8004ed4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004ed8:	2002      	movs	r0, #2
 8004eda:	2200      	movs	r2, #0
 8004edc:	f7ff ff0a 	bl	8004cf4 <enet_phy_write_read>
 8004ee0:	2800      	cmp	r0, #0
 8004ee2:	d0db      	beq.n	8004e9c <enet_init+0x98>
 8004ee4:	2400      	movs	r4, #0
 8004ee6:	4f0f      	ldr	r7, [pc, #60]	; (8004f24 <enet_init+0x120>)
 8004ee8:	2201      	movs	r2, #1
 8004eea:	2000      	movs	r0, #0
 8004eec:	4611      	mov	r1, r2
 8004eee:	f10d 0306 	add.w	r3, sp, #6
 8004ef2:	f7ff feff 	bl	8004cf4 <enet_phy_write_read>
 8004ef6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8004efa:	3401      	adds	r4, #1
 8004efc:	f002 0220 	and.w	r2, r2, #32
 8004f00:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004f04:	b982      	cbnz	r2, 8004f28 <enet_init+0x124>
 8004f06:	42bc      	cmp	r4, r7
 8004f08:	d1ee      	bne.n	8004ee8 <enet_init+0xe4>
 8004f0a:	e7c7      	b.n	8004e9c <enet_init+0x98>
 8004f0c:	40028000 	andmi	r8, r2, r0
 8004f10:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8004f14:	40029000 	andmi	r9, r2, r0
 8004f18:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8004f1c:	02c16000 	sbceq	r6, r1, #0
 8004f20:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8004f24:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8004f28:	42bc      	cmp	r4, r7
 8004f2a:	d0b7      	beq.n	8004e9c <enet_init+0x98>
 8004f2c:	2101      	movs	r1, #1
 8004f2e:	2210      	movs	r2, #16
 8004f30:	2000      	movs	r0, #0
 8004f32:	f7ff fedf 	bl	8004cf4 <enet_phy_write_read>
 8004f36:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8004f3a:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8004f3e:	0799      	lsls	r1, r3, #30
 8004f40:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8004f44:	d401      	bmi.n	8004f4a <enet_init+0x146>
 8004f46:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8004f4a:	4b63      	ldr	r3, [pc, #396]	; (80050d8 <enet_init+0x2d4>)
 8004f4c:	681a      	ldr	r2, [r3, #0]
 8004f4e:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8004f52:	4314      	orrs	r4, r2
 8004f54:	056a      	lsls	r2, r5, #21
 8004f56:	601c      	str	r4, [r3, #0]
 8004f58:	d50b      	bpl.n	8004f72 <enet_init+0x16e>
 8004f5a:	681a      	ldr	r2, [r3, #0]
 8004f5c:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8004f60:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004f64:	601a      	str	r2, [r3, #0]
 8004f66:	4a5d      	ldr	r2, [pc, #372]	; (80050dc <enet_init+0x2d8>)
 8004f68:	6993      	ldr	r3, [r2, #24]
 8004f6a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8004f6e:	431d      	orrs	r5, r3
 8004f70:	6195      	str	r5, [r2, #24]
 8004f72:	4959      	ldr	r1, [pc, #356]	; (80050d8 <enet_init+0x2d4>)
 8004f74:	684b      	ldr	r3, [r1, #4]
 8004f76:	431e      	orrs	r6, r3
 8004f78:	4b59      	ldr	r3, [pc, #356]	; (80050e0 <enet_init+0x2dc>)
 8004f7a:	604e      	str	r6, [r1, #4]
 8004f7c:	681a      	ldr	r2, [r3, #0]
 8004f7e:	07d7      	lsls	r7, r2, #31
 8004f80:	d510      	bpl.n	8004fa4 <enet_init+0x1a0>
 8004f82:	685a      	ldr	r2, [r3, #4]
 8004f84:	680c      	ldr	r4, [r1, #0]
 8004f86:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8004f8a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8004f8e:	4320      	orrs	r0, r4
 8004f90:	6008      	str	r0, [r1, #0]
 8004f92:	4852      	ldr	r0, [pc, #328]	; (80050dc <enet_init+0x2d8>)
 8004f94:	0892      	lsrs	r2, r2, #2
 8004f96:	6981      	ldr	r1, [r0, #24]
 8004f98:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8004f9c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004fa0:	430a      	orrs	r2, r1
 8004fa2:	6182      	str	r2, [r0, #24]
 8004fa4:	681a      	ldr	r2, [r3, #0]
 8004fa6:	0796      	lsls	r6, r2, #30
 8004fa8:	d508      	bpl.n	8004fbc <enet_init+0x1b8>
 8004faa:	494c      	ldr	r1, [pc, #304]	; (80050dc <enet_init+0x2d8>)
 8004fac:	6898      	ldr	r0, [r3, #8]
 8004fae:	680a      	ldr	r2, [r1, #0]
 8004fb0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8004fb4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004fb8:	4302      	orrs	r2, r0
 8004fba:	600a      	str	r2, [r1, #0]
 8004fbc:	681a      	ldr	r2, [r3, #0]
 8004fbe:	0755      	lsls	r5, r2, #29
 8004fc0:	d508      	bpl.n	8004fd4 <enet_init+0x1d0>
 8004fc2:	4946      	ldr	r1, [pc, #280]	; (80050dc <enet_init+0x2d8>)
 8004fc4:	68d8      	ldr	r0, [r3, #12]
 8004fc6:	680a      	ldr	r2, [r1, #0]
 8004fc8:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8004fcc:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8004fd0:	4302      	orrs	r2, r0
 8004fd2:	600a      	str	r2, [r1, #0]
 8004fd4:	681a      	ldr	r2, [r3, #0]
 8004fd6:	0714      	lsls	r4, r2, #28
 8004fd8:	d508      	bpl.n	8004fec <enet_init+0x1e8>
 8004fda:	4940      	ldr	r1, [pc, #256]	; (80050dc <enet_init+0x2d8>)
 8004fdc:	6918      	ldr	r0, [r3, #16]
 8004fde:	680a      	ldr	r2, [r1, #0]
 8004fe0:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8004fe4:	f022 0202 	bic.w	r2, r2, #2
 8004fe8:	4302      	orrs	r2, r0
 8004fea:	600a      	str	r2, [r1, #0]
 8004fec:	681a      	ldr	r2, [r3, #0]
 8004fee:	06d0      	lsls	r0, r2, #27
 8004ff0:	d506      	bpl.n	8005000 <enet_init+0x1fc>
 8004ff2:	493a      	ldr	r1, [pc, #232]	; (80050dc <enet_init+0x2d8>)
 8004ff4:	4a3b      	ldr	r2, [pc, #236]	; (80050e4 <enet_init+0x2e0>)
 8004ff6:	6988      	ldr	r0, [r1, #24]
 8004ff8:	4002      	ands	r2, r0
 8004ffa:	6958      	ldr	r0, [r3, #20]
 8004ffc:	4302      	orrs	r2, r0
 8004ffe:	618a      	str	r2, [r1, #24]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	0691      	lsls	r1, r2, #26
 8005004:	d508      	bpl.n	8005018 <enet_init+0x214>
 8005006:	4935      	ldr	r1, [pc, #212]	; (80050dc <enet_init+0x2d8>)
 8005008:	6998      	ldr	r0, [r3, #24]
 800500a:	698a      	ldr	r2, [r1, #24]
 800500c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8005010:	f022 0204 	bic.w	r2, r2, #4
 8005014:	4302      	orrs	r2, r0
 8005016:	618a      	str	r2, [r1, #24]
 8005018:	681a      	ldr	r2, [r3, #0]
 800501a:	0652      	lsls	r2, r2, #25
 800501c:	d506      	bpl.n	800502c <enet_init+0x228>
 800501e:	492e      	ldr	r1, [pc, #184]	; (80050d8 <enet_init+0x2d4>)
 8005020:	69d8      	ldr	r0, [r3, #28]
 8005022:	69ca      	ldr	r2, [r1, #28]
 8005024:	0c52      	lsrs	r2, r2, #17
 8005026:	0452      	lsls	r2, r2, #17
 8005028:	4302      	orrs	r2, r0
 800502a:	61ca      	str	r2, [r1, #28]
 800502c:	681a      	ldr	r2, [r3, #0]
 800502e:	0617      	lsls	r7, r2, #24
 8005030:	d517      	bpl.n	8005062 <enet_init+0x25e>
 8005032:	4c29      	ldr	r4, [pc, #164]	; (80050d8 <enet_init+0x2d4>)
 8005034:	6a1a      	ldr	r2, [r3, #32]
 8005036:	69a0      	ldr	r0, [r4, #24]
 8005038:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 800503c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8005040:	0400      	lsls	r0, r0, #16
 8005042:	0c00      	lsrs	r0, r0, #16
 8005044:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8005048:	4301      	orrs	r1, r0
 800504a:	4824      	ldr	r0, [pc, #144]	; (80050dc <enet_init+0x2d8>)
 800504c:	61a1      	str	r1, [r4, #24]
 800504e:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8005052:	0a12      	lsrs	r2, r2, #8
 8005054:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8005058:	f002 0277 	and.w	r2, r2, #119	; 0x77
 800505c:	430a      	orrs	r2, r1
 800505e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8005062:	681a      	ldr	r2, [r3, #0]
 8005064:	05d6      	lsls	r6, r2, #23
 8005066:	bf42      	ittt	mi
 8005068:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 800506a:	4a1b      	ldrmi	r2, [pc, #108]	; (80050d8 <enet_init+0x2d4>)
 800506c:	6091      	strmi	r1, [r2, #8]
 800506e:	681a      	ldr	r2, [r3, #0]
 8005070:	0595      	lsls	r5, r2, #22
 8005072:	bf42      	ittt	mi
 8005074:	4a18      	ldrmi	r2, [pc, #96]	; (80050d8 <enet_init+0x2d4>)
 8005076:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8005078:	60d1      	strmi	r1, [r2, #12]
 800507a:	681a      	ldr	r2, [r3, #0]
 800507c:	0554      	lsls	r4, r2, #21
 800507e:	d508      	bpl.n	8005092 <enet_init+0x28e>
 8005080:	4915      	ldr	r1, [pc, #84]	; (80050d8 <enet_init+0x2d4>)
 8005082:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8005084:	684a      	ldr	r2, [r1, #4]
 8005086:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 800508a:	f022 0206 	bic.w	r2, r2, #6
 800508e:	4302      	orrs	r2, r0
 8005090:	604a      	str	r2, [r1, #4]
 8005092:	681a      	ldr	r2, [r3, #0]
 8005094:	0510      	lsls	r0, r2, #20
 8005096:	d508      	bpl.n	80050aa <enet_init+0x2a6>
 8005098:	490f      	ldr	r1, [pc, #60]	; (80050d8 <enet_init+0x2d4>)
 800509a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800509c:	680a      	ldr	r2, [r1, #0]
 800509e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80050a2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80050a6:	4302      	orrs	r2, r0
 80050a8:	600a      	str	r2, [r1, #0]
 80050aa:	681a      	ldr	r2, [r3, #0]
 80050ac:	04d1      	lsls	r1, r2, #19
 80050ae:	d506      	bpl.n	80050be <enet_init+0x2ba>
 80050b0:	4909      	ldr	r1, [pc, #36]	; (80050d8 <enet_init+0x2d4>)
 80050b2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80050b4:	680a      	ldr	r2, [r1, #0]
 80050b6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80050ba:	4302      	orrs	r2, r0
 80050bc:	600a      	str	r2, [r1, #0]
 80050be:	681a      	ldr	r2, [r3, #0]
 80050c0:	0492      	lsls	r2, r2, #18
 80050c2:	d506      	bpl.n	80050d2 <enet_init+0x2ce>
 80050c4:	4904      	ldr	r1, [pc, #16]	; (80050d8 <enet_init+0x2d4>)
 80050c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050c8:	680a      	ldr	r2, [r1, #0]
 80050ca:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80050ce:	4313      	orrs	r3, r2
 80050d0:	600b      	str	r3, [r1, #0]
 80050d2:	2001      	movs	r0, #1
 80050d4:	e6e3      	b.n	8004e9e <enet_init+0x9a>
 80050d6:	bf00      	nop
 80050d8:	40028000 	andmi	r8, r2, r0
 80050dc:	40029000 	andmi	r9, r2, r0
 80050e0:	20003a10 	andcs	r3, r0, r0, lsl sl
 80050e4:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080050e8 <enet_txfifo_flush>:
 80050e8:	4b06      	ldr	r3, [pc, #24]	; (8005104 <enet_txfifo_flush+0x1c>)
 80050ea:	4807      	ldr	r0, [pc, #28]	; (8005108 <enet_txfifo_flush+0x20>)
 80050ec:	699a      	ldr	r2, [r3, #24]
 80050ee:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80050f2:	619a      	str	r2, [r3, #24]
 80050f4:	699a      	ldr	r2, [r3, #24]
 80050f6:	02d2      	lsls	r2, r2, #11
 80050f8:	d502      	bpl.n	8005100 <enet_txfifo_flush+0x18>
 80050fa:	3801      	subs	r0, #1
 80050fc:	d1fa      	bne.n	80050f4 <enet_txfifo_flush+0xc>
 80050fe:	4770      	bx	lr
 8005100:	2001      	movs	r0, #1
 8005102:	4770      	bx	lr
 8005104:	40029000 	andmi	r9, r2, r0
 8005108:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0800510c <enet_tx_enable>:
 800510c:	4a06      	ldr	r2, [pc, #24]	; (8005128 <enet_tx_enable+0x1c>)
 800510e:	b508      	push	{r3, lr}
 8005110:	6813      	ldr	r3, [r2, #0]
 8005112:	f043 0308 	orr.w	r3, r3, #8
 8005116:	6013      	str	r3, [r2, #0]
 8005118:	f7ff ffe6 	bl	80050e8 <enet_txfifo_flush>
 800511c:	4a03      	ldr	r2, [pc, #12]	; (800512c <enet_tx_enable+0x20>)
 800511e:	6993      	ldr	r3, [r2, #24]
 8005120:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8005124:	6193      	str	r3, [r2, #24]
 8005126:	bd08      	pop	{r3, pc}
 8005128:	40028000 	andmi	r8, r2, r0
 800512c:	40029000 	andmi	r9, r2, r0

08005130 <enet_enable>:
 8005130:	b508      	push	{r3, lr}
 8005132:	f7ff ffeb 	bl	800510c <enet_tx_enable>
 8005136:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800513a:	f7ff bdcd 	b.w	8004cd8 <enet_rx_enable>

0800513e <enet_desc_information_get>:
 800513e:	2905      	cmp	r1, #5
 8005140:	d817      	bhi.n	8005172 <enet_desc_information_get+0x34>
 8005142:	e8df f001 	tbb	[pc, r1]
 8005146:	03091012 	movweq	r1, #36882	; 0x9012
 800514a:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 800514e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8005152:	4770      	bx	lr
 8005154:	88c0      	ldrh	r0, [r0, #6]
 8005156:	e7fa      	b.n	800514e <enet_desc_information_get+0x10>
 8005158:	8840      	ldrh	r0, [r0, #2]
 800515a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 800515e:	2804      	cmp	r0, #4
 8005160:	d90a      	bls.n	8005178 <enet_desc_information_get+0x3a>
 8005162:	3804      	subs	r0, #4
 8005164:	4770      	bx	lr
 8005166:	6880      	ldr	r0, [r0, #8]
 8005168:	4770      	bx	lr
 800516a:	6800      	ldr	r0, [r0, #0]
 800516c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8005170:	4770      	bx	lr
 8005172:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005176:	4770      	bx	lr
 8005178:	2000      	movs	r0, #0
 800517a:	4770      	bx	lr

0800517c <enet_rxframe_drop>:
 800517c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005180:	4814      	ldr	r0, [pc, #80]	; (80051d4 <enet_rxframe_drop+0x58>)
 8005182:	b510      	push	{r4, lr}
 8005184:	6802      	ldr	r2, [r0, #0]
 8005186:	4914      	ldr	r1, [pc, #80]	; (80051d8 <enet_rxframe_drop+0x5c>)
 8005188:	6854      	ldr	r4, [r2, #4]
 800518a:	6013      	str	r3, [r2, #0]
 800518c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8005190:	680b      	ldr	r3, [r1, #0]
 8005192:	d009      	beq.n	80051a8 <enet_rxframe_drop+0x2c>
 8005194:	b12b      	cbz	r3, 80051a2 <enet_rxframe_drop+0x26>
 8005196:	68da      	ldr	r2, [r3, #12]
 8005198:	6002      	str	r2, [r0, #0]
 800519a:	681a      	ldr	r2, [r3, #0]
 800519c:	b1ba      	cbz	r2, 80051ce <enet_rxframe_drop+0x52>
 800519e:	600a      	str	r2, [r1, #0]
 80051a0:	bd10      	pop	{r4, pc}
 80051a2:	68d3      	ldr	r3, [r2, #12]
 80051a4:	6003      	str	r3, [r0, #0]
 80051a6:	e7fb      	b.n	80051a0 <enet_rxframe_drop+0x24>
 80051a8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80051ac:	4c0b      	ldr	r4, [pc, #44]	; (80051dc <enet_rxframe_drop+0x60>)
 80051ae:	d006      	beq.n	80051be <enet_rxframe_drop+0x42>
 80051b0:	68e2      	ldr	r2, [r4, #12]
 80051b2:	6002      	str	r2, [r0, #0]
 80051b4:	2b00      	cmp	r3, #0
 80051b6:	d0f3      	beq.n	80051a0 <enet_rxframe_drop+0x24>
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	600b      	str	r3, [r1, #0]
 80051bc:	e7f0      	b.n	80051a0 <enet_rxframe_drop+0x24>
 80051be:	6824      	ldr	r4, [r4, #0]
 80051c0:	3210      	adds	r2, #16
 80051c2:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80051c6:	4422      	add	r2, r4
 80051c8:	6002      	str	r2, [r0, #0]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d0e8      	beq.n	80051a0 <enet_rxframe_drop+0x24>
 80051ce:	3310      	adds	r3, #16
 80051d0:	e7f3      	b.n	80051ba <enet_rxframe_drop+0x3e>
 80051d2:	bf00      	nop
 80051d4:	20003a08 	andcs	r3, r0, r8, lsl #20
 80051d8:	20003a00 	andcs	r3, r0, r0, lsl #20
 80051dc:	40029000 	andmi	r9, r2, r0

080051e0 <enet_rxframe_size_get>:
 80051e0:	b508      	push	{r3, lr}
 80051e2:	4b0c      	ldr	r3, [pc, #48]	; (8005214 <enet_rxframe_size_get+0x34>)
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	6818      	ldr	r0, [r3, #0]
 80051e8:	2800      	cmp	r0, #0
 80051ea:	db10      	blt.n	800520e <enet_rxframe_size_get+0x2e>
 80051ec:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80051f0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80051f4:	d003      	beq.n	80051fe <enet_rxframe_size_get+0x1e>
 80051f6:	f7ff ffc1 	bl	800517c <enet_rxframe_drop>
 80051fa:	2001      	movs	r0, #1
 80051fc:	bd08      	pop	{r3, pc}
 80051fe:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8005202:	2b21      	cmp	r3, #33	; 0x21
 8005204:	d0f7      	beq.n	80051f6 <enet_rxframe_size_get+0x16>
 8005206:	f3c0 400d 	ubfx	r0, r0, #16, #14
 800520a:	3804      	subs	r0, #4
 800520c:	e7f6      	b.n	80051fc <enet_rxframe_size_get+0x1c>
 800520e:	2000      	movs	r0, #0
 8005210:	e7f4      	b.n	80051fc <enet_rxframe_size_get+0x1c>
 8005212:	bf00      	nop
 8005214:	20003a08 	andcs	r3, r0, r8, lsl #20

08005218 <enet_initpara_reset>:
 8005218:	2200      	movs	r2, #0
 800521a:	4b08      	ldr	r3, [pc, #32]	; (800523c <enet_initpara_reset+0x24>)
 800521c:	e9c3 2200 	strd	r2, r2, [r3]
 8005220:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8005224:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8005228:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800522c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8005230:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8005234:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8005238:	639a      	str	r2, [r3, #56]	; 0x38
 800523a:	4770      	bx	lr
 800523c:	20003a10 	andcs	r3, r0, r0, lsl sl

08005240 <enet_deinit>:
 8005240:	b508      	push	{r3, lr}
 8005242:	f640 200e 	movw	r0, #2574	; 0xa0e
 8005246:	f000 f950 	bl	80054ea <rcu_periph_reset_enable>
 800524a:	f640 200e 	movw	r0, #2574	; 0xa0e
 800524e:	f000 f94e 	bl	80054ee <rcu_periph_reset_disable>
 8005252:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005256:	f7ff bfdf 	b.w	8005218 <enet_initpara_reset>
	...

0800525c <fmc_bank0_unlock>:
 800525c:	4b04      	ldr	r3, [pc, #16]	; (8005270 <fmc_bank0_unlock+0x14>)
 800525e:	691a      	ldr	r2, [r3, #16]
 8005260:	0612      	lsls	r2, r2, #24
 8005262:	bf41      	itttt	mi
 8005264:	4a03      	ldrmi	r2, [pc, #12]	; (8005274 <fmc_bank0_unlock+0x18>)
 8005266:	605a      	strmi	r2, [r3, #4]
 8005268:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800526c:	605a      	strmi	r2, [r3, #4]
 800526e:	4770      	bx	lr
 8005270:	40022000 	andmi	r2, r2, r0
 8005274:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08005278 <fmc_bank1_unlock>:
 8005278:	4b04      	ldr	r3, [pc, #16]	; (800528c <fmc_bank1_unlock+0x14>)
 800527a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800527c:	0612      	lsls	r2, r2, #24
 800527e:	bf41      	itttt	mi
 8005280:	4a03      	ldrmi	r2, [pc, #12]	; (8005290 <fmc_bank1_unlock+0x18>)
 8005282:	645a      	strmi	r2, [r3, #68]	; 0x44
 8005284:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8005288:	645a      	strmi	r2, [r3, #68]	; 0x44
 800528a:	4770      	bx	lr
 800528c:	40022000 	andmi	r2, r2, r0
 8005290:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08005294 <fmc_bank0_lock>:
 8005294:	4a02      	ldr	r2, [pc, #8]	; (80052a0 <fmc_bank0_lock+0xc>)
 8005296:	6913      	ldr	r3, [r2, #16]
 8005298:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800529c:	6113      	str	r3, [r2, #16]
 800529e:	4770      	bx	lr
 80052a0:	40022000 	andmi	r2, r2, r0

080052a4 <fmc_bank1_lock>:
 80052a4:	4a02      	ldr	r2, [pc, #8]	; (80052b0 <fmc_bank1_lock+0xc>)
 80052a6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80052a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80052ac:	6513      	str	r3, [r2, #80]	; 0x50
 80052ae:	4770      	bx	lr
 80052b0:	40022000 	andmi	r2, r2, r0

080052b4 <fmc_bank0_state_get>:
 80052b4:	4b07      	ldr	r3, [pc, #28]	; (80052d4 <fmc_bank0_state_get+0x20>)
 80052b6:	68da      	ldr	r2, [r3, #12]
 80052b8:	07d1      	lsls	r1, r2, #31
 80052ba:	d407      	bmi.n	80052cc <fmc_bank0_state_get+0x18>
 80052bc:	68da      	ldr	r2, [r3, #12]
 80052be:	06d2      	lsls	r2, r2, #27
 80052c0:	d406      	bmi.n	80052d0 <fmc_bank0_state_get+0x1c>
 80052c2:	68d8      	ldr	r0, [r3, #12]
 80052c4:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80052c8:	0040      	lsls	r0, r0, #1
 80052ca:	4770      	bx	lr
 80052cc:	2001      	movs	r0, #1
 80052ce:	4770      	bx	lr
 80052d0:	2003      	movs	r0, #3
 80052d2:	4770      	bx	lr
 80052d4:	40022000 	andmi	r2, r2, r0

080052d8 <fmc_bank1_state_get>:
 80052d8:	4b07      	ldr	r3, [pc, #28]	; (80052f8 <fmc_bank1_state_get+0x20>)
 80052da:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80052dc:	07d1      	lsls	r1, r2, #31
 80052de:	d407      	bmi.n	80052f0 <fmc_bank1_state_get+0x18>
 80052e0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80052e2:	06d2      	lsls	r2, r2, #27
 80052e4:	d406      	bmi.n	80052f4 <fmc_bank1_state_get+0x1c>
 80052e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80052e8:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80052ec:	0040      	lsls	r0, r0, #1
 80052ee:	4770      	bx	lr
 80052f0:	2001      	movs	r0, #1
 80052f2:	4770      	bx	lr
 80052f4:	2003      	movs	r0, #3
 80052f6:	4770      	bx	lr
 80052f8:	40022000 	andmi	r2, r2, r0

080052fc <fwdgt_enable>:
 80052fc:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8005300:	4b01      	ldr	r3, [pc, #4]	; (8005308 <fwdgt_enable+0xc>)
 8005302:	601a      	str	r2, [r3, #0]
 8005304:	4770      	bx	lr
 8005306:	bf00      	nop
 8005308:	40003000 	andmi	r3, r0, r0

0800530c <fwdgt_counter_reload>:
 800530c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8005310:	4b01      	ldr	r3, [pc, #4]	; (8005318 <fwdgt_counter_reload+0xc>)
 8005312:	601a      	str	r2, [r3, #0]
 8005314:	4770      	bx	lr
 8005316:	bf00      	nop
 8005318:	40003000 	andmi	r3, r0, r0

0800531c <fwdgt_config>:
 800531c:	f245 5355 	movw	r3, #21845	; 0x5555
 8005320:	4a11      	ldr	r2, [pc, #68]	; (8005368 <fwdgt_config+0x4c>)
 8005322:	b510      	push	{r4, lr}
 8005324:	4c11      	ldr	r4, [pc, #68]	; (800536c <fwdgt_config+0x50>)
 8005326:	6013      	str	r3, [r2, #0]
 8005328:	68d3      	ldr	r3, [r2, #12]
 800532a:	3c01      	subs	r4, #1
 800532c:	f003 0301 	and.w	r3, r3, #1
 8005330:	d013      	beq.n	800535a <fwdgt_config+0x3e>
 8005332:	2b00      	cmp	r3, #0
 8005334:	d1f8      	bne.n	8005328 <fwdgt_config+0xc>
 8005336:	6051      	str	r1, [r2, #4]
 8005338:	490c      	ldr	r1, [pc, #48]	; (800536c <fwdgt_config+0x50>)
 800533a:	4a0b      	ldr	r2, [pc, #44]	; (8005368 <fwdgt_config+0x4c>)
 800533c:	68d3      	ldr	r3, [r2, #12]
 800533e:	3901      	subs	r1, #1
 8005340:	f003 0302 	and.w	r3, r3, #2
 8005344:	d00d      	beq.n	8005362 <fwdgt_config+0x46>
 8005346:	2b00      	cmp	r3, #0
 8005348:	d1f8      	bne.n	800533c <fwdgt_config+0x20>
 800534a:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800534e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8005352:	6090      	str	r0, [r2, #8]
 8005354:	2001      	movs	r0, #1
 8005356:	6013      	str	r3, [r2, #0]
 8005358:	e002      	b.n	8005360 <fwdgt_config+0x44>
 800535a:	2b00      	cmp	r3, #0
 800535c:	d0eb      	beq.n	8005336 <fwdgt_config+0x1a>
 800535e:	2000      	movs	r0, #0
 8005360:	bd10      	pop	{r4, pc}
 8005362:	2b00      	cmp	r3, #0
 8005364:	d1fb      	bne.n	800535e <fwdgt_config+0x42>
 8005366:	e7f0      	b.n	800534a <fwdgt_config+0x2e>
 8005368:	40003000 	andmi	r3, r0, r0
 800536c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08005370 <gpio_init>:
 8005370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005374:	f04f 0c0f 	mov.w	ip, #15
 8005378:	06cf      	lsls	r7, r1, #27
 800537a:	f04f 0400 	mov.w	r4, #0
 800537e:	f04f 0701 	mov.w	r7, #1
 8005382:	f001 050f 	and.w	r5, r1, #15
 8005386:	bf48      	it	mi
 8005388:	4315      	orrmi	r5, r2
 800538a:	fa23 f204 	lsr.w	r2, r3, r4
 800538e:	07d6      	lsls	r6, r2, #31
 8005390:	d510      	bpl.n	80053b4 <gpio_init+0x44>
 8005392:	00a2      	lsls	r2, r4, #2
 8005394:	6806      	ldr	r6, [r0, #0]
 8005396:	fa0c fe02 	lsl.w	lr, ip, r2
 800539a:	ea26 060e 	bic.w	r6, r6, lr
 800539e:	fa05 f202 	lsl.w	r2, r5, r2
 80053a2:	2928      	cmp	r1, #40	; 0x28
 80053a4:	ea42 0206 	orr.w	r2, r2, r6
 80053a8:	d128      	bne.n	80053fc <gpio_init+0x8c>
 80053aa:	fa07 f604 	lsl.w	r6, r7, r4
 80053ae:	401e      	ands	r6, r3
 80053b0:	6146      	str	r6, [r0, #20]
 80053b2:	6002      	str	r2, [r0, #0]
 80053b4:	3401      	adds	r4, #1
 80053b6:	2c08      	cmp	r4, #8
 80053b8:	d1e7      	bne.n	800538a <gpio_init+0x1a>
 80053ba:	2600      	movs	r6, #0
 80053bc:	f04f 0c0f 	mov.w	ip, #15
 80053c0:	2701      	movs	r7, #1
 80053c2:	f106 0208 	add.w	r2, r6, #8
 80053c6:	fa23 f402 	lsr.w	r4, r3, r2
 80053ca:	07e4      	lsls	r4, r4, #31
 80053cc:	d511      	bpl.n	80053f2 <gpio_init+0x82>
 80053ce:	00b4      	lsls	r4, r6, #2
 80053d0:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80053d4:	fa0c f804 	lsl.w	r8, ip, r4
 80053d8:	ea2e 0e08 	bic.w	lr, lr, r8
 80053dc:	fa05 f404 	lsl.w	r4, r5, r4
 80053e0:	2928      	cmp	r1, #40	; 0x28
 80053e2:	ea44 040e 	orr.w	r4, r4, lr
 80053e6:	d110      	bne.n	800540a <gpio_init+0x9a>
 80053e8:	fa07 f202 	lsl.w	r2, r7, r2
 80053ec:	401a      	ands	r2, r3
 80053ee:	6142      	str	r2, [r0, #20]
 80053f0:	6044      	str	r4, [r0, #4]
 80053f2:	3601      	adds	r6, #1
 80053f4:	2e08      	cmp	r6, #8
 80053f6:	d1e4      	bne.n	80053c2 <gpio_init+0x52>
 80053f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053fc:	2948      	cmp	r1, #72	; 0x48
 80053fe:	bf02      	ittt	eq
 8005400:	fa07 f604 	lsleq.w	r6, r7, r4
 8005404:	401e      	andeq	r6, r3
 8005406:	6106      	streq	r6, [r0, #16]
 8005408:	e7d3      	b.n	80053b2 <gpio_init+0x42>
 800540a:	2948      	cmp	r1, #72	; 0x48
 800540c:	bf02      	ittt	eq
 800540e:	fa07 f202 	lsleq.w	r2, r7, r2
 8005412:	401a      	andeq	r2, r3
 8005414:	6102      	streq	r2, [r0, #16]
 8005416:	e7eb      	b.n	80053f0 <gpio_init+0x80>

08005418 <gpio_bit_set>:
 8005418:	6101      	str	r1, [r0, #16]
 800541a:	4770      	bx	lr

0800541c <gpio_bit_reset>:
 800541c:	6141      	str	r1, [r0, #20]
 800541e:	4770      	bx	lr

08005420 <gpio_input_bit_get>:
 8005420:	6883      	ldr	r3, [r0, #8]
 8005422:	420b      	tst	r3, r1
 8005424:	bf14      	ite	ne
 8005426:	2001      	movne	r0, #1
 8005428:	2000      	moveq	r0, #0
 800542a:	4770      	bx	lr

0800542c <gpio_pin_remap_config>:
 800542c:	2800      	cmp	r0, #0
 800542e:	4a16      	ldr	r2, [pc, #88]	; (8005488 <gpio_pin_remap_config+0x5c>)
 8005430:	b530      	push	{r4, r5, lr}
 8005432:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8005436:	bfb4      	ite	lt
 8005438:	69d3      	ldrlt	r3, [r2, #28]
 800543a:	6853      	ldrge	r3, [r2, #4]
 800543c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8005440:	b284      	uxth	r4, r0
 8005442:	d110      	bne.n	8005466 <gpio_pin_remap_config+0x3a>
 8005444:	6855      	ldr	r5, [r2, #4]
 8005446:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800544a:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800544e:	6055      	str	r5, [r2, #4]
 8005450:	b119      	cbz	r1, 800545a <gpio_pin_remap_config+0x2e>
 8005452:	0d42      	lsrs	r2, r0, #21
 8005454:	0112      	lsls	r2, r2, #4
 8005456:	4094      	lsls	r4, r2
 8005458:	4323      	orrs	r3, r4
 800545a:	4a0b      	ldr	r2, [pc, #44]	; (8005488 <gpio_pin_remap_config+0x5c>)
 800545c:	2800      	cmp	r0, #0
 800545e:	bfb4      	ite	lt
 8005460:	61d3      	strlt	r3, [r2, #28]
 8005462:	6053      	strge	r3, [r2, #4]
 8005464:	bd30      	pop	{r4, r5, pc}
 8005466:	02c2      	lsls	r2, r0, #11
 8005468:	bf4d      	iteet	mi
 800546a:	2203      	movmi	r2, #3
 800546c:	0d42      	lsrpl	r2, r0, #21
 800546e:	0112      	lslpl	r2, r2, #4
 8005470:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8005474:	bf4c      	ite	mi
 8005476:	40aa      	lslmi	r2, r5
 8005478:	fa04 f202 	lslpl.w	r2, r4, r2
 800547c:	ea23 0302 	bic.w	r3, r3, r2
 8005480:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8005484:	e7e4      	b.n	8005450 <gpio_pin_remap_config+0x24>
 8005486:	bf00      	nop
 8005488:	40010000 	andmi	r0, r1, r0

0800548c <gpio_ethernet_phy_select>:
 800548c:	4b04      	ldr	r3, [pc, #16]	; (80054a0 <gpio_ethernet_phy_select+0x14>)
 800548e:	685a      	ldr	r2, [r3, #4]
 8005490:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005494:	605a      	str	r2, [r3, #4]
 8005496:	685a      	ldr	r2, [r3, #4]
 8005498:	4302      	orrs	r2, r0
 800549a:	605a      	str	r2, [r3, #4]
 800549c:	4770      	bx	lr
 800549e:	bf00      	nop
 80054a0:	40010000 	andmi	r0, r1, r0

080054a4 <pmu_backup_write_enable>:
 80054a4:	4a02      	ldr	r2, [pc, #8]	; (80054b0 <pmu_backup_write_enable+0xc>)
 80054a6:	6813      	ldr	r3, [r2, #0]
 80054a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80054ac:	6013      	str	r3, [r2, #0]
 80054ae:	4770      	bx	lr
 80054b0:	40007000 	andmi	r7, r0, r0

080054b4 <rcu_periph_clock_enable>:
 80054b4:	2201      	movs	r2, #1
 80054b6:	0983      	lsrs	r3, r0, #6
 80054b8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80054bc:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80054c0:	6819      	ldr	r1, [r3, #0]
 80054c2:	f000 001f 	and.w	r0, r0, #31
 80054c6:	4082      	lsls	r2, r0
 80054c8:	430a      	orrs	r2, r1
 80054ca:	601a      	str	r2, [r3, #0]
 80054cc:	4770      	bx	lr

080054ce <rcu_periph_clock_disable>:
 80054ce:	2101      	movs	r1, #1
 80054d0:	0983      	lsrs	r3, r0, #6
 80054d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80054d6:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80054da:	681a      	ldr	r2, [r3, #0]
 80054dc:	f000 001f 	and.w	r0, r0, #31
 80054e0:	4081      	lsls	r1, r0
 80054e2:	ea22 0201 	bic.w	r2, r2, r1
 80054e6:	601a      	str	r2, [r3, #0]
 80054e8:	4770      	bx	lr

080054ea <rcu_periph_reset_enable>:
 80054ea:	f7ff bfe3 	b.w	80054b4 <rcu_periph_clock_enable>

080054ee <rcu_periph_reset_disable>:
 80054ee:	f7ff bfee 	b.w	80054ce <rcu_periph_clock_disable>
	...

080054f4 <rcu_ckout0_config>:
 80054f4:	4a06      	ldr	r2, [pc, #24]	; (8005510 <rcu_ckout0_config+0x1c>)
 80054f6:	6853      	ldr	r3, [r2, #4]
 80054f8:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80054fc:	4303      	orrs	r3, r0
 80054fe:	6053      	str	r3, [r2, #4]
 8005500:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8005504:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005508:	430b      	orrs	r3, r1
 800550a:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800550e:	4770      	bx	lr
 8005510:	40021000 	andmi	r1, r2, r0

08005514 <rcu_pll2_config>:
 8005514:	4b04      	ldr	r3, [pc, #16]	; (8005528 <rcu_pll2_config+0x14>)
 8005516:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005518:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800551c:	62da      	str	r2, [r3, #44]	; 0x2c
 800551e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005520:	4302      	orrs	r2, r0
 8005522:	62da      	str	r2, [r3, #44]	; 0x2c
 8005524:	4770      	bx	lr
 8005526:	bf00      	nop
 8005528:	40021000 	andmi	r1, r2, r0

0800552c <rcu_adc_clock_config>:
 800552c:	490c      	ldr	r1, [pc, #48]	; (8005560 <rcu_adc_clock_config+0x34>)
 800552e:	2805      	cmp	r0, #5
 8005530:	684b      	ldr	r3, [r1, #4]
 8005532:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005536:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800553a:	d006      	beq.n	800554a <rcu_adc_clock_config+0x1e>
 800553c:	d803      	bhi.n	8005546 <rcu_adc_clock_config+0x1a>
 800553e:	2804      	cmp	r0, #4
 8005540:	d10a      	bne.n	8005558 <rcu_adc_clock_config+0x2c>
 8005542:	604b      	str	r3, [r1, #4]
 8005544:	4770      	bx	lr
 8005546:	2807      	cmp	r0, #7
 8005548:	d1fb      	bne.n	8005542 <rcu_adc_clock_config+0x16>
 800554a:	4a06      	ldr	r2, [pc, #24]	; (8005564 <rcu_adc_clock_config+0x38>)
 800554c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8005550:	4313      	orrs	r3, r2
 8005552:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005556:	e7f4      	b.n	8005542 <rcu_adc_clock_config+0x16>
 8005558:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800555c:	e7f1      	b.n	8005542 <rcu_adc_clock_config+0x16>
 800555e:	bf00      	nop
 8005560:	40021000 	andmi	r1, r2, r0
 8005564:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08005568 <rcu_flag_get>:
 8005568:	0983      	lsrs	r3, r0, #6
 800556a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800556e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8005572:	681a      	ldr	r2, [r3, #0]
 8005574:	2301      	movs	r3, #1
 8005576:	f000 001f 	and.w	r0, r0, #31
 800557a:	4083      	lsls	r3, r0
 800557c:	4213      	tst	r3, r2
 800557e:	bf14      	ite	ne
 8005580:	2001      	movne	r0, #1
 8005582:	2000      	moveq	r0, #0
 8005584:	4770      	bx	lr
	...

08005588 <rcu_osci_stab_wait>:
 8005588:	281c      	cmp	r0, #28
 800558a:	b508      	push	{r3, lr}
 800558c:	d056      	beq.n	800563c <rcu_osci_stab_wait+0xb4>
 800558e:	d812      	bhi.n	80055b6 <rcu_osci_stab_wait+0x2e>
 8005590:	2818      	cmp	r0, #24
 8005592:	d04a      	beq.n	800562a <rcu_osci_stab_wait+0xa2>
 8005594:	d804      	bhi.n	80055a0 <rcu_osci_stab_wait+0x18>
 8005596:	b398      	cbz	r0, 8005600 <rcu_osci_stab_wait+0x78>
 8005598:	2810      	cmp	r0, #16
 800559a:	d022      	beq.n	80055e2 <rcu_osci_stab_wait+0x5a>
 800559c:	2000      	movs	r0, #0
 800559e:	bd08      	pop	{r3, pc}
 80055a0:	281a      	cmp	r0, #26
 80055a2:	d1fb      	bne.n	800559c <rcu_osci_stab_wait+0x14>
 80055a4:	492f      	ldr	r1, [pc, #188]	; (8005664 <rcu_osci_stab_wait+0xdc>)
 80055a6:	201b      	movs	r0, #27
 80055a8:	f7ff ffde 	bl	8005568 <rcu_flag_get>
 80055ac:	b908      	cbnz	r0, 80055b2 <rcu_osci_stab_wait+0x2a>
 80055ae:	3901      	subs	r1, #1
 80055b0:	d1f9      	bne.n	80055a6 <rcu_osci_stab_wait+0x1e>
 80055b2:	201b      	movs	r0, #27
 80055b4:	e01e      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 80055b6:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80055ba:	d02b      	beq.n	8005614 <rcu_osci_stab_wait+0x8c>
 80055bc:	f242 431c 	movw	r3, #9244	; 0x241c
 80055c0:	4298      	cmp	r0, r3
 80055c2:	d044      	beq.n	800564e <rcu_osci_stab_wait+0xc6>
 80055c4:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80055c8:	d1e8      	bne.n	800559c <rcu_osci_stab_wait+0x14>
 80055ca:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 80055ce:	f640 0001 	movw	r0, #2049	; 0x801
 80055d2:	f7ff ffc9 	bl	8005568 <rcu_flag_get>
 80055d6:	b908      	cbnz	r0, 80055dc <rcu_osci_stab_wait+0x54>
 80055d8:	3901      	subs	r1, #1
 80055da:	d1f8      	bne.n	80055ce <rcu_osci_stab_wait+0x46>
 80055dc:	f640 0001 	movw	r0, #2049	; 0x801
 80055e0:	e008      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 80055e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80055e6:	2011      	movs	r0, #17
 80055e8:	f7ff ffbe 	bl	8005568 <rcu_flag_get>
 80055ec:	b908      	cbnz	r0, 80055f2 <rcu_osci_stab_wait+0x6a>
 80055ee:	3901      	subs	r1, #1
 80055f0:	d1f9      	bne.n	80055e6 <rcu_osci_stab_wait+0x5e>
 80055f2:	2011      	movs	r0, #17
 80055f4:	f7ff ffb8 	bl	8005568 <rcu_flag_get>
 80055f8:	3800      	subs	r0, #0
 80055fa:	bf18      	it	ne
 80055fc:	2001      	movne	r0, #1
 80055fe:	e7ce      	b.n	800559e <rcu_osci_stab_wait+0x16>
 8005600:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8005604:	2001      	movs	r0, #1
 8005606:	f7ff ffaf 	bl	8005568 <rcu_flag_get>
 800560a:	b908      	cbnz	r0, 8005610 <rcu_osci_stab_wait+0x88>
 800560c:	3901      	subs	r1, #1
 800560e:	d1f9      	bne.n	8005604 <rcu_osci_stab_wait+0x7c>
 8005610:	2001      	movs	r0, #1
 8005612:	e7ef      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 8005614:	4913      	ldr	r1, [pc, #76]	; (8005664 <rcu_osci_stab_wait+0xdc>)
 8005616:	f640 1001 	movw	r0, #2305	; 0x901
 800561a:	f7ff ffa5 	bl	8005568 <rcu_flag_get>
 800561e:	b908      	cbnz	r0, 8005624 <rcu_osci_stab_wait+0x9c>
 8005620:	3901      	subs	r1, #1
 8005622:	d1f8      	bne.n	8005616 <rcu_osci_stab_wait+0x8e>
 8005624:	f640 1001 	movw	r0, #2305	; 0x901
 8005628:	e7e4      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 800562a:	490e      	ldr	r1, [pc, #56]	; (8005664 <rcu_osci_stab_wait+0xdc>)
 800562c:	2019      	movs	r0, #25
 800562e:	f7ff ff9b 	bl	8005568 <rcu_flag_get>
 8005632:	b908      	cbnz	r0, 8005638 <rcu_osci_stab_wait+0xb0>
 8005634:	3901      	subs	r1, #1
 8005636:	d1f9      	bne.n	800562c <rcu_osci_stab_wait+0xa4>
 8005638:	2019      	movs	r0, #25
 800563a:	e7db      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 800563c:	4909      	ldr	r1, [pc, #36]	; (8005664 <rcu_osci_stab_wait+0xdc>)
 800563e:	201d      	movs	r0, #29
 8005640:	f7ff ff92 	bl	8005568 <rcu_flag_get>
 8005644:	b908      	cbnz	r0, 800564a <rcu_osci_stab_wait+0xc2>
 8005646:	3901      	subs	r1, #1
 8005648:	d1f9      	bne.n	800563e <rcu_osci_stab_wait+0xb6>
 800564a:	201d      	movs	r0, #29
 800564c:	e7d2      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 800564e:	4905      	ldr	r1, [pc, #20]	; (8005664 <rcu_osci_stab_wait+0xdc>)
 8005650:	f242 401d 	movw	r0, #9245	; 0x241d
 8005654:	f7ff ff88 	bl	8005568 <rcu_flag_get>
 8005658:	b908      	cbnz	r0, 800565e <rcu_osci_stab_wait+0xd6>
 800565a:	3901      	subs	r1, #1
 800565c:	d1f8      	bne.n	8005650 <rcu_osci_stab_wait+0xc8>
 800565e:	f242 401d 	movw	r0, #9245	; 0x241d
 8005662:	e7c7      	b.n	80055f4 <rcu_osci_stab_wait+0x6c>
 8005664:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08005668 <rcu_osci_on>:
 8005668:	f7ff bf24 	b.w	80054b4 <rcu_periph_clock_enable>

0800566c <rcu_clock_freq_get>:
 800566c:	4b3e      	ldr	r3, [pc, #248]	; (8005768 <rcu_clock_freq_get+0xfc>)
 800566e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005670:	4604      	mov	r4, r0
 8005672:	461f      	mov	r7, r3
 8005674:	b089      	sub	sp, #36	; 0x24
 8005676:	ad04      	add	r5, sp, #16
 8005678:	f103 0610 	add.w	r6, r3, #16
 800567c:	462a      	mov	r2, r5
 800567e:	6818      	ldr	r0, [r3, #0]
 8005680:	6859      	ldr	r1, [r3, #4]
 8005682:	3308      	adds	r3, #8
 8005684:	c203      	stmia	r2!, {r0, r1}
 8005686:	42b3      	cmp	r3, r6
 8005688:	4615      	mov	r5, r2
 800568a:	d1f7      	bne.n	800567c <rcu_clock_freq_get+0x10>
 800568c:	466b      	mov	r3, sp
 800568e:	6938      	ldr	r0, [r7, #16]
 8005690:	6871      	ldr	r1, [r6, #4]
 8005692:	4a36      	ldr	r2, [pc, #216]	; (800576c <rcu_clock_freq_get+0x100>)
 8005694:	c303      	stmia	r3!, {r0, r1}
 8005696:	c303      	stmia	r3!, {r0, r1}
 8005698:	6853      	ldr	r3, [r2, #4]
 800569a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800569e:	2b01      	cmp	r3, #1
 80056a0:	d053      	beq.n	800574a <rcu_clock_freq_get+0xde>
 80056a2:	2b02      	cmp	r3, #2
 80056a4:	d153      	bne.n	800574e <rcu_clock_freq_get+0xe2>
 80056a6:	6853      	ldr	r3, [r2, #4]
 80056a8:	03dd      	lsls	r5, r3, #15
 80056aa:	d523      	bpl.n	80056f4 <rcu_clock_freq_get+0x88>
 80056ac:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80056ae:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80056b2:	4b2f      	ldr	r3, [pc, #188]	; (8005770 <rcu_clock_freq_get+0x104>)
 80056b4:	d00e      	beq.n	80056d4 <rcu_clock_freq_get+0x68>
 80056b6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80056b8:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80056ba:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80056be:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80056c2:	3101      	adds	r1, #1
 80056c4:	280f      	cmp	r0, #15
 80056c6:	f100 0502 	add.w	r5, r0, #2
 80056ca:	fbb3 f3f1 	udiv	r3, r3, r1
 80056ce:	bf08      	it	eq
 80056d0:	2514      	moveq	r5, #20
 80056d2:	436b      	muls	r3, r5
 80056d4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80056d6:	f001 010f 	and.w	r1, r1, #15
 80056da:	3101      	adds	r1, #1
 80056dc:	fbb3 f3f1 	udiv	r3, r3, r1
 80056e0:	6851      	ldr	r1, [r2, #4]
 80056e2:	6850      	ldr	r0, [r2, #4]
 80056e4:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80056e8:	0080      	lsls	r0, r0, #2
 80056ea:	d505      	bpl.n	80056f8 <rcu_clock_freq_get+0x8c>
 80056ec:	f041 0110 	orr.w	r1, r1, #16
 80056f0:	3101      	adds	r1, #1
 80056f2:	e027      	b.n	8005744 <rcu_clock_freq_get+0xd8>
 80056f4:	4b1f      	ldr	r3, [pc, #124]	; (8005774 <rcu_clock_freq_get+0x108>)
 80056f6:	e7f3      	b.n	80056e0 <rcu_clock_freq_get+0x74>
 80056f8:	290d      	cmp	r1, #13
 80056fa:	d120      	bne.n	800573e <rcu_clock_freq_get+0xd2>
 80056fc:	2006      	movs	r0, #6
 80056fe:	0859      	lsrs	r1, r3, #1
 8005700:	fb00 1003 	mla	r0, r0, r3, r1
 8005704:	6853      	ldr	r3, [r2, #4]
 8005706:	6851      	ldr	r1, [r2, #4]
 8005708:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800570c:	6852      	ldr	r2, [r2, #4]
 800570e:	3320      	adds	r3, #32
 8005710:	446b      	add	r3, sp
 8005712:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8005716:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800571a:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 800571e:	3120      	adds	r1, #32
 8005720:	3220      	adds	r2, #32
 8005722:	4469      	add	r1, sp
 8005724:	446a      	add	r2, sp
 8005726:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800572a:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800572e:	fa20 f303 	lsr.w	r3, r0, r3
 8005732:	2c03      	cmp	r4, #3
 8005734:	d816      	bhi.n	8005764 <rcu_clock_freq_get+0xf8>
 8005736:	e8df f004 	tbb	[pc, r4]
 800573a:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 800573e:	290f      	cmp	r1, #15
 8005740:	d0d6      	beq.n	80056f0 <rcu_clock_freq_get+0x84>
 8005742:	3102      	adds	r1, #2
 8005744:	fb03 f001 	mul.w	r0, r3, r1
 8005748:	e7dc      	b.n	8005704 <rcu_clock_freq_get+0x98>
 800574a:	4809      	ldr	r0, [pc, #36]	; (8005770 <rcu_clock_freq_get+0x104>)
 800574c:	e7da      	b.n	8005704 <rcu_clock_freq_get+0x98>
 800574e:	480a      	ldr	r0, [pc, #40]	; (8005778 <rcu_clock_freq_get+0x10c>)
 8005750:	e7d8      	b.n	8005704 <rcu_clock_freq_get+0x98>
 8005752:	4618      	mov	r0, r3
 8005754:	b009      	add	sp, #36	; 0x24
 8005756:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005758:	fa23 f001 	lsr.w	r0, r3, r1
 800575c:	e7fa      	b.n	8005754 <rcu_clock_freq_get+0xe8>
 800575e:	fa23 f002 	lsr.w	r0, r3, r2
 8005762:	e7f7      	b.n	8005754 <rcu_clock_freq_get+0xe8>
 8005764:	2000      	movs	r0, #0
 8005766:	e7f5      	b.n	8005754 <rcu_clock_freq_get+0xe8>
 8005768:	08006924 	stmdaeq	r0, {r2, r5, r8, fp, sp, lr}
 800576c:	40021000 	andmi	r1, r2, r0
 8005770:	017d7840 	cmneq	sp, r0, asr #16
 8005774:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8005778:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0800577c <timer_deinit>:
 800577c:	b508      	push	{r3, lr}
 800577e:	4b4e      	ldr	r3, [pc, #312]	; (80058b8 <timer_deinit+0x13c>)
 8005780:	4298      	cmp	r0, r3
 8005782:	f000 8092 	beq.w	80058aa <timer_deinit+0x12e>
 8005786:	d822      	bhi.n	80057ce <timer_deinit+0x52>
 8005788:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800578c:	4298      	cmp	r0, r3
 800578e:	d062      	beq.n	8005856 <timer_deinit+0xda>
 8005790:	d80b      	bhi.n	80057aa <timer_deinit+0x2e>
 8005792:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8005796:	4298      	cmp	r0, r3
 8005798:	d04f      	beq.n	800583a <timer_deinit+0xbe>
 800579a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800579e:	4298      	cmp	r0, r3
 80057a0:	d052      	beq.n	8005848 <timer_deinit+0xcc>
 80057a2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80057a6:	d041      	beq.n	800582c <timer_deinit+0xb0>
 80057a8:	bd08      	pop	{r3, pc}
 80057aa:	4b44      	ldr	r3, [pc, #272]	; (80058bc <timer_deinit+0x140>)
 80057ac:	4298      	cmp	r0, r3
 80057ae:	d059      	beq.n	8005864 <timer_deinit+0xe8>
 80057b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80057b4:	4298      	cmp	r0, r3
 80057b6:	d071      	beq.n	800589c <timer_deinit+0x120>
 80057b8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80057bc:	4298      	cmp	r0, r3
 80057be:	d1f3      	bne.n	80057a8 <timer_deinit+0x2c>
 80057c0:	f240 4004 	movw	r0, #1028	; 0x404
 80057c4:	f7ff fe91 	bl	80054ea <rcu_periph_reset_enable>
 80057c8:	f240 4004 	movw	r0, #1028	; 0x404
 80057cc:	e02a      	b.n	8005824 <timer_deinit+0xa8>
 80057ce:	4b3c      	ldr	r3, [pc, #240]	; (80058c0 <timer_deinit+0x144>)
 80057d0:	4298      	cmp	r0, r3
 80057d2:	d055      	beq.n	8005880 <timer_deinit+0x104>
 80057d4:	d812      	bhi.n	80057fc <timer_deinit+0x80>
 80057d6:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80057da:	4298      	cmp	r0, r3
 80057dc:	d01c      	beq.n	8005818 <timer_deinit+0x9c>
 80057de:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80057e2:	4298      	cmp	r0, r3
 80057e4:	d045      	beq.n	8005872 <timer_deinit+0xf6>
 80057e6:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 80057ea:	4298      	cmp	r0, r3
 80057ec:	d1dc      	bne.n	80057a8 <timer_deinit+0x2c>
 80057ee:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80057f2:	f7ff fe7a 	bl	80054ea <rcu_periph_reset_enable>
 80057f6:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80057fa:	e013      	b.n	8005824 <timer_deinit+0xa8>
 80057fc:	4b31      	ldr	r3, [pc, #196]	; (80058c4 <timer_deinit+0x148>)
 80057fe:	4298      	cmp	r0, r3
 8005800:	d045      	beq.n	800588e <timer_deinit+0x112>
 8005802:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005806:	4298      	cmp	r0, r3
 8005808:	d1ce      	bne.n	80057a8 <timer_deinit+0x2c>
 800580a:	f240 3015 	movw	r0, #789	; 0x315
 800580e:	f7ff fe6c 	bl	80054ea <rcu_periph_reset_enable>
 8005812:	f240 3015 	movw	r0, #789	; 0x315
 8005816:	e005      	b.n	8005824 <timer_deinit+0xa8>
 8005818:	f240 300b 	movw	r0, #779	; 0x30b
 800581c:	f7ff fe65 	bl	80054ea <rcu_periph_reset_enable>
 8005820:	f240 300b 	movw	r0, #779	; 0x30b
 8005824:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005828:	f7ff be61 	b.w	80054ee <rcu_periph_reset_disable>
 800582c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8005830:	f7ff fe5b 	bl	80054ea <rcu_periph_reset_enable>
 8005834:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8005838:	e7f4      	b.n	8005824 <timer_deinit+0xa8>
 800583a:	f240 4001 	movw	r0, #1025	; 0x401
 800583e:	f7ff fe54 	bl	80054ea <rcu_periph_reset_enable>
 8005842:	f240 4001 	movw	r0, #1025	; 0x401
 8005846:	e7ed      	b.n	8005824 <timer_deinit+0xa8>
 8005848:	f240 4002 	movw	r0, #1026	; 0x402
 800584c:	f7ff fe4d 	bl	80054ea <rcu_periph_reset_enable>
 8005850:	f240 4002 	movw	r0, #1026	; 0x402
 8005854:	e7e6      	b.n	8005824 <timer_deinit+0xa8>
 8005856:	f240 4003 	movw	r0, #1027	; 0x403
 800585a:	f7ff fe46 	bl	80054ea <rcu_periph_reset_enable>
 800585e:	f240 4003 	movw	r0, #1027	; 0x403
 8005862:	e7df      	b.n	8005824 <timer_deinit+0xa8>
 8005864:	f240 4005 	movw	r0, #1029	; 0x405
 8005868:	f7ff fe3f 	bl	80054ea <rcu_periph_reset_enable>
 800586c:	f240 4005 	movw	r0, #1029	; 0x405
 8005870:	e7d8      	b.n	8005824 <timer_deinit+0xa8>
 8005872:	f240 300d 	movw	r0, #781	; 0x30d
 8005876:	f7ff fe38 	bl	80054ea <rcu_periph_reset_enable>
 800587a:	f240 300d 	movw	r0, #781	; 0x30d
 800587e:	e7d1      	b.n	8005824 <timer_deinit+0xa8>
 8005880:	f240 3013 	movw	r0, #787	; 0x313
 8005884:	f7ff fe31 	bl	80054ea <rcu_periph_reset_enable>
 8005888:	f240 3013 	movw	r0, #787	; 0x313
 800588c:	e7ca      	b.n	8005824 <timer_deinit+0xa8>
 800588e:	f44f 7045 	mov.w	r0, #788	; 0x314
 8005892:	f7ff fe2a 	bl	80054ea <rcu_periph_reset_enable>
 8005896:	f44f 7045 	mov.w	r0, #788	; 0x314
 800589a:	e7c3      	b.n	8005824 <timer_deinit+0xa8>
 800589c:	f240 4006 	movw	r0, #1030	; 0x406
 80058a0:	f7ff fe23 	bl	80054ea <rcu_periph_reset_enable>
 80058a4:	f240 4006 	movw	r0, #1030	; 0x406
 80058a8:	e7bc      	b.n	8005824 <timer_deinit+0xa8>
 80058aa:	f240 4007 	movw	r0, #1031	; 0x407
 80058ae:	f7ff fe1c 	bl	80054ea <rcu_periph_reset_enable>
 80058b2:	f240 4007 	movw	r0, #1031	; 0x407
 80058b6:	e7b5      	b.n	8005824 <timer_deinit+0xa8>
 80058b8:	40001c00 	andmi	r1, r0, r0, lsl #24
 80058bc:	40001400 	andmi	r1, r0, r0, lsl #8
 80058c0:	40014c00 	andmi	r4, r1, r0, lsl #24
 80058c4:	40015000 	andmi	r5, r1, r0

080058c8 <timer_init>:
 80058c8:	880b      	ldrh	r3, [r1, #0]
 80058ca:	6283      	str	r3, [r0, #40]	; 0x28
 80058cc:	4b26      	ldr	r3, [pc, #152]	; (8005968 <timer_init+0xa0>)
 80058ce:	4298      	cmp	r0, r3
 80058d0:	d018      	beq.n	8005904 <timer_init+0x3c>
 80058d2:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 80058d6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80058da:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 80058de:	d011      	beq.n	8005904 <timer_init+0x3c>
 80058e0:	4a22      	ldr	r2, [pc, #136]	; (800596c <timer_init+0xa4>)
 80058e2:	4290      	cmp	r0, r2
 80058e4:	d00e      	beq.n	8005904 <timer_init+0x3c>
 80058e6:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80058ea:	4290      	cmp	r0, r2
 80058ec:	d00a      	beq.n	8005904 <timer_init+0x3c>
 80058ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80058f2:	4293      	cmp	r3, r2
 80058f4:	d006      	beq.n	8005904 <timer_init+0x3c>
 80058f6:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80058fa:	4293      	cmp	r3, r2
 80058fc:	d002      	beq.n	8005904 <timer_init+0x3c>
 80058fe:	4b1c      	ldr	r3, [pc, #112]	; (8005970 <timer_init+0xa8>)
 8005900:	4298      	cmp	r0, r3
 8005902:	d10f      	bne.n	8005924 <timer_init+0x5c>
 8005904:	6803      	ldr	r3, [r0, #0]
 8005906:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800590a:	6003      	str	r3, [r0, #0]
 800590c:	884b      	ldrh	r3, [r1, #2]
 800590e:	6802      	ldr	r2, [r0, #0]
 8005910:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8005914:	4313      	orrs	r3, r2
 8005916:	6003      	str	r3, [r0, #0]
 8005918:	888b      	ldrh	r3, [r1, #4]
 800591a:	6802      	ldr	r2, [r0, #0]
 800591c:	f003 0310 	and.w	r3, r3, #16
 8005920:	4313      	orrs	r3, r2
 8005922:	6003      	str	r3, [r0, #0]
 8005924:	688b      	ldr	r3, [r1, #8]
 8005926:	62c3      	str	r3, [r0, #44]	; 0x2c
 8005928:	4b12      	ldr	r3, [pc, #72]	; (8005974 <timer_init+0xac>)
 800592a:	4298      	cmp	r0, r3
 800592c:	d003      	beq.n	8005936 <timer_init+0x6e>
 800592e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005932:	4298      	cmp	r0, r3
 8005934:	d104      	bne.n	8005940 <timer_init+0x78>
 8005936:	6943      	ldr	r3, [r0, #20]
 8005938:	f043 0301 	orr.w	r3, r3, #1
 800593c:	6143      	str	r3, [r0, #20]
 800593e:	4770      	bx	lr
 8005940:	6803      	ldr	r3, [r0, #0]
 8005942:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005946:	6003      	str	r3, [r0, #0]
 8005948:	898b      	ldrh	r3, [r1, #12]
 800594a:	6802      	ldr	r2, [r0, #0]
 800594c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005950:	4313      	orrs	r3, r2
 8005952:	6003      	str	r3, [r0, #0]
 8005954:	4b04      	ldr	r3, [pc, #16]	; (8005968 <timer_init+0xa0>)
 8005956:	4298      	cmp	r0, r3
 8005958:	d002      	beq.n	8005960 <timer_init+0x98>
 800595a:	4b04      	ldr	r3, [pc, #16]	; (800596c <timer_init+0xa4>)
 800595c:	4298      	cmp	r0, r3
 800595e:	d1ea      	bne.n	8005936 <timer_init+0x6e>
 8005960:	7b8b      	ldrb	r3, [r1, #14]
 8005962:	6303      	str	r3, [r0, #48]	; 0x30
 8005964:	e7e7      	b.n	8005936 <timer_init+0x6e>
 8005966:	bf00      	nop
 8005968:	40012c00 	andmi	r2, r1, r0, lsl #24
 800596c:	40013400 	andmi	r3, r1, r0, lsl #8
 8005970:	40002000 	andmi	r2, r0, r0
 8005974:	40001000 	andmi	r1, r0, r0

08005978 <timer_enable>:
 8005978:	6803      	ldr	r3, [r0, #0]
 800597a:	f043 0301 	orr.w	r3, r3, #1
 800597e:	6003      	str	r3, [r0, #0]
 8005980:	4770      	bx	lr

08005982 <timer_input_trigger_source_select>:
 8005982:	6883      	ldr	r3, [r0, #8]
 8005984:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005988:	6083      	str	r3, [r0, #8]
 800598a:	6883      	ldr	r3, [r0, #8]
 800598c:	430b      	orrs	r3, r1
 800598e:	6083      	str	r3, [r0, #8]
 8005990:	4770      	bx	lr

08005992 <timer_master_output_trigger_source_select>:
 8005992:	6843      	ldr	r3, [r0, #4]
 8005994:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005998:	6043      	str	r3, [r0, #4]
 800599a:	6843      	ldr	r3, [r0, #4]
 800599c:	430b      	orrs	r3, r1
 800599e:	6043      	str	r3, [r0, #4]
 80059a0:	4770      	bx	lr

080059a2 <timer_slave_mode_select>:
 80059a2:	6883      	ldr	r3, [r0, #8]
 80059a4:	f023 0307 	bic.w	r3, r3, #7
 80059a8:	6083      	str	r3, [r0, #8]
 80059aa:	6883      	ldr	r3, [r0, #8]
 80059ac:	430b      	orrs	r3, r1
 80059ae:	6083      	str	r3, [r0, #8]
 80059b0:	4770      	bx	lr

080059b2 <timer_master_slave_mode_config>:
 80059b2:	2980      	cmp	r1, #128	; 0x80
 80059b4:	d104      	bne.n	80059c0 <timer_master_slave_mode_config+0xe>
 80059b6:	6883      	ldr	r3, [r0, #8]
 80059b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80059bc:	6083      	str	r3, [r0, #8]
 80059be:	4770      	bx	lr
 80059c0:	2900      	cmp	r1, #0
 80059c2:	d1fc      	bne.n	80059be <timer_master_slave_mode_config+0xc>
 80059c4:	6883      	ldr	r3, [r0, #8]
 80059c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80059ca:	e7f7      	b.n	80059bc <timer_master_slave_mode_config+0xa>

080059cc <usart_deinit>:
 80059cc:	b508      	push	{r3, lr}
 80059ce:	4b2d      	ldr	r3, [pc, #180]	; (8005a84 <usart_deinit+0xb8>)
 80059d0:	4298      	cmp	r0, r3
 80059d2:	d050      	beq.n	8005a76 <usart_deinit+0xaa>
 80059d4:	d817      	bhi.n	8005a06 <usart_deinit+0x3a>
 80059d6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80059da:	4298      	cmp	r0, r3
 80059dc:	d044      	beq.n	8005a68 <usart_deinit+0x9c>
 80059de:	d808      	bhi.n	80059f2 <usart_deinit+0x26>
 80059e0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80059e4:	4298      	cmp	r0, r3
 80059e6:	d02a      	beq.n	8005a3e <usart_deinit+0x72>
 80059e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80059ec:	4298      	cmp	r0, r3
 80059ee:	d02d      	beq.n	8005a4c <usart_deinit+0x80>
 80059f0:	bd08      	pop	{r3, pc}
 80059f2:	4b25      	ldr	r3, [pc, #148]	; (8005a88 <usart_deinit+0xbc>)
 80059f4:	4298      	cmp	r0, r3
 80059f6:	d1fb      	bne.n	80059f0 <usart_deinit+0x24>
 80059f8:	f240 4014 	movw	r0, #1044	; 0x414
 80059fc:	f7ff fd75 	bl	80054ea <rcu_periph_reset_enable>
 8005a00:	f240 4014 	movw	r0, #1044	; 0x414
 8005a04:	e017      	b.n	8005a36 <usart_deinit+0x6a>
 8005a06:	4b21      	ldr	r3, [pc, #132]	; (8005a8c <usart_deinit+0xc0>)
 8005a08:	4298      	cmp	r0, r3
 8005a0a:	d00e      	beq.n	8005a2a <usart_deinit+0x5e>
 8005a0c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8005a10:	4298      	cmp	r0, r3
 8005a12:	d022      	beq.n	8005a5a <usart_deinit+0x8e>
 8005a14:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8005a18:	4298      	cmp	r0, r3
 8005a1a:	d1e9      	bne.n	80059f0 <usart_deinit+0x24>
 8005a1c:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8005a20:	f7ff fd63 	bl	80054ea <rcu_periph_reset_enable>
 8005a24:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8005a28:	e005      	b.n	8005a36 <usart_deinit+0x6a>
 8005a2a:	f240 300e 	movw	r0, #782	; 0x30e
 8005a2e:	f7ff fd5c 	bl	80054ea <rcu_periph_reset_enable>
 8005a32:	f240 300e 	movw	r0, #782	; 0x30e
 8005a36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005a3a:	f7ff bd58 	b.w	80054ee <rcu_periph_reset_disable>
 8005a3e:	f240 4011 	movw	r0, #1041	; 0x411
 8005a42:	f7ff fd52 	bl	80054ea <rcu_periph_reset_enable>
 8005a46:	f240 4011 	movw	r0, #1041	; 0x411
 8005a4a:	e7f4      	b.n	8005a36 <usart_deinit+0x6a>
 8005a4c:	f240 4012 	movw	r0, #1042	; 0x412
 8005a50:	f7ff fd4b 	bl	80054ea <rcu_periph_reset_enable>
 8005a54:	f240 4012 	movw	r0, #1042	; 0x412
 8005a58:	e7ed      	b.n	8005a36 <usart_deinit+0x6a>
 8005a5a:	f641 5018 	movw	r0, #7448	; 0x1d18
 8005a5e:	f7ff fd44 	bl	80054ea <rcu_periph_reset_enable>
 8005a62:	f641 5018 	movw	r0, #7448	; 0x1d18
 8005a66:	e7e6      	b.n	8005a36 <usart_deinit+0x6a>
 8005a68:	f240 4013 	movw	r0, #1043	; 0x413
 8005a6c:	f7ff fd3d 	bl	80054ea <rcu_periph_reset_enable>
 8005a70:	f240 4013 	movw	r0, #1043	; 0x413
 8005a74:	e7df      	b.n	8005a36 <usart_deinit+0x6a>
 8005a76:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8005a7a:	f7ff fd36 	bl	80054ea <rcu_periph_reset_enable>
 8005a7e:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8005a82:	e7d8      	b.n	8005a36 <usart_deinit+0x6a>
 8005a84:	40007800 	andmi	r7, r0, r0, lsl #16
 8005a88:	40005000 	andmi	r5, r0, r0
 8005a8c:	40013800 	andmi	r3, r1, r0, lsl #16

08005a90 <usart_baudrate_set>:
 8005a90:	b538      	push	{r3, r4, r5, lr}
 8005a92:	4b16      	ldr	r3, [pc, #88]	; (8005aec <usart_baudrate_set+0x5c>)
 8005a94:	4604      	mov	r4, r0
 8005a96:	4298      	cmp	r0, r3
 8005a98:	460d      	mov	r5, r1
 8005a9a:	d025      	beq.n	8005ae8 <usart_baudrate_set+0x58>
 8005a9c:	d816      	bhi.n	8005acc <usart_baudrate_set+0x3c>
 8005a9e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8005aa2:	4298      	cmp	r0, r3
 8005aa4:	d020      	beq.n	8005ae8 <usart_baudrate_set+0x58>
 8005aa6:	d80f      	bhi.n	8005ac8 <usart_baudrate_set+0x38>
 8005aa8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8005aac:	4298      	cmp	r0, r3
 8005aae:	d01b      	beq.n	8005ae8 <usart_baudrate_set+0x58>
 8005ab0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005ab4:	429c      	cmp	r4, r3
 8005ab6:	d017      	beq.n	8005ae8 <usart_baudrate_set+0x58>
 8005ab8:	2000      	movs	r0, #0
 8005aba:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8005abe:	fbb1 f1f5 	udiv	r1, r1, r5
 8005ac2:	b289      	uxth	r1, r1
 8005ac4:	60a1      	str	r1, [r4, #8]
 8005ac6:	bd38      	pop	{r3, r4, r5, pc}
 8005ac8:	4b09      	ldr	r3, [pc, #36]	; (8005af0 <usart_baudrate_set+0x60>)
 8005aca:	e7f3      	b.n	8005ab4 <usart_baudrate_set+0x24>
 8005acc:	4b09      	ldr	r3, [pc, #36]	; (8005af4 <usart_baudrate_set+0x64>)
 8005ace:	4298      	cmp	r0, r3
 8005ad0:	d006      	beq.n	8005ae0 <usart_baudrate_set+0x50>
 8005ad2:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8005ad6:	4298      	cmp	r0, r3
 8005ad8:	d002      	beq.n	8005ae0 <usart_baudrate_set+0x50>
 8005ada:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8005ade:	e7e9      	b.n	8005ab4 <usart_baudrate_set+0x24>
 8005ae0:	2003      	movs	r0, #3
 8005ae2:	f7ff fdc3 	bl	800566c <rcu_clock_freq_get>
 8005ae6:	e7e8      	b.n	8005aba <usart_baudrate_set+0x2a>
 8005ae8:	2002      	movs	r0, #2
 8005aea:	e7fa      	b.n	8005ae2 <usart_baudrate_set+0x52>
 8005aec:	40007800 	andmi	r7, r0, r0, lsl #16
 8005af0:	40005000 	andmi	r5, r0, r0
 8005af4:	40013800 	andmi	r3, r1, r0, lsl #16

08005af8 <usart_parity_config>:
 8005af8:	68c3      	ldr	r3, [r0, #12]
 8005afa:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005afe:	60c3      	str	r3, [r0, #12]
 8005b00:	68c3      	ldr	r3, [r0, #12]
 8005b02:	430b      	orrs	r3, r1
 8005b04:	60c3      	str	r3, [r0, #12]
 8005b06:	4770      	bx	lr

08005b08 <usart_word_length_set>:
 8005b08:	68c3      	ldr	r3, [r0, #12]
 8005b0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005b0e:	60c3      	str	r3, [r0, #12]
 8005b10:	68c3      	ldr	r3, [r0, #12]
 8005b12:	430b      	orrs	r3, r1
 8005b14:	60c3      	str	r3, [r0, #12]
 8005b16:	4770      	bx	lr

08005b18 <usart_stop_bit_set>:
 8005b18:	6903      	ldr	r3, [r0, #16]
 8005b1a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8005b1e:	6103      	str	r3, [r0, #16]
 8005b20:	6903      	ldr	r3, [r0, #16]
 8005b22:	430b      	orrs	r3, r1
 8005b24:	6103      	str	r3, [r0, #16]
 8005b26:	4770      	bx	lr

08005b28 <usart_transmit_config>:
 8005b28:	68c3      	ldr	r3, [r0, #12]
 8005b2a:	f023 0308 	bic.w	r3, r3, #8
 8005b2e:	430b      	orrs	r3, r1
 8005b30:	60c3      	str	r3, [r0, #12]
 8005b32:	4770      	bx	lr

08005b34 <usart_receive_config>:
 8005b34:	68c3      	ldr	r3, [r0, #12]
 8005b36:	f023 0304 	bic.w	r3, r3, #4
 8005b3a:	430b      	orrs	r3, r1
 8005b3c:	60c3      	str	r3, [r0, #12]
 8005b3e:	4770      	bx	lr

08005b40 <usart_hardware_flow_rts_config>:
 8005b40:	6943      	ldr	r3, [r0, #20]
 8005b42:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005b46:	430b      	orrs	r3, r1
 8005b48:	6143      	str	r3, [r0, #20]
 8005b4a:	4770      	bx	lr

08005b4c <usart_hardware_flow_cts_config>:
 8005b4c:	6943      	ldr	r3, [r0, #20]
 8005b4e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005b52:	430b      	orrs	r3, r1
 8005b54:	6143      	str	r3, [r0, #20]
 8005b56:	4770      	bx	lr

08005b58 <usart_flag_get>:
 8005b58:	098b      	lsrs	r3, r1, #6
 8005b5a:	581a      	ldr	r2, [r3, r0]
 8005b5c:	2301      	movs	r3, #1
 8005b5e:	f001 011f 	and.w	r1, r1, #31
 8005b62:	408b      	lsls	r3, r1
 8005b64:	4213      	tst	r3, r2
 8005b66:	bf14      	ite	ne
 8005b68:	2001      	movne	r0, #1
 8005b6a:	2000      	moveq	r0, #0
 8005b6c:	4770      	bx	lr
	...

08005b70 <emac_eth_recv>:
 8005b70:	b538      	push	{r3, r4, r5, lr}
 8005b72:	4605      	mov	r5, r0
 8005b74:	f7ff fb34 	bl	80051e0 <enet_rxframe_size_get>
 8005b78:	4604      	mov	r4, r0
 8005b7a:	b138      	cbz	r0, 8005b8c <emac_eth_recv+0x1c>
 8005b7c:	4b05      	ldr	r3, [pc, #20]	; (8005b94 <emac_eth_recv+0x24>)
 8005b7e:	2105      	movs	r1, #5
 8005b80:	6818      	ldr	r0, [r3, #0]
 8005b82:	f7ff fadc 	bl	800513e <enet_desc_information_get>
 8005b86:	6028      	str	r0, [r5, #0]
 8005b88:	4620      	mov	r0, r4
 8005b8a:	bd38      	pop	{r3, r4, r5, pc}
 8005b8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b90:	e7fb      	b.n	8005b8a <emac_eth_recv+0x1a>
 8005b92:	bf00      	nop
 8005b94:	20003a08 	andcs	r3, r0, r8, lsl #20

08005b98 <emac_free_pkt>:
 8005b98:	2100      	movs	r1, #0
 8005b9a:	4608      	mov	r0, r1
 8005b9c:	f7ff b80a 	b.w	8004bb4 <enet_frame_receive>

08005ba0 <emac_eth_send>:
 8005ba0:	f7ff b848 	b.w	8004c34 <enet_frame_transmit>

08005ba4 <gd32_adc_init()>:
 8005ba4:	b510      	push	{r4, lr}
 8005ba6:	f240 6009 	movw	r0, #1545	; 0x609
 8005baa:	4c21      	ldr	r4, [pc, #132]	; (8005c30 <gd32_adc_init()+0x8c>)
 8005bac:	f7ff fc82 	bl	80054b4 <rcu_periph_clock_enable>
 8005bb0:	2005      	movs	r0, #5
 8005bb2:	f7ff fcbb 	bl	800552c <rcu_adc_clock_config>
 8005bb6:	4620      	mov	r0, r4
 8005bb8:	2201      	movs	r2, #1
 8005bba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005bbe:	f000 fccf 	bl	8006560 <adc_special_function_config>
 8005bc2:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8005bc6:	4620      	mov	r0, r4
 8005bc8:	2102      	movs	r1, #2
 8005bca:	f000 fd68 	bl	800669e <adc_external_trigger_source_config>
 8005bce:	2100      	movs	r1, #0
 8005bd0:	4620      	mov	r0, r4
 8005bd2:	f000 fced 	bl	80065b0 <adc_data_alignment_config>
 8005bd6:	2000      	movs	r0, #0
 8005bd8:	f000 fcb2 	bl	8006540 <adc_mode_config>
 8005bdc:	2202      	movs	r2, #2
 8005bde:	4620      	mov	r0, r4
 8005be0:	4611      	mov	r1, r2
 8005be2:	f000 fd11 	bl	8006608 <adc_channel_length_config>
 8005be6:	4620      	mov	r0, r4
 8005be8:	2307      	movs	r3, #7
 8005bea:	2210      	movs	r2, #16
 8005bec:	2100      	movs	r1, #0
 8005bee:	f000 fd28 	bl	8006642 <adc_inserted_channel_config>
 8005bf2:	2307      	movs	r3, #7
 8005bf4:	4620      	mov	r0, r4
 8005bf6:	2211      	movs	r2, #17
 8005bf8:	2101      	movs	r1, #1
 8005bfa:	f000 fd22 	bl	8006642 <adc_inserted_channel_config>
 8005bfe:	2201      	movs	r2, #1
 8005c00:	2102      	movs	r1, #2
 8005c02:	4620      	mov	r0, r4
 8005c04:	f000 fd5c 	bl	80066c0 <adc_external_trigger_config>
 8005c08:	f000 fcf4 	bl	80065f4 <adc_tempsensor_vrefint_enable>
 8005c0c:	4620      	mov	r0, r4
 8005c0e:	f000 fcd8 	bl	80065c2 <adc_enable>
 8005c12:	2100      	movs	r1, #0
 8005c14:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005c18:	f000 fbd8 	bl	80063cc <udelay(unsigned int, unsigned int)>
 8005c1c:	4620      	mov	r0, r4
 8005c1e:	f000 fcd8 	bl	80065d2 <adc_calibration_enable>
 8005c22:	4620      	mov	r0, r4
 8005c24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005c28:	2102      	movs	r1, #2
 8005c2a:	f000 bd64 	b.w	80066f6 <adc_software_trigger_enable>
 8005c2e:	bf00      	nop
 8005c30:	40012400 	andmi	r2, r1, r0, lsl #8

08005c34 <_stop() [clone .isra.0]>:
 8005c34:	b508      	push	{r3, lr}
 8005c36:	4806      	ldr	r0, [pc, #24]	; (8005c50 <_stop() [clone .isra.0]+0x1c>)
 8005c38:	f000 fdf0 	bl	800681c <i2c_stop_on_bus>
 8005c3c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8005c40:	4904      	ldr	r1, [pc, #16]	; (8005c54 <_stop() [clone .isra.0]+0x20>)
 8005c42:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8005c46:	0592      	lsls	r2, r2, #22
 8005c48:	d501      	bpl.n	8005c4e <_stop() [clone .isra.0]+0x1a>
 8005c4a:	3b01      	subs	r3, #1
 8005c4c:	d1f9      	bne.n	8005c42 <_stop() [clone .isra.0]+0xe>
 8005c4e:	bd08      	pop	{r3, pc}
 8005c50:	40005400 	andmi	r5, r0, r0, lsl #8
 8005c54:	40005000 	andmi	r5, r0, r0

08005c58 <gd32_i2c_begin>:
 8005c58:	b510      	push	{r4, lr}
 8005c5a:	f240 7015 	movw	r0, #1813	; 0x715
 8005c5e:	f7ff fc29 	bl	80054b4 <rcu_periph_clock_enable>
 8005c62:	4c15      	ldr	r4, [pc, #84]	; (8005cb8 <gd32_i2c_begin+0x60>)
 8005c64:	f240 6003 	movw	r0, #1539	; 0x603
 8005c68:	f7ff fc24 	bl	80054b4 <rcu_periph_clock_enable>
 8005c6c:	f240 6003 	movw	r0, #1539	; 0x603
 8005c70:	f7ff fc20 	bl	80054b4 <rcu_periph_clock_enable>
 8005c74:	4620      	mov	r0, r4
 8005c76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005c7a:	2203      	movs	r2, #3
 8005c7c:	211c      	movs	r1, #28
 8005c7e:	f7ff fb77 	bl	8005370 <gpio_init>
 8005c82:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005c86:	2203      	movs	r2, #3
 8005c88:	4620      	mov	r0, r4
 8005c8a:	211c      	movs	r1, #28
 8005c8c:	f7ff fb70 	bl	8005370 <gpio_init>
 8005c90:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8005c94:	2101      	movs	r1, #1
 8005c96:	2002      	movs	r0, #2
 8005c98:	f7ff fbc8 	bl	800542c <gpio_pin_remap_config>
 8005c9c:	4620      	mov	r0, r4
 8005c9e:	4907      	ldr	r1, [pc, #28]	; (8005cbc <gd32_i2c_begin+0x64>)
 8005ca0:	2200      	movs	r2, #0
 8005ca2:	f000 fd35 	bl	8006710 <i2c_clock_config>
 8005ca6:	4620      	mov	r0, r4
 8005ca8:	f000 fdae 	bl	8006808 <i2c_enable>
 8005cac:	4620      	mov	r0, r4
 8005cae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005cb2:	2101      	movs	r1, #1
 8005cb4:	f000 bd8e 	b.w	80067d4 <i2c_ack_config>
 8005cb8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8005cbc:	00061a80 	andeq	r1, r6, r0, lsl #21

08005cc0 <gd32_i2c_set_baudrate>:
 8005cc0:	4601      	mov	r1, r0
 8005cc2:	2200      	movs	r2, #0
 8005cc4:	4801      	ldr	r0, [pc, #4]	; (8005ccc <gd32_i2c_set_baudrate+0xc>)
 8005cc6:	f000 bd23 	b.w	8006710 <i2c_clock_config>
 8005cca:	bf00      	nop
 8005ccc:	40005400 	andmi	r5, r0, r0, lsl #8

08005cd0 <gd32_i2c_set_address>:
 8005cd0:	4b01      	ldr	r3, [pc, #4]	; (8005cd8 <gd32_i2c_set_address+0x8>)
 8005cd2:	0040      	lsls	r0, r0, #1
 8005cd4:	7018      	strb	r0, [r3, #0]
 8005cd6:	4770      	bx	lr
 8005cd8:	20004c58 	andcs	r4, r0, r8, asr ip

08005cdc <gd32_i2c_write>:
 8005cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cde:	4604      	mov	r4, r0
 8005ce0:	460f      	mov	r7, r1
 8005ce2:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005ce6:	4e2e      	ldr	r6, [pc, #184]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005ce8:	f240 6101 	movw	r1, #1537	; 0x601
 8005cec:	4630      	mov	r0, r6
 8005cee:	f000 fd9f 	bl	8006830 <i2c_flag_get>
 8005cf2:	b9b0      	cbnz	r0, 8005d22 <gd32_i2c_write+0x46>
 8005cf4:	482a      	ldr	r0, [pc, #168]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005cf6:	f000 fd8c 	bl	8006812 <i2c_start_on_bus>
 8005cfa:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005cfe:	4e28      	ldr	r6, [pc, #160]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d00:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8005d04:	4630      	mov	r0, r6
 8005d06:	f000 fd93 	bl	8006830 <i2c_flag_get>
 8005d0a:	b190      	cbz	r0, 8005d32 <gd32_i2c_write+0x56>
 8005d0c:	4b25      	ldr	r3, [pc, #148]	; (8005da4 <gd32_i2c_write+0xc8>)
 8005d0e:	f06f 0201 	mvn.w	r2, #1
 8005d12:	7819      	ldrb	r1, [r3, #0]
 8005d14:	4822      	ldr	r0, [pc, #136]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d16:	f000 fd6f 	bl	80067f8 <i2c_master_addressing>
 8005d1a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005d1e:	4e20      	ldr	r6, [pc, #128]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d20:	e00c      	b.n	8005d3c <gd32_i2c_write+0x60>
 8005d22:	3d01      	subs	r5, #1
 8005d24:	d1e0      	bne.n	8005ce8 <gd32_i2c_write+0xc>
 8005d26:	f7ff ff85 	bl	8005c34 <_stop() [clone .isra.0]>
 8005d2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005d2e:	4240      	negs	r0, r0
 8005d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d32:	3d01      	subs	r5, #1
 8005d34:	d1e4      	bne.n	8005d00 <gd32_i2c_write+0x24>
 8005d36:	e7f6      	b.n	8005d26 <gd32_i2c_write+0x4a>
 8005d38:	3d01      	subs	r5, #1
 8005d3a:	d0f4      	beq.n	8005d26 <gd32_i2c_write+0x4a>
 8005d3c:	f240 5101 	movw	r1, #1281	; 0x501
 8005d40:	4630      	mov	r0, r6
 8005d42:	f000 fd75 	bl	8006830 <i2c_flag_get>
 8005d46:	2800      	cmp	r0, #0
 8005d48:	d0f6      	beq.n	8005d38 <gd32_i2c_write+0x5c>
 8005d4a:	f240 5101 	movw	r1, #1281	; 0x501
 8005d4e:	4814      	ldr	r0, [pc, #80]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d50:	f000 fd79 	bl	8006846 <i2c_flag_clear>
 8005d54:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005d58:	4e11      	ldr	r6, [pc, #68]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d5a:	f240 5107 	movw	r1, #1287	; 0x507
 8005d5e:	4630      	mov	r0, r6
 8005d60:	f000 fd66 	bl	8006830 <i2c_flag_get>
 8005d64:	2801      	cmp	r0, #1
 8005d66:	d107      	bne.n	8005d78 <gd32_i2c_write+0x9c>
 8005d68:	4e0d      	ldr	r6, [pc, #52]	; (8005da0 <gd32_i2c_write+0xc4>)
 8005d6a:	4427      	add	r7, r4
 8005d6c:	42a7      	cmp	r7, r4
 8005d6e:	d106      	bne.n	8005d7e <gd32_i2c_write+0xa2>
 8005d70:	f7ff ff60 	bl	8005c34 <_stop() [clone .isra.0]>
 8005d74:	2000      	movs	r0, #0
 8005d76:	e7da      	b.n	8005d2e <gd32_i2c_write+0x52>
 8005d78:	3d01      	subs	r5, #1
 8005d7a:	d1ee      	bne.n	8005d5a <gd32_i2c_write+0x7e>
 8005d7c:	e7d3      	b.n	8005d26 <gd32_i2c_write+0x4a>
 8005d7e:	4630      	mov	r0, r6
 8005d80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d84:	f000 fd4f 	bl	8006826 <i2c_data_transmit>
 8005d88:	f640 75ff 	movw	r5, #4095	; 0xfff
 8005d8c:	f240 5102 	movw	r1, #1282	; 0x502
 8005d90:	4630      	mov	r0, r6
 8005d92:	f000 fd4d 	bl	8006830 <i2c_flag_get>
 8005d96:	2800      	cmp	r0, #0
 8005d98:	d1e8      	bne.n	8005d6c <gd32_i2c_write+0x90>
 8005d9a:	3d01      	subs	r5, #1
 8005d9c:	d1f6      	bne.n	8005d8c <gd32_i2c_write+0xb0>
 8005d9e:	e7c2      	b.n	8005d26 <gd32_i2c_write+0x4a>
 8005da0:	40005400 	andmi	r5, r0, r0, lsl #8
 8005da4:	20004c58 	andcs	r4, r0, r8, asr ip

08005da8 <gd32_i2c_read>:
 8005da8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005dac:	4680      	mov	r8, r0
 8005dae:	460c      	mov	r4, r1
 8005db0:	f640 76ff 	movw	r6, #4095	; 0xfff
 8005db4:	4f4b      	ldr	r7, [pc, #300]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005db6:	f240 6101 	movw	r1, #1537	; 0x601
 8005dba:	4638      	mov	r0, r7
 8005dbc:	f000 fd38 	bl	8006830 <i2c_flag_get>
 8005dc0:	4605      	mov	r5, r0
 8005dc2:	bb08      	cbnz	r0, 8005e08 <gd32_i2c_read+0x60>
 8005dc4:	2c02      	cmp	r4, #2
 8005dc6:	d103      	bne.n	8005dd0 <gd32_i2c_read+0x28>
 8005dc8:	4601      	mov	r1, r0
 8005dca:	4846      	ldr	r0, [pc, #280]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005dcc:	f000 fd0b 	bl	80067e6 <i2c_ackpos_config>
 8005dd0:	4844      	ldr	r0, [pc, #272]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005dd2:	f000 fd1e 	bl	8006812 <i2c_start_on_bus>
 8005dd6:	f640 76ff 	movw	r6, #4095	; 0xfff
 8005dda:	4f42      	ldr	r7, [pc, #264]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005ddc:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8005de0:	4638      	mov	r0, r7
 8005de2:	f000 fd25 	bl	8006830 <i2c_flag_get>
 8005de6:	b1a8      	cbz	r0, 8005e14 <gd32_i2c_read+0x6c>
 8005de8:	4b3f      	ldr	r3, [pc, #252]	; (8005ee8 <gd32_i2c_read+0x140>)
 8005dea:	2201      	movs	r2, #1
 8005dec:	7819      	ldrb	r1, [r3, #0]
 8005dee:	483d      	ldr	r0, [pc, #244]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005df0:	f000 fd02 	bl	80067f8 <i2c_master_addressing>
 8005df4:	2c02      	cmp	r4, #2
 8005df6:	d803      	bhi.n	8005e00 <gd32_i2c_read+0x58>
 8005df8:	2100      	movs	r1, #0
 8005dfa:	483a      	ldr	r0, [pc, #232]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005dfc:	f000 fcea 	bl	80067d4 <i2c_ack_config>
 8005e00:	f640 76ff 	movw	r6, #4095	; 0xfff
 8005e04:	4f37      	ldr	r7, [pc, #220]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005e06:	e00a      	b.n	8005e1e <gd32_i2c_read+0x76>
 8005e08:	3e01      	subs	r6, #1
 8005e0a:	d1d4      	bne.n	8005db6 <gd32_i2c_read+0xe>
 8005e0c:	f7ff ff12 	bl	8005c34 <_stop() [clone .isra.0]>
 8005e10:	2504      	movs	r5, #4
 8005e12:	e04d      	b.n	8005eb0 <gd32_i2c_read+0x108>
 8005e14:	3e01      	subs	r6, #1
 8005e16:	d1e1      	bne.n	8005ddc <gd32_i2c_read+0x34>
 8005e18:	e7f8      	b.n	8005e0c <gd32_i2c_read+0x64>
 8005e1a:	3e01      	subs	r6, #1
 8005e1c:	d0f6      	beq.n	8005e0c <gd32_i2c_read+0x64>
 8005e1e:	f240 5101 	movw	r1, #1281	; 0x501
 8005e22:	4638      	mov	r0, r7
 8005e24:	f000 fd04 	bl	8006830 <i2c_flag_get>
 8005e28:	2800      	cmp	r0, #0
 8005e2a:	d0f6      	beq.n	8005e1a <gd32_i2c_read+0x72>
 8005e2c:	f240 5101 	movw	r1, #1281	; 0x501
 8005e30:	482c      	ldr	r0, [pc, #176]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005e32:	f000 fd08 	bl	8006846 <i2c_flag_clear>
 8005e36:	2c01      	cmp	r4, #1
 8005e38:	d102      	bne.n	8005e40 <gd32_i2c_read+0x98>
 8005e3a:	482a      	ldr	r0, [pc, #168]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005e3c:	f000 fcee 	bl	800681c <i2c_stop_on_bus>
 8005e40:	f640 77ff 	movw	r7, #4095	; 0xfff
 8005e44:	4e27      	ldr	r6, [pc, #156]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005e46:	e022      	b.n	8005e8e <gd32_i2c_read+0xe6>
 8005e48:	2c03      	cmp	r4, #3
 8005e4a:	d134      	bne.n	8005eb6 <gd32_i2c_read+0x10e>
 8005e4c:	f640 79ff 	movw	r9, #4095	; 0xfff
 8005e50:	e002      	b.n	8005e58 <gd32_i2c_read+0xb0>
 8005e52:	f1b9 0901 	subs.w	r9, r9, #1
 8005e56:	d0d9      	beq.n	8005e0c <gd32_i2c_read+0x64>
 8005e58:	f240 5102 	movw	r1, #1282	; 0x502
 8005e5c:	4630      	mov	r0, r6
 8005e5e:	f000 fce7 	bl	8006830 <i2c_flag_get>
 8005e62:	2800      	cmp	r0, #0
 8005e64:	d0f5      	beq.n	8005e52 <gd32_i2c_read+0xaa>
 8005e66:	2100      	movs	r1, #0
 8005e68:	4630      	mov	r0, r6
 8005e6a:	f000 fcb3 	bl	80067d4 <i2c_ack_config>
 8005e6e:	f240 5106 	movw	r1, #1286	; 0x506
 8005e72:	4630      	mov	r0, r6
 8005e74:	f000 fcdc 	bl	8006830 <i2c_flag_get>
 8005e78:	b138      	cbz	r0, 8005e8a <gd32_i2c_read+0xe2>
 8005e7a:	4630      	mov	r0, r6
 8005e7c:	f000 fcd5 	bl	800682a <i2c_data_receive>
 8005e80:	f640 77ff 	movw	r7, #4095	; 0xfff
 8005e84:	f808 0b01 	strb.w	r0, [r8], #1
 8005e88:	3c01      	subs	r4, #1
 8005e8a:	3f01      	subs	r7, #1
 8005e8c:	d0be      	beq.n	8005e0c <gd32_i2c_read+0x64>
 8005e8e:	2c00      	cmp	r4, #0
 8005e90:	d1da      	bne.n	8005e48 <gd32_i2c_read+0xa0>
 8005e92:	f640 73ff 	movw	r3, #4095	; 0xfff
 8005e96:	4915      	ldr	r1, [pc, #84]	; (8005eec <gd32_i2c_read+0x144>)
 8005e98:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8005e9c:	0592      	lsls	r2, r2, #22
 8005e9e:	d41d      	bmi.n	8005edc <gd32_i2c_read+0x134>
 8005ea0:	2101      	movs	r1, #1
 8005ea2:	4810      	ldr	r0, [pc, #64]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005ea4:	f000 fc96 	bl	80067d4 <i2c_ack_config>
 8005ea8:	2101      	movs	r1, #1
 8005eaa:	480e      	ldr	r0, [pc, #56]	; (8005ee4 <gd32_i2c_read+0x13c>)
 8005eac:	f000 fc9b 	bl	80067e6 <i2c_ackpos_config>
 8005eb0:	4628      	mov	r0, r5
 8005eb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005eb6:	2c02      	cmp	r4, #2
 8005eb8:	d1d9      	bne.n	8005e6e <gd32_i2c_read+0xc6>
 8005eba:	f640 79ff 	movw	r9, #4095	; 0xfff
 8005ebe:	e002      	b.n	8005ec6 <gd32_i2c_read+0x11e>
 8005ec0:	f1b9 0901 	subs.w	r9, r9, #1
 8005ec4:	d0a2      	beq.n	8005e0c <gd32_i2c_read+0x64>
 8005ec6:	f240 5102 	movw	r1, #1282	; 0x502
 8005eca:	4630      	mov	r0, r6
 8005ecc:	f000 fcb0 	bl	8006830 <i2c_flag_get>
 8005ed0:	2800      	cmp	r0, #0
 8005ed2:	d0f5      	beq.n	8005ec0 <gd32_i2c_read+0x118>
 8005ed4:	4630      	mov	r0, r6
 8005ed6:	f000 fca1 	bl	800681c <i2c_stop_on_bus>
 8005eda:	e7c8      	b.n	8005e6e <gd32_i2c_read+0xc6>
 8005edc:	3b01      	subs	r3, #1
 8005ede:	d1db      	bne.n	8005e98 <gd32_i2c_read+0xf0>
 8005ee0:	e796      	b.n	8005e10 <gd32_i2c_read+0x68>
 8005ee2:	bf00      	nop
 8005ee4:	40005400 	andmi	r5, r0, r0, lsl #8
 8005ee8:	20004c58 	andcs	r4, r0, r8, asr ip
 8005eec:	40005000 	andmi	r5, r0, r0

08005ef0 <_cs_high()>:
 8005ef0:	4b04      	ldr	r3, [pc, #16]	; (8005f04 <_cs_high()+0x14>)
 8005ef2:	781b      	ldrb	r3, [r3, #0]
 8005ef4:	b923      	cbnz	r3, 8005f00 <_cs_high()+0x10>
 8005ef6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8005efa:	4b03      	ldr	r3, [pc, #12]	; (8005f08 <_cs_high()+0x18>)
 8005efc:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 8005f00:	4770      	bx	lr
 8005f02:	bf00      	nop
 8005f04:	20004c59 	andcs	r4, r0, r9, asr ip
 8005f08:	40010000 	andmi	r0, r1, r0

08005f0c <_cs_low()>:
 8005f0c:	4b04      	ldr	r3, [pc, #16]	; (8005f20 <_cs_low()+0x14>)
 8005f0e:	781b      	ldrb	r3, [r3, #0]
 8005f10:	b923      	cbnz	r3, 8005f1c <_cs_low()+0x10>
 8005f12:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8005f16:	4b03      	ldr	r3, [pc, #12]	; (8005f24 <_cs_low()+0x18>)
 8005f18:	f8c3 2814 	str.w	r2, [r3, #2068]	; 0x814
 8005f1c:	4770      	bx	lr
 8005f1e:	bf00      	nop
 8005f20:	20004c59 	andcs	r4, r0, r9, asr ip
 8005f24:	40010000 	andmi	r0, r1, r0

08005f28 <_send_byte(unsigned char)>:
 8005f28:	4b07      	ldr	r3, [pc, #28]	; (8005f48 <_send_byte(unsigned char)+0x20>)
 8005f2a:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005f2e:	0791      	lsls	r1, r2, #30
 8005f30:	d5fb      	bpl.n	8005f2a <_send_byte(unsigned char)+0x2>
 8005f32:	f8c3 0c0c 	str.w	r0, [r3, #3084]	; 0xc0c
 8005f36:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005f3a:	07d2      	lsls	r2, r2, #31
 8005f3c:	d5fb      	bpl.n	8005f36 <_send_byte(unsigned char)+0xe>
 8005f3e:	f8d3 0c0c 	ldr.w	r0, [r3, #3084]	; 0xc0c
 8005f42:	b2c0      	uxtb	r0, r0
 8005f44:	4770      	bx	lr
 8005f46:	bf00      	nop
 8005f48:	40003000 	andmi	r3, r0, r0

08005f4c <gd32_spi_begin()>:
 8005f4c:	b510      	push	{r4, lr}
 8005f4e:	f240 6003 	movw	r0, #1539	; 0x603
 8005f52:	b088      	sub	sp, #32
 8005f54:	f7ff faae 	bl	80054b4 <rcu_periph_clock_enable>
 8005f58:	f240 6002 	movw	r0, #1538	; 0x602
 8005f5c:	f7ff faaa 	bl	80054b4 <rcu_periph_clock_enable>
 8005f60:	f240 700f 	movw	r0, #1807	; 0x70f
 8005f64:	f7ff faa6 	bl	80054b4 <rcu_periph_clock_enable>
 8005f68:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8005f6c:	f7ff faa2 	bl	80054b4 <rcu_periph_clock_enable>
 8005f70:	2338      	movs	r3, #56	; 0x38
 8005f72:	2203      	movs	r2, #3
 8005f74:	2118      	movs	r1, #24
 8005f76:	4816      	ldr	r0, [pc, #88]	; (8005fd0 <gd32_spi_begin()+0x84>)
 8005f78:	f7ff f9fa 	bl	8005370 <gpio_init>
 8005f7c:	4c15      	ldr	r4, [pc, #84]	; (8005fd4 <gd32_spi_begin()+0x88>)
 8005f7e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005f82:	2203      	movs	r2, #3
 8005f84:	2110      	movs	r1, #16
 8005f86:	4814      	ldr	r0, [pc, #80]	; (8005fd8 <gd32_spi_begin()+0x8c>)
 8005f88:	f7ff f9f2 	bl	8005370 <gpio_init>
 8005f8c:	2101      	movs	r1, #1
 8005f8e:	4813      	ldr	r0, [pc, #76]	; (8005fdc <gd32_spi_begin()+0x90>)
 8005f90:	f7ff fa4c 	bl	800542c <gpio_pin_remap_config>
 8005f94:	4620      	mov	r0, r4
 8005f96:	f7ff ffab 	bl	8005ef0 <_cs_high()>
 8005f9a:	f000 fcac 	bl	80068f6 <spi_disable>
 8005f9e:	4620      	mov	r0, r4
 8005fa0:	f000 fc64 	bl	800686c <spi_i2s_deinit>
 8005fa4:	2300      	movs	r3, #0
 8005fa6:	f44f 7282 	mov.w	r2, #260	; 0x104
 8005faa:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8005fae:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005fb2:	9204      	str	r2, [sp, #16]
 8005fb4:	2228      	movs	r2, #40	; 0x28
 8005fb6:	4620      	mov	r0, r4
 8005fb8:	a901      	add	r1, sp, #4
 8005fba:	9303      	str	r3, [sp, #12]
 8005fbc:	9306      	str	r3, [sp, #24]
 8005fbe:	9207      	str	r2, [sp, #28]
 8005fc0:	9305      	str	r3, [sp, #20]
 8005fc2:	f000 fc7b 	bl	80068bc <spi_init>
 8005fc6:	4620      	mov	r0, r4
 8005fc8:	f000 fc90 	bl	80068ec <spi_enable>
 8005fcc:	b008      	add	sp, #32
 8005fce:	bd10      	pop	{r4, pc}
 8005fd0:	40010c00 	andmi	r0, r1, r0, lsl #24
 8005fd4:	40003c00 	andmi	r3, r0, r0, lsl #24
 8005fd8:	40010800 	andmi	r0, r1, r0, lsl #16
 8005fdc:	00300400 	eorseq	r0, r0, r0, lsl #8

08005fe0 <gd32_spi_set_speed_hz(unsigned int)>:
 8005fe0:	b538      	push	{r3, r4, r5, lr}
 8005fe2:	4b19      	ldr	r3, [pc, #100]	; (8006048 <gd32_spi_set_speed_hz(unsigned int)+0x68>)
 8005fe4:	4d19      	ldr	r5, [pc, #100]	; (800604c <gd32_spi_set_speed_hz(unsigned int)+0x6c>)
 8005fe6:	fbb3 f0f0 	udiv	r0, r3, r0
 8005fea:	f8d5 4c00 	ldr.w	r4, [r5, #3072]	; 0xc00
 8005fee:	2802      	cmp	r0, #2
 8005ff0:	f024 0438 	bic.w	r4, r4, #56	; 0x38
 8005ff4:	d903      	bls.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 8005ff6:	2804      	cmp	r0, #4
 8005ff8:	d80b      	bhi.n	8006012 <gd32_spi_set_speed_hz(unsigned int)+0x32>
 8005ffa:	f044 0408 	orr.w	r4, r4, #8
 8005ffe:	4814      	ldr	r0, [pc, #80]	; (8006050 <gd32_spi_set_speed_hz(unsigned int)+0x70>)
 8006000:	f000 fc79 	bl	80068f6 <spi_disable>
 8006004:	f8c5 4c00 	str.w	r4, [r5, #3072]	; 0xc00
 8006008:	4811      	ldr	r0, [pc, #68]	; (8006050 <gd32_spi_set_speed_hz(unsigned int)+0x70>)
 800600a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800600e:	f000 bc6d 	b.w	80068ec <spi_enable>
 8006012:	2808      	cmp	r0, #8
 8006014:	d802      	bhi.n	800601c <gd32_spi_set_speed_hz(unsigned int)+0x3c>
 8006016:	f044 0410 	orr.w	r4, r4, #16
 800601a:	e7f0      	b.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 800601c:	2810      	cmp	r0, #16
 800601e:	d802      	bhi.n	8006026 <gd32_spi_set_speed_hz(unsigned int)+0x46>
 8006020:	f044 0418 	orr.w	r4, r4, #24
 8006024:	e7eb      	b.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 8006026:	2820      	cmp	r0, #32
 8006028:	d802      	bhi.n	8006030 <gd32_spi_set_speed_hz(unsigned int)+0x50>
 800602a:	f044 0420 	orr.w	r4, r4, #32
 800602e:	e7e6      	b.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 8006030:	2840      	cmp	r0, #64	; 0x40
 8006032:	d802      	bhi.n	800603a <gd32_spi_set_speed_hz(unsigned int)+0x5a>
 8006034:	f044 0428 	orr.w	r4, r4, #40	; 0x28
 8006038:	e7e1      	b.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 800603a:	2880      	cmp	r0, #128	; 0x80
 800603c:	bf94      	ite	ls
 800603e:	f044 0430 	orrls.w	r4, r4, #48	; 0x30
 8006042:	f044 0438 	orrhi.w	r4, r4, #56	; 0x38
 8006046:	e7da      	b.n	8005ffe <gd32_spi_set_speed_hz(unsigned int)+0x1e>
 8006048:	03938700 	orrseq	r8, r3, #0, 14
 800604c:	40003000 	andmi	r3, r0, r0
 8006050:	40003c00 	andmi	r3, r0, r0, lsl #24

08006054 <gd32_spi_setDataMode(unsigned char)>:
 8006054:	b570      	push	{r4, r5, r6, lr}
 8006056:	4e09      	ldr	r6, [pc, #36]	; (800607c <gd32_spi_setDataMode(unsigned char)+0x28>)
 8006058:	4d09      	ldr	r5, [pc, #36]	; (8006080 <gd32_spi_setDataMode(unsigned char)+0x2c>)
 800605a:	f8d6 3c00 	ldr.w	r3, [r6, #3072]	; 0xc00
 800605e:	f000 0403 	and.w	r4, r0, #3
 8006062:	f023 0303 	bic.w	r3, r3, #3
 8006066:	4628      	mov	r0, r5
 8006068:	431c      	orrs	r4, r3
 800606a:	f000 fc44 	bl	80068f6 <spi_disable>
 800606e:	4628      	mov	r0, r5
 8006070:	f8c6 4c00 	str.w	r4, [r6, #3072]	; 0xc00
 8006074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006078:	f000 bc38 	b.w	80068ec <spi_enable>
 800607c:	40003000 	andmi	r3, r0, r0
 8006080:	40003c00 	andmi	r3, r0, r0, lsl #24

08006084 <gd32_spi_chipSelect(unsigned char)>:
 8006084:	4b01      	ldr	r3, [pc, #4]	; (800608c <gd32_spi_chipSelect(unsigned char)+0x8>)
 8006086:	7018      	strb	r0, [r3, #0]
 8006088:	4770      	bx	lr
 800608a:	bf00      	nop
 800608c:	20004c59 	andcs	r4, r0, r9, asr ip

08006090 <gd32_spi_transfernb(char const*, char*, unsigned int)>:
 8006090:	b570      	push	{r4, r5, r6, lr}
 8006092:	4616      	mov	r6, r2
 8006094:	460c      	mov	r4, r1
 8006096:	f7ff ff39 	bl	8005f0c <_cs_low()>
 800609a:	1e45      	subs	r5, r0, #1
 800609c:	440e      	add	r6, r1
 800609e:	42b4      	cmp	r4, r6
 80060a0:	d103      	bne.n	80060aa <gd32_spi_transfernb(char const*, char*, unsigned int)+0x1a>
 80060a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80060a6:	f7ff bf23 	b.w	8005ef0 <_cs_high()>
 80060aa:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 80060ae:	f7ff ff3b 	bl	8005f28 <_send_byte(unsigned char)>
 80060b2:	f804 0b01 	strb.w	r0, [r4], #1
 80060b6:	e7f2      	b.n	800609e <gd32_spi_transfernb(char const*, char*, unsigned int)+0xe>

080060b8 <gd32_spi_writenb(char const*, unsigned int)>:
 80060b8:	b538      	push	{r3, r4, r5, lr}
 80060ba:	f7ff ff27 	bl	8005f0c <_cs_low()>
 80060be:	4604      	mov	r4, r0
 80060c0:	1845      	adds	r5, r0, r1
 80060c2:	42ac      	cmp	r4, r5
 80060c4:	d103      	bne.n	80060ce <gd32_spi_writenb(char const*, unsigned int)+0x16>
 80060c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80060ca:	f7ff bf11 	b.w	8005ef0 <_cs_high()>
 80060ce:	f814 0b01 	ldrb.w	r0, [r4], #1
 80060d2:	f7ff ff29 	bl	8005f28 <_send_byte(unsigned char)>
 80060d6:	e7f4      	b.n	80060c2 <gd32_spi_writenb(char const*, unsigned int)+0xa>

080060d8 <gd32_uart_begin>:
 80060d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060da:	461e      	mov	r6, r3
 80060dc:	4b82      	ldr	r3, [pc, #520]	; (80062e8 <gd32_uart_begin+0x210>)
 80060de:	4604      	mov	r4, r0
 80060e0:	4298      	cmp	r0, r3
 80060e2:	460f      	mov	r7, r1
 80060e4:	4615      	mov	r5, r2
 80060e6:	d060      	beq.n	80061aa <gd32_uart_begin+0xd2>
 80060e8:	d80f      	bhi.n	800610a <gd32_uart_begin+0x32>
 80060ea:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80060ee:	4298      	cmp	r0, r3
 80060f0:	d04a      	beq.n	8006188 <gd32_uart_begin+0xb0>
 80060f2:	d84c      	bhi.n	800618e <gd32_uart_begin+0xb6>
 80060f4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80060f8:	4298      	cmp	r0, r3
 80060fa:	d03e      	beq.n	800617a <gd32_uart_begin+0xa2>
 80060fc:	f240 7012 	movw	r0, #1810	; 0x712
 8006100:	f7ff f9d8 	bl	80054b4 <rcu_periph_clock_enable>
 8006104:	f240 6004 	movw	r0, #1540	; 0x604
 8006108:	e00f      	b.n	800612a <gd32_uart_begin+0x52>
 800610a:	4b78      	ldr	r3, [pc, #480]	; (80062ec <gd32_uart_begin+0x214>)
 800610c:	4298      	cmp	r0, r3
 800610e:	d006      	beq.n	800611e <gd32_uart_begin+0x46>
 8006110:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8006114:	4298      	cmp	r0, r3
 8006116:	d045      	beq.n	80061a4 <gd32_uart_begin+0xcc>
 8006118:	f641 201f 	movw	r0, #6687	; 0x1a1f
 800611c:	e047      	b.n	80061ae <gd32_uart_begin+0xd6>
 800611e:	f240 600e 	movw	r0, #1550	; 0x60e
 8006122:	f7ff f9c7 	bl	80054b4 <rcu_periph_clock_enable>
 8006126:	f240 6003 	movw	r0, #1539	; 0x603
 800612a:	f7ff f9c3 	bl	80054b4 <rcu_periph_clock_enable>
 800612e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8006132:	f7ff f9bf 	bl	80054b4 <rcu_periph_clock_enable>
 8006136:	4b6c      	ldr	r3, [pc, #432]	; (80062e8 <gd32_uart_begin+0x210>)
 8006138:	429c      	cmp	r4, r3
 800613a:	f000 80c3 	beq.w	80062c4 <gd32_uart_begin+0x1ec>
 800613e:	d83b      	bhi.n	80061b8 <gd32_uart_begin+0xe0>
 8006140:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8006144:	429c      	cmp	r4, r3
 8006146:	f000 809c 	beq.w	8006282 <gd32_uart_begin+0x1aa>
 800614a:	f200 80a7 	bhi.w	800629c <gd32_uart_begin+0x1c4>
 800614e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8006152:	429c      	cmp	r4, r3
 8006154:	f000 8088 	beq.w	8006268 <gd32_uart_begin+0x190>
 8006158:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800615c:	2203      	movs	r2, #3
 800615e:	2118      	movs	r1, #24
 8006160:	4863      	ldr	r0, [pc, #396]	; (80062f0 <gd32_uart_begin+0x218>)
 8006162:	f7ff f905 	bl	8005370 <gpio_init>
 8006166:	2104      	movs	r1, #4
 8006168:	4861      	ldr	r0, [pc, #388]	; (80062f0 <gd32_uart_begin+0x218>)
 800616a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800616e:	2203      	movs	r2, #3
 8006170:	f7ff f8fe 	bl	8005370 <gpio_init>
 8006174:	2101      	movs	r1, #1
 8006176:	485f      	ldr	r0, [pc, #380]	; (80062f4 <gd32_uart_begin+0x21c>)
 8006178:	e03b      	b.n	80061f2 <gd32_uart_begin+0x11a>
 800617a:	f240 7011 	movw	r0, #1809	; 0x711
 800617e:	f7ff f999 	bl	80054b4 <rcu_periph_clock_enable>
 8006182:	f240 6002 	movw	r0, #1538	; 0x602
 8006186:	e7d0      	b.n	800612a <gd32_uart_begin+0x52>
 8006188:	f240 7013 	movw	r0, #1811	; 0x713
 800618c:	e7b8      	b.n	8006100 <gd32_uart_begin+0x28>
 800618e:	f240 7014 	movw	r0, #1812	; 0x714
 8006192:	f7ff f98f 	bl	80054b4 <rcu_periph_clock_enable>
 8006196:	f240 6004 	movw	r0, #1540	; 0x604
 800619a:	f7ff f98b 	bl	80054b4 <rcu_periph_clock_enable>
 800619e:	f240 6005 	movw	r0, #1541	; 0x605
 80061a2:	e7c2      	b.n	800612a <gd32_uart_begin+0x52>
 80061a4:	f641 1018 	movw	r0, #6424	; 0x1918
 80061a8:	e7aa      	b.n	8006100 <gd32_uart_begin+0x28>
 80061aa:	f641 201e 	movw	r0, #6686	; 0x1a1e
 80061ae:	f7ff f981 	bl	80054b4 <rcu_periph_clock_enable>
 80061b2:	f240 6006 	movw	r0, #1542	; 0x606
 80061b6:	e7b8      	b.n	800612a <gd32_uart_begin+0x52>
 80061b8:	4b4c      	ldr	r3, [pc, #304]	; (80062ec <gd32_uart_begin+0x214>)
 80061ba:	429c      	cmp	r4, r3
 80061bc:	d00b      	beq.n	80061d6 <gd32_uart_begin+0xfe>
 80061be:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80061c2:	429c      	cmp	r4, r3
 80061c4:	d076      	beq.n	80062b4 <gd32_uart_begin+0x1dc>
 80061c6:	2302      	movs	r3, #2
 80061c8:	2203      	movs	r2, #3
 80061ca:	2118      	movs	r1, #24
 80061cc:	484a      	ldr	r0, [pc, #296]	; (80062f8 <gd32_uart_begin+0x220>)
 80061ce:	f7ff f8cf 	bl	8005370 <gpio_init>
 80061d2:	2301      	movs	r3, #1
 80061d4:	e07e      	b.n	80062d4 <gd32_uart_begin+0x1fc>
 80061d6:	2340      	movs	r3, #64	; 0x40
 80061d8:	2203      	movs	r2, #3
 80061da:	2118      	movs	r1, #24
 80061dc:	4847      	ldr	r0, [pc, #284]	; (80062fc <gd32_uart_begin+0x224>)
 80061de:	f7ff f8c7 	bl	8005370 <gpio_init>
 80061e2:	2104      	movs	r1, #4
 80061e4:	4845      	ldr	r0, [pc, #276]	; (80062fc <gd32_uart_begin+0x224>)
 80061e6:	2380      	movs	r3, #128	; 0x80
 80061e8:	2203      	movs	r2, #3
 80061ea:	f7ff f8c1 	bl	8005370 <gpio_init>
 80061ee:	2101      	movs	r1, #1
 80061f0:	2004      	movs	r0, #4
 80061f2:	f7ff f91b 	bl	800542c <gpio_pin_remap_config>
 80061f6:	4620      	mov	r0, r4
 80061f8:	f7ff fbe8 	bl	80059cc <usart_deinit>
 80061fc:	68e3      	ldr	r3, [r4, #12]
 80061fe:	4639      	mov	r1, r7
 8006200:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006204:	4620      	mov	r0, r4
 8006206:	60e3      	str	r3, [r4, #12]
 8006208:	f7ff fc42 	bl	8005a90 <usart_baudrate_set>
 800620c:	f1a5 0309 	sub.w	r3, r5, #9
 8006210:	4259      	negs	r1, r3
 8006212:	4159      	adcs	r1, r3
 8006214:	4620      	mov	r0, r4
 8006216:	0309      	lsls	r1, r1, #12
 8006218:	f7ff fc76 	bl	8005b08 <usart_word_length_set>
 800621c:	9906      	ldr	r1, [sp, #24]
 800621e:	4620      	mov	r0, r4
 8006220:	1e8a      	subs	r2, r1, #2
 8006222:	4251      	negs	r1, r2
 8006224:	4151      	adcs	r1, r2
 8006226:	0349      	lsls	r1, r1, #13
 8006228:	f7ff fc76 	bl	8005b18 <usart_stop_bit_set>
 800622c:	2e01      	cmp	r6, #1
 800622e:	d055      	beq.n	80062dc <gd32_uart_begin+0x204>
 8006230:	2e02      	cmp	r6, #2
 8006232:	d156      	bne.n	80062e2 <gd32_uart_begin+0x20a>
 8006234:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8006238:	4620      	mov	r0, r4
 800623a:	f7ff fc5d 	bl	8005af8 <usart_parity_config>
 800623e:	2100      	movs	r1, #0
 8006240:	4620      	mov	r0, r4
 8006242:	f7ff fc7d 	bl	8005b40 <usart_hardware_flow_rts_config>
 8006246:	2100      	movs	r1, #0
 8006248:	4620      	mov	r0, r4
 800624a:	f7ff fc7f 	bl	8005b4c <usart_hardware_flow_cts_config>
 800624e:	2104      	movs	r1, #4
 8006250:	4620      	mov	r0, r4
 8006252:	f7ff fc6f 	bl	8005b34 <usart_receive_config>
 8006256:	2108      	movs	r1, #8
 8006258:	4620      	mov	r0, r4
 800625a:	f7ff fc65 	bl	8005b28 <usart_transmit_config>
 800625e:	68e3      	ldr	r3, [r4, #12]
 8006260:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006264:	60e3      	str	r3, [r4, #12]
 8006266:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006268:	2304      	movs	r3, #4
 800626a:	2203      	movs	r2, #3
 800626c:	2118      	movs	r1, #24
 800626e:	4824      	ldr	r0, [pc, #144]	; (8006300 <gd32_uart_begin+0x228>)
 8006270:	f7ff f87e 	bl	8005370 <gpio_init>
 8006274:	2308      	movs	r3, #8
 8006276:	2203      	movs	r2, #3
 8006278:	2104      	movs	r1, #4
 800627a:	4821      	ldr	r0, [pc, #132]	; (8006300 <gd32_uart_begin+0x228>)
 800627c:	f7ff f878 	bl	8005370 <gpio_init>
 8006280:	e7b9      	b.n	80061f6 <gd32_uart_begin+0x11e>
 8006282:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006286:	2203      	movs	r2, #3
 8006288:	2118      	movs	r1, #24
 800628a:	4819      	ldr	r0, [pc, #100]	; (80062f0 <gd32_uart_begin+0x218>)
 800628c:	f7ff f870 	bl	8005370 <gpio_init>
 8006290:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8006294:	2203      	movs	r2, #3
 8006296:	2104      	movs	r1, #4
 8006298:	4815      	ldr	r0, [pc, #84]	; (80062f0 <gd32_uart_begin+0x218>)
 800629a:	e7ef      	b.n	800627c <gd32_uart_begin+0x1a4>
 800629c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80062a0:	2203      	movs	r2, #3
 80062a2:	2118      	movs	r1, #24
 80062a4:	4812      	ldr	r0, [pc, #72]	; (80062f0 <gd32_uart_begin+0x218>)
 80062a6:	f7ff f863 	bl	8005370 <gpio_init>
 80062aa:	2304      	movs	r3, #4
 80062ac:	2203      	movs	r2, #3
 80062ae:	4619      	mov	r1, r3
 80062b0:	4814      	ldr	r0, [pc, #80]	; (8006304 <gd32_uart_begin+0x22c>)
 80062b2:	e7e3      	b.n	800627c <gd32_uart_begin+0x1a4>
 80062b4:	2340      	movs	r3, #64	; 0x40
 80062b6:	2203      	movs	r2, #3
 80062b8:	2118      	movs	r1, #24
 80062ba:	480d      	ldr	r0, [pc, #52]	; (80062f0 <gd32_uart_begin+0x218>)
 80062bc:	f7ff f858 	bl	8005370 <gpio_init>
 80062c0:	2380      	movs	r3, #128	; 0x80
 80062c2:	e7e7      	b.n	8006294 <gd32_uart_begin+0x1bc>
 80062c4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80062c8:	2203      	movs	r2, #3
 80062ca:	2118      	movs	r1, #24
 80062cc:	480a      	ldr	r0, [pc, #40]	; (80062f8 <gd32_uart_begin+0x220>)
 80062ce:	f7ff f84f 	bl	8005370 <gpio_init>
 80062d2:	2380      	movs	r3, #128	; 0x80
 80062d4:	2203      	movs	r2, #3
 80062d6:	2104      	movs	r1, #4
 80062d8:	4807      	ldr	r0, [pc, #28]	; (80062f8 <gd32_uart_begin+0x220>)
 80062da:	e7cf      	b.n	800627c <gd32_uart_begin+0x1a4>
 80062dc:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80062e0:	e7aa      	b.n	8006238 <gd32_uart_begin+0x160>
 80062e2:	2100      	movs	r1, #0
 80062e4:	e7a8      	b.n	8006238 <gd32_uart_begin+0x160>
 80062e6:	bf00      	nop
 80062e8:	40007800 	andmi	r7, r0, r0, lsl #16
 80062ec:	40013800 	andmi	r3, r1, r0, lsl #16
 80062f0:	40011000 	andmi	r1, r1, r0
 80062f4:	00140010 	andseq	r0, r4, r0, lsl r0
 80062f8:	40011800 	andmi	r1, r1, r0, lsl #16
 80062fc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8006300:	40010800 	andmi	r0, r1, r0, lsl #16
 8006304:	40011400 	andmi	r1, r1, r0, lsl #8

08006308 <micros_init()>:
 8006308:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800630a:	2400      	movs	r4, #0
 800630c:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8006310:	4d22      	ldr	r5, [pc, #136]	; (800639c <micros_init()+0x94>)
 8006312:	f240 6013 	movw	r0, #1555	; 0x613
 8006316:	f7ff f8cd 	bl	80054b4 <rcu_periph_clock_enable>
 800631a:	4628      	mov	r0, r5
 800631c:	f7ff fa2e 	bl	800577c <timer_deinit>
 8006320:	4b1f      	ldr	r3, [pc, #124]	; (80063a0 <micros_init()+0x98>)
 8006322:	4628      	mov	r0, r5
 8006324:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8006328:	4669      	mov	r1, sp
 800632a:	9400      	str	r4, [sp, #0]
 800632c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8006330:	9602      	str	r6, [sp, #8]
 8006332:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006336:	f7ff fac7 	bl	80058c8 <timer_init>
 800633a:	4628      	mov	r0, r5
 800633c:	4621      	mov	r1, r4
 800633e:	f7ff fb38 	bl	80059b2 <timer_master_slave_mode_config>
 8006342:	4628      	mov	r0, r5
 8006344:	2107      	movs	r1, #7
 8006346:	f7ff fb2c 	bl	80059a2 <timer_slave_mode_select>
 800634a:	2120      	movs	r1, #32
 800634c:	4628      	mov	r0, r5
 800634e:	f7ff fb18 	bl	8005982 <timer_input_trigger_source_select>
 8006352:	4628      	mov	r0, r5
 8006354:	f7ff fb10 	bl	8005978 <timer_enable>
 8006358:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800635c:	f240 6014 	movw	r0, #1556	; 0x614
 8006360:	f7ff f8a8 	bl	80054b4 <rcu_periph_clock_enable>
 8006364:	4628      	mov	r0, r5
 8006366:	f7ff fa09 	bl	800577c <timer_deinit>
 800636a:	2377      	movs	r3, #119	; 0x77
 800636c:	626c      	str	r4, [r5, #36]	; 0x24
 800636e:	4669      	mov	r1, sp
 8006370:	4628      	mov	r0, r5
 8006372:	9300      	str	r3, [sp, #0]
 8006374:	f8ad 4004 	strh.w	r4, [sp, #4]
 8006378:	9602      	str	r6, [sp, #8]
 800637a:	f8ad 400c 	strh.w	r4, [sp, #12]
 800637e:	f7ff faa3 	bl	80058c8 <timer_init>
 8006382:	4621      	mov	r1, r4
 8006384:	4628      	mov	r0, r5
 8006386:	f7ff fb14 	bl	80059b2 <timer_master_slave_mode_config>
 800638a:	2120      	movs	r1, #32
 800638c:	4628      	mov	r0, r5
 800638e:	f7ff fb00 	bl	8005992 <timer_master_output_trigger_source_select>
 8006392:	4628      	mov	r0, r5
 8006394:	f7ff faf0 	bl	8005978 <timer_enable>
 8006398:	b004      	add	sp, #16
 800639a:	bd70      	pop	{r4, r5, r6, pc}
 800639c:	40014c00 	andmi	r4, r1, r0, lsl #24
 80063a0:	40014000 	andmi	r4, r1, r0

080063a4 <udelay_init()>:
 80063a4:	4a07      	ldr	r2, [pc, #28]	; (80063c4 <udelay_init()+0x20>)
 80063a6:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80063aa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80063ae:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80063b2:	2200      	movs	r2, #0
 80063b4:	4b04      	ldr	r3, [pc, #16]	; (80063c8 <udelay_init()+0x24>)
 80063b6:	605a      	str	r2, [r3, #4]
 80063b8:	681a      	ldr	r2, [r3, #0]
 80063ba:	f042 0201 	orr.w	r2, r2, #1
 80063be:	601a      	str	r2, [r3, #0]
 80063c0:	4770      	bx	lr
 80063c2:	bf00      	nop
 80063c4:	e000ed00 	and	lr, r0, r0, lsl #26
 80063c8:	e0001000 	and	r1, r0, r0

080063cc <udelay(unsigned int, unsigned int)>:
 80063cc:	2378      	movs	r3, #120	; 0x78
 80063ce:	b530      	push	{r4, r5, lr}
 80063d0:	4358      	muls	r0, r3
 80063d2:	b909      	cbnz	r1, 80063d8 <udelay(unsigned int, unsigned int)+0xc>
 80063d4:	4b08      	ldr	r3, [pc, #32]	; (80063f8 <udelay(unsigned int, unsigned int)+0x2c>)
 80063d6:	6859      	ldr	r1, [r3, #4]
 80063d8:	2300      	movs	r3, #0
 80063da:	4c07      	ldr	r4, [pc, #28]	; (80063f8 <udelay(unsigned int, unsigned int)+0x2c>)
 80063dc:	6862      	ldr	r2, [r4, #4]
 80063de:	4291      	cmp	r1, r2
 80063e0:	d0fc      	beq.n	80063dc <udelay(unsigned int, unsigned int)+0x10>
 80063e2:	bf2a      	itet	cs
 80063e4:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80063e8:	189b      	addcc	r3, r3, r2
 80063ea:	195b      	addcs	r3, r3, r5
 80063ec:	1a5b      	subs	r3, r3, r1
 80063ee:	4283      	cmp	r3, r0
 80063f0:	d300      	bcc.n	80063f4 <udelay(unsigned int, unsigned int)+0x28>
 80063f2:	bd30      	pop	{r4, r5, pc}
 80063f4:	4611      	mov	r1, r2
 80063f6:	e7f1      	b.n	80063dc <udelay(unsigned int, unsigned int)+0x10>
 80063f8:	e0001000 	and	r1, r0, r0

080063fc <emac_start(unsigned char*)>:
 80063fc:	b538      	push	{r3, r4, r5, lr}
 80063fe:	4605      	mov	r5, r0
 8006400:	f240 6002 	movw	r0, #1538	; 0x602
 8006404:	f7ff f856 	bl	80054b4 <rcu_periph_clock_enable>
 8006408:	f240 6003 	movw	r0, #1539	; 0x603
 800640c:	f7ff f852 	bl	80054b4 <rcu_periph_clock_enable>
 8006410:	f240 6004 	movw	r0, #1540	; 0x604
 8006414:	f7ff f84e 	bl	80054b4 <rcu_periph_clock_enable>
 8006418:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800641c:	f7ff f84a 	bl	80054b4 <rcu_periph_clock_enable>
 8006420:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006424:	2203      	movs	r2, #3
 8006426:	2118      	movs	r1, #24
 8006428:	4841      	ldr	r0, [pc, #260]	; (8006530 <emac_start(unsigned char*)+0x134>)
 800642a:	f7fe ffa1 	bl	8005370 <gpio_init>
 800642e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8006432:	f7ff f86f 	bl	8005514 <rcu_pll2_config>
 8006436:	201c      	movs	r0, #28
 8006438:	f7ff f916 	bl	8005668 <rcu_osci_on>
 800643c:	201c      	movs	r0, #28
 800643e:	f7ff f8a3 	bl	8005588 <rcu_osci_stab_wait>
 8006442:	2100      	movs	r1, #0
 8006444:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8006448:	f7ff f854 	bl	80054f4 <rcu_ckout0_config>
 800644c:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8006450:	f7ff f81c 	bl	800548c <gpio_ethernet_phy_select>
 8006454:	2302      	movs	r3, #2
 8006456:	2203      	movs	r2, #3
 8006458:	2104      	movs	r1, #4
 800645a:	4835      	ldr	r0, [pc, #212]	; (8006530 <emac_start(unsigned char*)+0x134>)
 800645c:	f7fe ff88 	bl	8005370 <gpio_init>
 8006460:	2304      	movs	r3, #4
 8006462:	2203      	movs	r2, #3
 8006464:	2118      	movs	r1, #24
 8006466:	4832      	ldr	r0, [pc, #200]	; (8006530 <emac_start(unsigned char*)+0x134>)
 8006468:	f7fe ff82 	bl	8005370 <gpio_init>
 800646c:	2380      	movs	r3, #128	; 0x80
 800646e:	2203      	movs	r2, #3
 8006470:	2104      	movs	r1, #4
 8006472:	482f      	ldr	r0, [pc, #188]	; (8006530 <emac_start(unsigned char*)+0x134>)
 8006474:	f7fe ff7c 	bl	8005370 <gpio_init>
 8006478:	2302      	movs	r3, #2
 800647a:	2203      	movs	r2, #3
 800647c:	2118      	movs	r1, #24
 800647e:	482d      	ldr	r0, [pc, #180]	; (8006534 <emac_start(unsigned char*)+0x138>)
 8006480:	f7fe ff76 	bl	8005370 <gpio_init>
 8006484:	2310      	movs	r3, #16
 8006486:	2203      	movs	r2, #3
 8006488:	2104      	movs	r1, #4
 800648a:	482a      	ldr	r0, [pc, #168]	; (8006534 <emac_start(unsigned char*)+0x138>)
 800648c:	f7fe ff70 	bl	8005370 <gpio_init>
 8006490:	2320      	movs	r3, #32
 8006492:	2203      	movs	r2, #3
 8006494:	2104      	movs	r1, #4
 8006496:	4827      	ldr	r0, [pc, #156]	; (8006534 <emac_start(unsigned char*)+0x138>)
 8006498:	f7fe ff6a 	bl	8005370 <gpio_init>
 800649c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80064a0:	2203      	movs	r2, #3
 80064a2:	2118      	movs	r1, #24
 80064a4:	4824      	ldr	r0, [pc, #144]	; (8006538 <emac_start(unsigned char*)+0x13c>)
 80064a6:	f7fe ff63 	bl	8005370 <gpio_init>
 80064aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80064ae:	2203      	movs	r2, #3
 80064b0:	2118      	movs	r1, #24
 80064b2:	4821      	ldr	r0, [pc, #132]	; (8006538 <emac_start(unsigned char*)+0x13c>)
 80064b4:	f7fe ff5c 	bl	8005370 <gpio_init>
 80064b8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80064bc:	2203      	movs	r2, #3
 80064be:	2118      	movs	r1, #24
 80064c0:	481d      	ldr	r0, [pc, #116]	; (8006538 <emac_start(unsigned char*)+0x13c>)
 80064c2:	f7fe ff55 	bl	8005370 <gpio_init>
 80064c6:	f240 500e 	movw	r0, #1294	; 0x50e
 80064ca:	f7fe fff3 	bl	80054b4 <rcu_periph_clock_enable>
 80064ce:	f240 500f 	movw	r0, #1295	; 0x50f
 80064d2:	f7fe ffef 	bl	80054b4 <rcu_periph_clock_enable>
 80064d6:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80064da:	f7fe ffeb 	bl	80054b4 <rcu_periph_clock_enable>
 80064de:	f7fe feaf 	bl	8005240 <enet_deinit>
 80064e2:	f7fe fb0f 	bl	8004b04 <enet_software_reset>
 80064e6:	4604      	mov	r4, r0
 80064e8:	b138      	cbz	r0, 80064fa <emac_start(unsigned char*)+0xfe>
 80064ea:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80064ee:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80064f2:	2001      	movs	r0, #1
 80064f4:	f7fe fc86 	bl	8004e04 <enet_init>
 80064f8:	4604      	mov	r4, r0
 80064fa:	4628      	mov	r0, r5
 80064fc:	f000 fa00 	bl	8006900 <mac_address_get(unsigned char*)>
 8006500:	4629      	mov	r1, r5
 8006502:	2000      	movs	r0, #0
 8006504:	f7fe fbde 	bl	8004cc4 <enet_mac_address_set>
 8006508:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 800650c:	f7fe fb0e 	bl	8004b2c <enet_descriptors_chain_init>
 8006510:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8006514:	f7fe fb0a 	bl	8004b2c <enet_descriptors_chain_init>
 8006518:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800651c:	4807      	ldr	r0, [pc, #28]	; (800653c <emac_start(unsigned char*)+0x140>)
 800651e:	f7fe fbcb 	bl	8004cb8 <enet_transmit_checksum_config>
 8006522:	f7fe fe05 	bl	8005130 <enet_enable>
 8006526:	fab4 f084 	clz	r0, r4
 800652a:	0940      	lsrs	r0, r0, #5
 800652c:	4240      	negs	r0, r0
 800652e:	bd38      	pop	{r3, r4, r5, pc}
 8006530:	40010800 	andmi	r0, r1, r0, lsl #16
 8006534:	40011000 	andmi	r1, r1, r0
 8006538:	40010c00 	andmi	r0, r1, r0, lsl #24
 800653c:	20004c48 	andcs	r4, r0, r8, asr #24

08006540 <adc_mode_config>:
 8006540:	4b06      	ldr	r3, [pc, #24]	; (800655c <adc_mode_config+0x1c>)
 8006542:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8006546:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800654a:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800654e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8006552:	4302      	orrs	r2, r0
 8006554:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8006558:	4770      	bx	lr
 800655a:	bf00      	nop
 800655c:	40012000 	andmi	r2, r1, r0

08006560 <adc_special_function_config>:
 8006560:	b510      	push	{r4, lr}
 8006562:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8006566:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800656a:	f001 0102 	and.w	r1, r1, #2
 800656e:	b17a      	cbz	r2, 8006590 <adc_special_function_config+0x30>
 8006570:	b11b      	cbz	r3, 800657a <adc_special_function_config+0x1a>
 8006572:	6843      	ldr	r3, [r0, #4]
 8006574:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006578:	6043      	str	r3, [r0, #4]
 800657a:	b11c      	cbz	r4, 8006584 <adc_special_function_config+0x24>
 800657c:	6843      	ldr	r3, [r0, #4]
 800657e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8006582:	6043      	str	r3, [r0, #4]
 8006584:	b119      	cbz	r1, 800658e <adc_special_function_config+0x2e>
 8006586:	6883      	ldr	r3, [r0, #8]
 8006588:	f043 0302 	orr.w	r3, r3, #2
 800658c:	6083      	str	r3, [r0, #8]
 800658e:	bd10      	pop	{r4, pc}
 8006590:	b11b      	cbz	r3, 800659a <adc_special_function_config+0x3a>
 8006592:	6843      	ldr	r3, [r0, #4]
 8006594:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006598:	6043      	str	r3, [r0, #4]
 800659a:	b11c      	cbz	r4, 80065a4 <adc_special_function_config+0x44>
 800659c:	6843      	ldr	r3, [r0, #4]
 800659e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80065a2:	6043      	str	r3, [r0, #4]
 80065a4:	2900      	cmp	r1, #0
 80065a6:	d0f2      	beq.n	800658e <adc_special_function_config+0x2e>
 80065a8:	6883      	ldr	r3, [r0, #8]
 80065aa:	f023 0302 	bic.w	r3, r3, #2
 80065ae:	e7ed      	b.n	800658c <adc_special_function_config+0x2c>

080065b0 <adc_data_alignment_config>:
 80065b0:	6883      	ldr	r3, [r0, #8]
 80065b2:	b119      	cbz	r1, 80065bc <adc_data_alignment_config+0xc>
 80065b4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80065b8:	6083      	str	r3, [r0, #8]
 80065ba:	4770      	bx	lr
 80065bc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80065c0:	e7fa      	b.n	80065b8 <adc_data_alignment_config+0x8>

080065c2 <adc_enable>:
 80065c2:	6883      	ldr	r3, [r0, #8]
 80065c4:	07db      	lsls	r3, r3, #31
 80065c6:	bf5e      	ittt	pl
 80065c8:	6883      	ldrpl	r3, [r0, #8]
 80065ca:	f043 0301 	orrpl.w	r3, r3, #1
 80065ce:	6083      	strpl	r3, [r0, #8]
 80065d0:	4770      	bx	lr

080065d2 <adc_calibration_enable>:
 80065d2:	6883      	ldr	r3, [r0, #8]
 80065d4:	f100 0208 	add.w	r2, r0, #8
 80065d8:	f043 0308 	orr.w	r3, r3, #8
 80065dc:	6083      	str	r3, [r0, #8]
 80065de:	6813      	ldr	r3, [r2, #0]
 80065e0:	0719      	lsls	r1, r3, #28
 80065e2:	d4fc      	bmi.n	80065de <adc_calibration_enable+0xc>
 80065e4:	6883      	ldr	r3, [r0, #8]
 80065e6:	f043 0304 	orr.w	r3, r3, #4
 80065ea:	6083      	str	r3, [r0, #8]
 80065ec:	6813      	ldr	r3, [r2, #0]
 80065ee:	075b      	lsls	r3, r3, #29
 80065f0:	d4fc      	bmi.n	80065ec <adc_calibration_enable+0x1a>
 80065f2:	4770      	bx	lr

080065f4 <adc_tempsensor_vrefint_enable>:
 80065f4:	4a03      	ldr	r2, [pc, #12]	; (8006604 <adc_tempsensor_vrefint_enable+0x10>)
 80065f6:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80065fa:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80065fe:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8006602:	4770      	bx	lr
 8006604:	40012000 	andmi	r2, r1, r0

08006608 <adc_channel_length_config>:
 8006608:	2901      	cmp	r1, #1
 800660a:	d002      	beq.n	8006612 <adc_channel_length_config+0xa>
 800660c:	2902      	cmp	r1, #2
 800660e:	d00c      	beq.n	800662a <adc_channel_length_config+0x22>
 8006610:	4770      	bx	lr
 8006612:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8006614:	3a01      	subs	r2, #1
 8006616:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800661a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800661c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800661e:	0512      	lsls	r2, r2, #20
 8006620:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8006624:	431a      	orrs	r2, r3
 8006626:	62c2      	str	r2, [r0, #44]	; 0x2c
 8006628:	4770      	bx	lr
 800662a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800662c:	3a01      	subs	r2, #1
 800662e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8006632:	6383      	str	r3, [r0, #56]	; 0x38
 8006634:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006636:	0512      	lsls	r2, r2, #20
 8006638:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 800663c:	431a      	orrs	r2, r3
 800663e:	6382      	str	r2, [r0, #56]	; 0x38
 8006640:	4770      	bx	lr

08006642 <adc_inserted_channel_config>:
 8006642:	b530      	push	{r4, r5, lr}
 8006644:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8006646:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8006648:	f3c4 5401 	ubfx	r4, r4, #20, #2
 800664c:	1a61      	subs	r1, r4, r1
 800664e:	f06f 0404 	mvn.w	r4, #4
 8006652:	4361      	muls	r1, r4
 8006654:	241f      	movs	r4, #31
 8006656:	310f      	adds	r1, #15
 8006658:	408c      	lsls	r4, r1
 800665a:	ea25 0504 	bic.w	r5, r5, r4
 800665e:	fa02 f101 	lsl.w	r1, r2, r1
 8006662:	4329      	orrs	r1, r5
 8006664:	2a09      	cmp	r2, #9
 8006666:	6381      	str	r1, [r0, #56]	; 0x38
 8006668:	d80b      	bhi.n	8006682 <adc_inserted_channel_config+0x40>
 800666a:	2407      	movs	r4, #7
 800666c:	6901      	ldr	r1, [r0, #16]
 800666e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8006672:	4094      	lsls	r4, r2
 8006674:	ea21 0104 	bic.w	r1, r1, r4
 8006678:	fa03 f202 	lsl.w	r2, r3, r2
 800667c:	430a      	orrs	r2, r1
 800667e:	6102      	str	r2, [r0, #16]
 8006680:	bd30      	pop	{r4, r5, pc}
 8006682:	2a11      	cmp	r2, #17
 8006684:	d8fc      	bhi.n	8006680 <adc_inserted_channel_config+0x3e>
 8006686:	2407      	movs	r4, #7
 8006688:	3a0a      	subs	r2, #10
 800668a:	68c1      	ldr	r1, [r0, #12]
 800668c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8006690:	4094      	lsls	r4, r2
 8006692:	ea21 0104 	bic.w	r1, r1, r4
 8006696:	4093      	lsls	r3, r2
 8006698:	430b      	orrs	r3, r1
 800669a:	60c3      	str	r3, [r0, #12]
 800669c:	e7f0      	b.n	8006680 <adc_inserted_channel_config+0x3e>

0800669e <adc_external_trigger_source_config>:
 800669e:	2901      	cmp	r1, #1
 80066a0:	d002      	beq.n	80066a8 <adc_external_trigger_source_config+0xa>
 80066a2:	2902      	cmp	r1, #2
 80066a4:	d008      	beq.n	80066b8 <adc_external_trigger_source_config+0x1a>
 80066a6:	4770      	bx	lr
 80066a8:	6883      	ldr	r3, [r0, #8]
 80066aa:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80066ae:	6083      	str	r3, [r0, #8]
 80066b0:	6883      	ldr	r3, [r0, #8]
 80066b2:	4313      	orrs	r3, r2
 80066b4:	6083      	str	r3, [r0, #8]
 80066b6:	4770      	bx	lr
 80066b8:	6883      	ldr	r3, [r0, #8]
 80066ba:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80066be:	e7f6      	b.n	80066ae <adc_external_trigger_source_config+0x10>

080066c0 <adc_external_trigger_config>:
 80066c0:	f001 0301 	and.w	r3, r1, #1
 80066c4:	f001 0102 	and.w	r1, r1, #2
 80066c8:	b152      	cbz	r2, 80066e0 <adc_external_trigger_config+0x20>
 80066ca:	b11b      	cbz	r3, 80066d4 <adc_external_trigger_config+0x14>
 80066cc:	6883      	ldr	r3, [r0, #8]
 80066ce:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80066d2:	6083      	str	r3, [r0, #8]
 80066d4:	b119      	cbz	r1, 80066de <adc_external_trigger_config+0x1e>
 80066d6:	6883      	ldr	r3, [r0, #8]
 80066d8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80066dc:	6083      	str	r3, [r0, #8]
 80066de:	4770      	bx	lr
 80066e0:	b11b      	cbz	r3, 80066ea <adc_external_trigger_config+0x2a>
 80066e2:	6883      	ldr	r3, [r0, #8]
 80066e4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80066e8:	6083      	str	r3, [r0, #8]
 80066ea:	2900      	cmp	r1, #0
 80066ec:	d0f7      	beq.n	80066de <adc_external_trigger_config+0x1e>
 80066ee:	6883      	ldr	r3, [r0, #8]
 80066f0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80066f4:	e7f2      	b.n	80066dc <adc_external_trigger_config+0x1c>

080066f6 <adc_software_trigger_enable>:
 80066f6:	07ca      	lsls	r2, r1, #31
 80066f8:	bf42      	ittt	mi
 80066fa:	6883      	ldrmi	r3, [r0, #8]
 80066fc:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8006700:	6083      	strmi	r3, [r0, #8]
 8006702:	078b      	lsls	r3, r1, #30
 8006704:	bf42      	ittt	mi
 8006706:	6883      	ldrmi	r3, [r0, #8]
 8006708:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 800670c:	6083      	strmi	r3, [r0, #8]
 800670e:	4770      	bx	lr

08006710 <i2c_clock_config>:
 8006710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006712:	4605      	mov	r5, r0
 8006714:	2002      	movs	r0, #2
 8006716:	460c      	mov	r4, r1
 8006718:	4617      	mov	r7, r2
 800671a:	f7fe ffa7 	bl	800566c <rcu_clock_freq_get>
 800671e:	4603      	mov	r3, r0
 8006720:	4828      	ldr	r0, [pc, #160]	; (80067c4 <i2c_clock_config+0xb4>)
 8006722:	4a29      	ldr	r2, [pc, #164]	; (80067c8 <i2c_clock_config+0xb8>)
 8006724:	fbb3 f0f0 	udiv	r0, r3, r0
 8006728:	4293      	cmp	r3, r2
 800672a:	bf94      	ite	ls
 800672c:	4601      	movls	r1, r0
 800672e:	213f      	movhi	r1, #63	; 0x3f
 8006730:	686e      	ldr	r6, [r5, #4]
 8006732:	4a26      	ldr	r2, [pc, #152]	; (80067cc <i2c_clock_config+0xbc>)
 8006734:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8006738:	430e      	orrs	r6, r1
 800673a:	4294      	cmp	r4, r2
 800673c:	606e      	str	r6, [r5, #4]
 800673e:	d816      	bhi.n	800676e <i2c_clock_config+0x5e>
 8006740:	3001      	adds	r0, #1
 8006742:	283e      	cmp	r0, #62	; 0x3e
 8006744:	d90d      	bls.n	8006762 <i2c_clock_config+0x52>
 8006746:	223f      	movs	r2, #63	; 0x3f
 8006748:	622a      	str	r2, [r5, #32]
 800674a:	0064      	lsls	r4, r4, #1
 800674c:	fbb3 f4f4 	udiv	r4, r3, r4
 8006750:	2c04      	cmp	r4, #4
 8006752:	bf38      	it	cc
 8006754:	2404      	movcc	r4, #4
 8006756:	69ea      	ldr	r2, [r5, #28]
 8006758:	f3c4 040b 	ubfx	r4, r4, #0, #12
 800675c:	4314      	orrs	r4, r2
 800675e:	61ec      	str	r4, [r5, #28]
 8006760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006762:	2802      	cmp	r0, #2
 8006764:	d801      	bhi.n	800676a <i2c_clock_config+0x5a>
 8006766:	2202      	movs	r2, #2
 8006768:	e7ee      	b.n	8006748 <i2c_clock_config+0x38>
 800676a:	6228      	str	r0, [r5, #32]
 800676c:	e7ed      	b.n	800674a <i2c_clock_config+0x3a>
 800676e:	4a18      	ldr	r2, [pc, #96]	; (80067d0 <i2c_clock_config+0xc0>)
 8006770:	4294      	cmp	r4, r2
 8006772:	d8f5      	bhi.n	8006760 <i2c_clock_config+0x50>
 8006774:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8006778:	4351      	muls	r1, r2
 800677a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800677e:	fbb1 f1f2 	udiv	r1, r1, r2
 8006782:	3101      	adds	r1, #1
 8006784:	6229      	str	r1, [r5, #32]
 8006786:	b9a7      	cbnz	r7, 80067b2 <i2c_clock_config+0xa2>
 8006788:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800678c:	fbb3 f4f4 	udiv	r4, r3, r4
 8006790:	69eb      	ldr	r3, [r5, #28]
 8006792:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006796:	61eb      	str	r3, [r5, #28]
 8006798:	f3c4 030b 	ubfx	r3, r4, #0, #12
 800679c:	b90b      	cbnz	r3, 80067a2 <i2c_clock_config+0x92>
 800679e:	f044 0401 	orr.w	r4, r4, #1
 80067a2:	69eb      	ldr	r3, [r5, #28]
 80067a4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80067a8:	61eb      	str	r3, [r5, #28]
 80067aa:	69eb      	ldr	r3, [r5, #28]
 80067ac:	4323      	orrs	r3, r4
 80067ae:	61eb      	str	r3, [r5, #28]
 80067b0:	e7d6      	b.n	8006760 <i2c_clock_config+0x50>
 80067b2:	2219      	movs	r2, #25
 80067b4:	4354      	muls	r4, r2
 80067b6:	fbb3 f4f4 	udiv	r4, r3, r4
 80067ba:	69eb      	ldr	r3, [r5, #28]
 80067bc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80067c0:	e7e9      	b.n	8006796 <i2c_clock_config+0x86>
 80067c2:	bf00      	nop
 80067c4:	000f4240 	andeq	r4, pc, r0, asr #4
 80067c8:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80067cc:	000186a0 	andeq	r8, r1, r0, lsr #13
 80067d0:	00061a80 	andeq	r1, r6, r0, lsl #21

080067d4 <i2c_ack_config>:
 80067d4:	6803      	ldr	r3, [r0, #0]
 80067d6:	2901      	cmp	r1, #1
 80067d8:	bf0c      	ite	eq
 80067da:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80067de:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80067e2:	6003      	str	r3, [r0, #0]
 80067e4:	4770      	bx	lr

080067e6 <i2c_ackpos_config>:
 80067e6:	6803      	ldr	r3, [r0, #0]
 80067e8:	b919      	cbnz	r1, 80067f2 <i2c_ackpos_config+0xc>
 80067ea:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80067ee:	6003      	str	r3, [r0, #0]
 80067f0:	4770      	bx	lr
 80067f2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80067f6:	e7fa      	b.n	80067ee <i2c_ackpos_config+0x8>

080067f8 <i2c_master_addressing>:
 80067f8:	3202      	adds	r2, #2
 80067fa:	bf0c      	ite	eq
 80067fc:	f021 0101 	biceq.w	r1, r1, #1
 8006800:	f041 0101 	orrne.w	r1, r1, #1
 8006804:	6101      	str	r1, [r0, #16]
 8006806:	4770      	bx	lr

08006808 <i2c_enable>:
 8006808:	6803      	ldr	r3, [r0, #0]
 800680a:	f043 0301 	orr.w	r3, r3, #1
 800680e:	6003      	str	r3, [r0, #0]
 8006810:	4770      	bx	lr

08006812 <i2c_start_on_bus>:
 8006812:	6803      	ldr	r3, [r0, #0]
 8006814:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006818:	6003      	str	r3, [r0, #0]
 800681a:	4770      	bx	lr

0800681c <i2c_stop_on_bus>:
 800681c:	6803      	ldr	r3, [r0, #0]
 800681e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006822:	6003      	str	r3, [r0, #0]
 8006824:	4770      	bx	lr

08006826 <i2c_data_transmit>:
 8006826:	6101      	str	r1, [r0, #16]
 8006828:	4770      	bx	lr

0800682a <i2c_data_receive>:
 800682a:	6900      	ldr	r0, [r0, #16]
 800682c:	b2c0      	uxtb	r0, r0
 800682e:	4770      	bx	lr

08006830 <i2c_flag_get>:
 8006830:	098b      	lsrs	r3, r1, #6
 8006832:	581a      	ldr	r2, [r3, r0]
 8006834:	2301      	movs	r3, #1
 8006836:	f001 011f 	and.w	r1, r1, #31
 800683a:	408b      	lsls	r3, r1
 800683c:	4213      	tst	r3, r2
 800683e:	bf14      	ite	ne
 8006840:	2001      	movne	r0, #1
 8006842:	2000      	moveq	r0, #0
 8006844:	4770      	bx	lr

08006846 <i2c_flag_clear>:
 8006846:	f240 5301 	movw	r3, #1281	; 0x501
 800684a:	4299      	cmp	r1, r3
 800684c:	b510      	push	{r4, lr}
 800684e:	d102      	bne.n	8006856 <i2c_flag_clear+0x10>
 8006850:	6943      	ldr	r3, [r0, #20]
 8006852:	6983      	ldr	r3, [r0, #24]
 8006854:	bd10      	pop	{r4, pc}
 8006856:	2201      	movs	r2, #1
 8006858:	098c      	lsrs	r4, r1, #6
 800685a:	5823      	ldr	r3, [r4, r0]
 800685c:	f001 011f 	and.w	r1, r1, #31
 8006860:	408a      	lsls	r2, r1
 8006862:	ea23 0302 	bic.w	r3, r3, r2
 8006866:	5023      	str	r3, [r4, r0]
 8006868:	e7f4      	b.n	8006854 <i2c_flag_clear+0xe>
	...

0800686c <spi_i2s_deinit>:
 800686c:	b508      	push	{r3, lr}
 800686e:	4b12      	ldr	r3, [pc, #72]	; (80068b8 <spi_i2s_deinit+0x4c>)
 8006870:	4298      	cmp	r0, r3
 8006872:	d018      	beq.n	80068a6 <spi_i2s_deinit+0x3a>
 8006874:	f503 4374 	add.w	r3, r3, #62464	; 0xf400
 8006878:	4298      	cmp	r0, r3
 800687a:	d00a      	beq.n	8006892 <spi_i2s_deinit+0x26>
 800687c:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
 8006880:	4298      	cmp	r0, r3
 8006882:	d117      	bne.n	80068b4 <spi_i2s_deinit+0x48>
 8006884:	f240 400e 	movw	r0, #1038	; 0x40e
 8006888:	f7fe fe2f 	bl	80054ea <rcu_periph_reset_enable>
 800688c:	f240 400e 	movw	r0, #1038	; 0x40e
 8006890:	e005      	b.n	800689e <spi_i2s_deinit+0x32>
 8006892:	f44f 7043 	mov.w	r0, #780	; 0x30c
 8006896:	f7fe fe28 	bl	80054ea <rcu_periph_reset_enable>
 800689a:	f44f 7043 	mov.w	r0, #780	; 0x30c
 800689e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80068a2:	f7fe be24 	b.w	80054ee <rcu_periph_reset_disable>
 80068a6:	f240 400f 	movw	r0, #1039	; 0x40f
 80068aa:	f7fe fe1e 	bl	80054ea <rcu_periph_reset_enable>
 80068ae:	f240 400f 	movw	r0, #1039	; 0x40f
 80068b2:	e7f4      	b.n	800689e <spi_i2s_deinit+0x32>
 80068b4:	bd08      	pop	{r3, pc}
 80068b6:	bf00      	nop
 80068b8:	40003c00 	andmi	r3, r0, r0, lsl #24

080068bc <spi_init>:
 80068bc:	b510      	push	{r4, lr}
 80068be:	e9d1 3400 	ldrd	r3, r4, [r1]
 80068c2:	4323      	orrs	r3, r4
 80068c4:	688c      	ldr	r4, [r1, #8]
 80068c6:	6802      	ldr	r2, [r0, #0]
 80068c8:	4323      	orrs	r3, r4
 80068ca:	68cc      	ldr	r4, [r1, #12]
 80068cc:	f402 5241 	and.w	r2, r2, #12352	; 0x3040
 80068d0:	4323      	orrs	r3, r4
 80068d2:	690c      	ldr	r4, [r1, #16]
 80068d4:	4323      	orrs	r3, r4
 80068d6:	694c      	ldr	r4, [r1, #20]
 80068d8:	6989      	ldr	r1, [r1, #24]
 80068da:	4323      	orrs	r3, r4
 80068dc:	430b      	orrs	r3, r1
 80068de:	4313      	orrs	r3, r2
 80068e0:	6003      	str	r3, [r0, #0]
 80068e2:	69c3      	ldr	r3, [r0, #28]
 80068e4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80068e8:	61c3      	str	r3, [r0, #28]
 80068ea:	bd10      	pop	{r4, pc}

080068ec <spi_enable>:
 80068ec:	6803      	ldr	r3, [r0, #0]
 80068ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80068f2:	6003      	str	r3, [r0, #0]
 80068f4:	4770      	bx	lr

080068f6 <spi_disable>:
 80068f6:	6803      	ldr	r3, [r0, #0]
 80068f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80068fc:	6003      	str	r3, [r0, #0]
 80068fe:	4770      	bx	lr

08006900 <mac_address_get(unsigned char*)>:
 8006900:	2102      	movs	r1, #2
 8006902:	4a07      	ldr	r2, [pc, #28]	; (8006920 <mac_address_get(unsigned char*)+0x20>)
 8006904:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8006908:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 800690c:	7001      	strb	r1, [r0, #0]
 800690e:	7042      	strb	r2, [r0, #1]
 8006910:	0e1a      	lsrs	r2, r3, #24
 8006912:	7082      	strb	r2, [r0, #2]
 8006914:	0c1a      	lsrs	r2, r3, #16
 8006916:	70c2      	strb	r2, [r0, #3]
 8006918:	0a1a      	lsrs	r2, r3, #8
 800691a:	7102      	strb	r2, [r0, #4]
 800691c:	7143      	strb	r3, [r0, #5]
 800691e:	4770      	bx	lr
 8006920:	1ffff000 	svcne	0x00fff000

Disassembly of section .rodata:

08006924 <SOFTWARE_VERSION-0x59>:
	...
 800692c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8006930:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8006934:	00000000 	andeq	r0, r0, r0
 8006938:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 800693c:	333a3431 	teqcc	sl, #822083584	; 0x31000000
 8006940:	34353a37 	ldrtcc	r3, [r5], #-2615	; 0xfffff5c9
 8006944:	6e614a00 	vmulvs.f32	s9, s2, s0
 8006948:	20372020 	eorscs	r2, r7, r0, lsr #32
 800694c:	33323032 	teqcc	r2, #50	; 0x32
 8006950:	6f6f4200 	svcvs	0x006f4200
 8006954:	616f6c74 	smcvs	63172	; 0xf6c4
 8006958:	20726564 	rsbscs	r6, r2, r4, ror #10
 800695c:	50544654 	subspl	r4, r4, r4, asr r6
 8006960:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8006964:	00726576 	rsbseq	r6, r2, r6, ror r5
 8006968:	746f6f42 	strbtvc	r6, [pc], #-3906	; 8006970 <_etext+0x4c>
 800696c:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 8006970:	54207265 	strtpl	r7, [r0], #-613	; 0xfffffd9b
 8006974:	20505446 	subscs	r5, r0, r6, asr #8
 8006978:	72767253 	rsbsvc	r7, r6, #805306373	; 0x30000005
	...

0800697d <SOFTWARE_VERSION>:
 800697d:	00332e31 	eorseq	r2, r3, r1, lsr lr
 8006981:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8006985:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8006989:	61747320 	cmnvs	r4, r0, lsr #6
 800698d:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8006991:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8006995:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8006999:	252f6425 	strcs	r6, [pc, #-1061]!	; 800657c <adc_special_function_config+0x1c>
 800699d:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80069a1:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 80069a5:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
 80069a9:	68732074 	ldmdavs	r3!, {r2, r4, r5, r6, sp}^
 80069ad:	6f647475 	svcvs	0x00647475
 80069b1:	44006e77 	strmi	r6, [r0], #-3703	; 0xfffff189
 80069b5:	20504348 	subscs	r4, r0, r8, asr #6
 80069b9:	656e6572 	strbvs	r6, [lr, #-1394]!	; 0xfffffa8e
 80069bd:	676e6977 			; <UNDEFINED> instruction: 0x676e6977
 80069c1:	746f4700 	strbtvc	r4, [pc], #-1792	; 80069c9 <SOFTWARE_VERSION+0x4c>
 80069c5:	00504920 	subseq	r4, r0, r0, lsr #18
 80069c9:	50434844 	subpl	r4, r3, r4, asr #16
 80069cd:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80069d1:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80069d5:	48440067 	stmdami	r4, {r0, r1, r2, r5, r6}^
 80069d9:	45205043 	strmi	r5, [r0, #-67]!	; 0xffffffbd
 80069dd:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80069e1:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80069e5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80069e9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80069ed:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80069f1:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80069f5:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 80069f9:	6425000a 	strtvs	r0, [r5], #-10
 80069fd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8006a01:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8006a05:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 8006a09:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8006a0d:	000a6425 	andeq	r6, sl, r5, lsr #8
 8006a11:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8006a15:	0a73253a 	beq	9ccff05 <__exidx_end+0x1cc884d>
 8006a19:	72657600 	rsbvc	r7, r5, #0, 12
 8006a1d:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8006a21:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 8006a25:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 8006a29:	203a656d 	eorscs	r6, sl, sp, ror #10
 8006a2d:	0a737525 	beq	9ce3ec9 <__exidx_end+0x1cdc811>
 8006a31:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
 8006a35:	20657461 	rsbcs	r7, r5, r1, ror #8
 8006a39:	50544654 	subspl	r4, r4, r4, asr r6
 8006a3d:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8006a41:	00726576 	rsbseq	r6, r2, r6, ror r5
 8006a45:	50544654 	subspl	r4, r4, r4, asr r6
 8006a49:	006e4f20 	rsbeq	r4, lr, r0, lsr #30
 8006a4d:	6f727245 	svcvs	0x00727245
 8006a51:	54203a72 	strtpl	r3, [r0], #-2674	; 0xfffff58e
 8006a55:	00505446 	subseq	r5, r0, r6, asr #8
 8006a59:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
 8006a5d:	54206574 	strtpl	r6, [r0], #-1396	; 0xfffffa8c
 8006a61:	20505446 	subscs	r5, r0, r6, asr #8
 8006a65:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8006a69:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
 8006a6d:	20505446 	subscs	r5, r0, r6, asr #8
 8006a71:	0066664f 	rsbeq	r6, r6, pc, asr #12
 8006a75:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8006a79:	52450023 	subpl	r0, r5, #35	; 0x23
 8006a7d:	23524f52 	cmpcs	r2, #328	; 0x148
 8006a81:	45000a3f 	strmi	r0, [r0, #-2623]	; 0xfffff5c1
 8006a85:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8006a89:	000a2123 	andeq	r2, sl, r3, lsr #2
 8006a8d:	6f626572 	svcvs	0x00626572
 8006a91:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8006a95:	73696c00 	cmnvc	r9, #0, 24
 8006a99:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8006a9d:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8006aa1:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8006aa5:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8006aa9:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8006aad:	6f697372 	svcvs	0x00697372
 8006ab1:	6600236e 	strvs	r2, [r0], -lr, ror #6
 8006ab5:	6f746361 	svcvs	0x00746361
 8006ab9:	23237972 			; <UNDEFINED> instruction: 0x23237972
	...

08006abe <s_Node>:
 8006abe:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8006ac2:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8006ace:	41730000 	cmnmi	r3, r0
 8006ad2:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8006ad6:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8006ae2:	2043534f 	subcs	r5, r3, pc, asr #6
 8006ae6:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8006aea:	00007265 	andeq	r7, r0, r5, ror #4
 8006aee:	00000000 	andeq	r0, r0, r0
 8006af2:	544c0000 	strbpl	r0, [ip], #-0
 8006af6:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8006b06:	2043534f 	subcs	r5, r3, pc, asr #6
 8006b0a:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8006b0e:	0000746e 	andeq	r7, r0, lr, ror #8
 8006b12:	00000000 	andeq	r0, r0, r0
 8006b16:	44520000 	ldrbmi	r0, [r2], #-0
 8006b1a:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8006b1e:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8006b22:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8006b26:	0000796c 	andeq	r7, r0, ip, ror #18
 8006b2a:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8006b2e:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8006b3a:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8006b3e:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8006b4e:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8006b5e:	6f420000 	svcvs	0x00420000
 8006b62:	6f6c746f 	svcvs	0x006c746f
 8006b66:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8006b6a:	54465420 	strbpl	r5, [r6], #-1056	; 0xfffffbe0
 8006b6e:	00000050 	andeq	r0, r0, r0, asr r0

08006b72 <s_Output>:
 8006b72:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8006b7e:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8006b8a:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8006b8e:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8006b92:	00000000 	andeq	r0, r0, r0
 8006b96:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8006b9a:	0000006c 	andeq	r0, r0, ip, rrx
 8006b9e:	00000000 	andeq	r0, r0, r0
 8006ba2:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8006ba6:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8006baa:	00000000 	andeq	r0, r0, r0
 8006bae:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8006bba:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8006bbe:	00006769 	andeq	r6, r0, r9, ror #14
 8006bc2:	00000000 	andeq	r0, r0, r0
 8006bc6:	70657453 	rsbvc	r7, r5, r3, asr r4
 8006bca:	00726570 	rsbseq	r6, r2, r0, ror r5
 8006bce:	00000000 	andeq	r0, r0, r0
 8006bd2:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8006bd6:	00007265 	andeq	r7, r0, r5, ror #4
 8006bda:	00000000 	andeq	r0, r0, r0
 8006bde:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8006be2:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8006be6:	00000000 	andeq	r0, r0, r0
 8006bea:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8006bee:	00006c61 	andeq	r6, r0, r1, ror #24
 8006bf2:	00000000 	andeq	r0, r0, r0
 8006bf6:	20424752 	subcs	r4, r2, r2, asr r7
 8006bfa:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8006bfe:	0000006c 	andeq	r0, r0, ip, rrx
	...

08006c04 <RemoteConfig::s_GET>:
 8006c04:	0800190d 	stmdaeq	r0, {r0, r2, r3, r8, fp, ip}
 8006c08:	00000000 	andeq	r0, r0, r0
 8006c0c:	08006a8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, sp, lr}
 8006c10:	00000008 	andeq	r0, r0, r8
 8006c14:	080012f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip}
 8006c18:	00000000 	andeq	r0, r0, r0
 8006c1c:	08006a96 	stmdaeq	r0, {r1, r2, r4, r7, r9, fp, sp, lr}
 8006c20:	00000005 	andeq	r0, r0, r5
 8006c24:	080012f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip}
 8006c28:	00000000 	andeq	r0, r0, r0
 8006c2c:	08006a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, sp, lr}
 8006c30:	00000006 	andeq	r0, r0, r6
 8006c34:	08001451 	stmdaeq	r0, {r0, r4, r6, sl, ip}
 8006c38:	00000000 	andeq	r0, r0, r0
 8006c3c:	08006aa3 	stmdaeq	r0, {r0, r1, r5, r7, r9, fp, sp, lr}
 8006c40:	00000007 	andeq	r0, r0, r7
 8006c44:	08001411 	stmdaeq	r0, {r0, r4, sl, ip}
 8006c48:	00000000 	andeq	r0, r0, r0
 8006c4c:	08006aab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r9, fp, sp, lr}
 8006c50:	00000008 	andeq	r0, r0, r8
 8006c54:	080013c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, ip}
 8006c58:	00000000 	andeq	r0, r0, r0
 8006c5c:	08006a75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, fp, sp, lr}
 8006c60:	00000005 	andeq	r0, r0, r5
 8006c64:	08001885 	stmdaeq	r0, {r0, r2, r7, fp, ip}
 8006c68:	00000000 	andeq	r0, r0, r0
 8006c6c:	08006ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp, sp, lr}
 8006c70:	00000009 	andeq	r0, r0, r9
 8006c74:	6f626552 	svcvs	0x00626552
 8006c78:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8006c7c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8006c80:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8006c84:	6f6f6265 	svcvs	0x006f6265
 8006c88:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8006c8c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8006c90:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8006c94:	6e652050 	mcrvs	0, 3, r2, cr5, cr0, {2}
 8006c98:	0a646564 	beq	9920230 <__exidx_end+0x1918b78>
 8006c9c:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8006ca0:	6e452050 	mcrvs	0, 2, r2, cr5, cr0, {2}
 8006ca4:	00646564 	rsbeq	r6, r4, r4, ror #10
 8006ca8:	50544654 	subspl	r4, r4, r4, asr r6
 8006cac:	61747320 	cmnvs	r4, r0, lsr #6
 8006cb0:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 8006cb4:	4654000a 	ldrbmi	r0, [r4], -sl
 8006cb8:	53205054 			; <UNDEFINED> instruction: 0x53205054
 8006cbc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8006cc0:	 	strvs	r6, [r0, -r5, ror #8]

08006cc3 <tftpfileserver::FILE_NAME>:
 8006cc3:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8006cc7:	37303266 	ldrcc	r3, [r0, -r6, ror #4]!
 8006ccb:	6e69622e 	cdpvs	2, 6, cr6, cr9, cr14, {1}
	...

08006cd0 <vtable for TFTPFileServer>:
	...
 8006cd8:	080019c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, ip}
 8006cdc:	080019d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, fp, ip}
 8006ce0:	080019b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, fp, ip}
 8006ce4:	08001a79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, ip}
 8006ce8:	08001a45 	stmdaeq	r0, {r0, r2, r6, r9, fp, ip}
 8006cec:	080019b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip}
 8006cf0:	080019eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r8, fp, ip}
 8006cf4:	080019b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, ip}
 8006cf8:	6f727265 	svcvs	0x00727265
 8006cfc:	66203a72 			; <UNDEFINED> instruction: 0x66203a72
 8006d00:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
 8006d04:	7a697320 	bvc	9a6398c <__exidx_end+0x1a5c2d4>
 8006d08:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 8006d0c:	25203e20 	strcs	r3, [r0, #-3616]!	; 0xfffff1e0
 8006d10:	57000a64 	strpl	r0, [r0, -r4, ror #20]
 8006d14:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8006d18:	72696620 	rsbvc	r6, r9, #32, 12	; 0x2000000
 8006d1c:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8006d20:	72450065 	subvc	r0, r5, #101	; 0x65
 8006d24:	00657361 	rsbeq	r7, r5, r1, ror #6
 8006d28:	6f727265 	svcvs	0x00727265
 8006d2c:	66203a72 			; <UNDEFINED> instruction: 0x66203a72
 8006d30:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
 8006d34:	61726520 	cmnvs	r2, r0, lsr #10
 8006d38:	57006573 	smlsdxpl	r0, r3, r5, r6
 8006d3c:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8006d40:	6500676e 	strvs	r6, [r0, #-1902]	; 0xfffff892
 8006d44:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8006d48:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8006d4c:	20687361 	rsbcs	r7, r8, r1, ror #6
 8006d50:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8006d54:	6f440065 	svcvs	0x00440065
 8006d58:	4600656e 	strmi	r6, [r0], -lr, ror #10
 8006d5c:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
 8006d60:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8006d64:	74736e49 	ldrbtvc	r6, [r3], #-3657	; 0xfffff1b7
 8006d68:	3a6c6c61 	bcc	9b21ef4 <__exidx_end+0x1b1a83c>
 8006d6c:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 8006d70:	63657320 	cmnvs	r5, #32, 6	; 0x80000000
 8006d74:	20726f74 	rsbscs	r6, r2, r4, ror pc
 8006d78:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 8006d7c:	2c642520 	cfstr64cs	mvdx2, [r4], #-128	; 0xffffff80
 8006d80:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8006d84:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
 8006d88:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
 8006d8c:	426b2064 	rsbmi	r2, fp, #100	; 0x64
 8006d90:	00000a5d 	andeq	r0, r0, sp, asr sl

08006d94 <s_aStorSize>:
 8006d94:	00000060 	andeq	r0, r0, r0, rrx
 8006d98:	00000090 	muleq	r0, r0, r0
 8006d9c:	00000020 	andeq	r0, r0, r0, lsr #32
 8006da0:	00000040 	andeq	r0, r0, r0, asr #32
 8006da4:	00000060 	andeq	r0, r0, r0, rrx
 8006da8:	00000040 	andeq	r0, r0, r0, asr #32
 8006dac:	00000020 	andeq	r0, r0, r0, lsr #32
 8006db0:	00000020 	andeq	r0, r0, r0, lsr #32
 8006db4:	000001e0 	andeq	r0, r0, r0, ror #3
 8006db8:	00000040 	andeq	r0, r0, r0, asr #32
 8006dbc:	00000020 	andeq	r0, r0, r0, lsr #32
 8006dc0:	00000060 	andeq	r0, r0, r0, rrx
 8006dc4:	00000030 	andeq	r0, r0, r0, lsr r0
 8006dc8:	00000020 	andeq	r0, r0, r0, lsr #32
 8006dcc:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8006dd0:	00000030 	andeq	r0, r0, r0, lsr r0
 8006dd4:	00000040 	andeq	r0, r0, r0, asr #32
 8006dd8:	00000020 	andeq	r0, r0, r0, lsr #32
 8006ddc:	00000060 	andeq	r0, r0, r0, rrx
 8006de0:	00000020 	andeq	r0, r0, r0, lsr #32
 8006de4:	00000400 	andeq	r0, r0, r0, lsl #8
 8006de8:	00000020 	andeq	r0, r0, r0, lsr #32
 8006dec:	00000020 	andeq	r0, r0, r0, lsr #32
 8006df0:	00000040 	andeq	r0, r0, r0, asr #32
 8006df4:	00000060 	andeq	r0, r0, r0, rrx
 8006df8:	00000020 	andeq	r0, r0, r0, lsr #32
 8006dfc:	00000020 	andeq	r0, r0, r0, lsr #32
 8006e00:	000000c0 	andeq	r0, r0, r0, asr #1

08006e04 <vtable for StoreNetwork>:
	...
 8006e0c:	08001fe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip}
 8006e10:	080020f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sp}
 8006e14:	08001fe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip}
 8006e18:	08002109 	stmdaeq	r0, {r0, r3, r8, sp}
 8006e1c:	08002099 	stmdaeq	r0, {r0, r3, r4, r7, sp}
 8006e20:	0800206d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sp}
 8006e24:	0800203d 	stmdaeq	r0, {r0, r2, r3, r4, r5, sp}
 8006e28:	080020c5 	stmdaeq	r0, {r0, r2, r6, r7, sp}
 8006e2c:	0800200d 	stmdaeq	r0, {r0, r2, r3, sp}
 8006e30:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8006e34:	00000000 	andeq	r0, r0, r0
 8006e38:	08001fe3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, sl, fp, ip}
 8006e3c:	08002101 	stmdaeq	r0, {r0, r8, sp}
 8006e40:	080020bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sp}
 8006e44:	08002091 	stmdaeq	r0, {r0, r4, r7, sp}
 8006e48:	08002065 	stmdaeq	r0, {r0, r2, r5, r6, sp}
 8006e4c:	080020ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sp}
 8006e50:	08002035 	stmdaeq	r0, {r0, r2, r4, r5, sp}

08006e54 <vtable for StoreRemoteConfig>:
	...
 8006e5c:	08002141 	stmdaeq	r0, {r0, r6, r8, sp}
 8006e60:	0800218d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sp}
 8006e64:	08002169 	stmdaeq	r0, {r0, r3, r5, r6, r8, sp}
 8006e68:	08002145 	stmdaeq	r0, {r0, r2, r6, r8, sp}
 8006e6c:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
 8006e70:	76654465 	strbtvc	r4, [r5], -r5, ror #8
 8006e74:	3a656369 	bcc	995fc20 <__exidx_end+0x1958568>
 8006e78:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8006e7c:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8006e80:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8006e84:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8006e88:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 8006e8c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8006e90:	7a697320 	bvc	9a63b18 <__exidx_end+0x1a5c460>
 8006e94:	75252065 	strvc	r2, [r5, #-101]!	; 0xffffff9b
 8006e98:	746f7420 	strbtvc	r7, [pc], #-1056	; 8006ea0 <vtable for StoreRemoteConfig+0x4c>
 8006e9c:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8006ea0:	79622075 	stmdbvc	r2!, {r0, r2, r4, r5, r6, sp}^
 8006ea4:	20736574 	rsbscs	r6, r3, r4, ror r5
 8006ea8:	2075255b 	rsbscs	r2, r5, fp, asr r5
 8006eac:	0a5d426b 	beq	9757860 <__exidx_end+0x17501a8>
 8006eb0:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8006eb4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8006eb8:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8006ebc:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8006ec0:	53530064 	cmppl	r3, #100	; 0x64
 8006ec4:	30333144 	eorscc	r3, r3, r4, asr #2
 8006ec8:	48530036 	ldmdami	r3, {r1, r2, r4, r5}^
 8006ecc:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8006ed0:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8006ed4:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8006ed8:	0a296425 	beq	8a5ff74 <__exidx_end+0xa588bc>
 8006edc:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8006ee0:	0000eeaa 	andeq	lr, r0, sl, lsr #29

08006ee4 <_OledFont8x6>:
 8006ee4:	00000040 	andeq	r0, r0, r0, asr #32
 8006ee8:	40000000 	andmi	r0, r0, r0
 8006eec:	005f0000 	subseq	r0, pc, r0
 8006ef0:	00400000 	subeq	r0, r0, r0
 8006ef4:	00070007 	andeq	r0, r7, r7
 8006ef8:	7f144000 	svcvc	0x00144000
 8006efc:	00147f14 	andseq	r7, r4, r4, lsl pc
 8006f00:	7f2a2440 	svcvc	0x002a2440
 8006f04:	4000122a 	andmi	r1, r0, sl, lsr #4
 8006f08:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8006f0c:	36400062 	strbcc	r0, [r0], -r2, rrx
 8006f10:	50205649 	eorpl	r5, r0, r9, asr #12
 8006f14:	08004000 	stmdaeq	r0, {lr}
 8006f18:	00000307 	andeq	r0, r0, r7, lsl #6
 8006f1c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8006f20:	40000041 	andmi	r0, r0, r1, asr #32
 8006f24:	1c224100 	stfnes	f4, [r2], #-0
 8006f28:	2a400000 	bcs	9006f30 <__exidx_end+0xfff878>
 8006f2c:	2a1c7f1c 	bcs	8726ba4 <__exidx_end+0x71f4ec>
 8006f30:	08084000 	stmdaeq	r8, {lr}
 8006f34:	0008083e 	andeq	r0, r8, lr, lsr r8
 8006f38:	70800040 	addvc	r0, r0, r0, asr #32
 8006f3c:	40000030 	andmi	r0, r0, r0, lsr r0
 8006f40:	08080808 	stmdaeq	r8, {r3, fp}
 8006f44:	00400008 	subeq	r0, r0, r8
 8006f48:	00606000 	rsbeq	r6, r0, r0
 8006f4c:	10204000 	eorne	r4, r0, r0
 8006f50:	00020408 	andeq	r0, r2, r8, lsl #8
 8006f54:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8006f58:	40003e45 	andmi	r3, r0, r5, asr #28
 8006f5c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8006f60:	72400000 	subvc	r0, r0, #0
 8006f64:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8006f68:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8006f6c:	00334d49 	eorseq	r4, r3, r9, asr #26
 8006f70:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8006f74:	4000107f 	andmi	r1, r0, pc, ror r0
 8006f78:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8006f7c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8006f80:	3149494a 	cmpcc	r9, sl, asr #18
 8006f84:	21414000 	mrscs	r4, (UNDEF: 65)
 8006f88:	00070911 	andeq	r0, r7, r1, lsl r9
 8006f8c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8006f90:	40003649 	andmi	r3, r0, r9, asr #12
 8006f94:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8006f98:	0040001e 	subeq	r0, r0, lr, lsl r0
 8006f9c:	00001400 	andeq	r1, r0, r0, lsl #8
 8006fa0:	40004000 	andmi	r4, r0, r0
 8006fa4:	00000034 	andeq	r0, r0, r4, lsr r0
 8006fa8:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8006fac:	40004122 	andmi	r4, r0, r2, lsr #2
 8006fb0:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8006fb4:	00400014 	subeq	r0, r0, r4, lsl r0
 8006fb8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8006fbc:	01024000 	mrseq	r4, (UNDEF: 2)
 8006fc0:	00060959 	andeq	r0, r6, r9, asr r9
 8006fc4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8006fc8:	40004e59 	andmi	r4, r0, r9, asr lr
 8006fcc:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8006fd0:	7f40007c 	svcvc	0x0040007c
 8006fd4:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8006fd8:	413e4000 	teqmi	lr, r0
 8006fdc:	00224141 	eoreq	r4, r2, r1, asr #2
 8006fe0:	41417f40 	cmpmi	r1, r0, asr #30
 8006fe4:	40003e41 	andmi	r3, r0, r1, asr #28
 8006fe8:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8006fec:	7f400041 	svcvc	0x00400041
 8006ff0:	01090909 	tsteq	r9, r9, lsl #18
 8006ff4:	413e4000 	teqmi	lr, r0
 8006ff8:	00735141 	rsbseq	r5, r3, r1, asr #2
 8006ffc:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8007000:	40007f08 	andmi	r7, r0, r8, lsl #30
 8007004:	417f4100 	cmnmi	pc, r0, lsl #2
 8007008:	20400000 	subcs	r0, r0, r0
 800700c:	013f4140 	teqeq	pc, r0, asr #2
 8007010:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8007014:	00412214 	subeq	r2, r1, r4, lsl r2
 8007018:	40407f40 	submi	r7, r0, r0, asr #30
 800701c:	40004040 	andmi	r4, r0, r0, asr #32
 8007020:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8007024:	7f40007f 	svcvc	0x0040007f
 8007028:	7f100804 	svcvc	0x00100804
 800702c:	413e4000 	teqmi	lr, r0
 8007030:	003e4141 	eorseq	r4, lr, r1, asr #2
 8007034:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8007038:	40000609 	andmi	r0, r0, r9, lsl #12
 800703c:	2151413e 	cmpcs	r1, lr, lsr r1
 8007040:	7f40005e 	svcvc	0x0040005e
 8007044:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8007048:	49264000 	stmdbmi	r6!, {lr}
 800704c:	00324949 	eorseq	r4, r2, r9, asr #18
 8007050:	7f010340 	svcvc	0x00010340
 8007054:	40000301 	andmi	r0, r0, r1, lsl #6
 8007058:	4040403f 	submi	r4, r0, pc, lsr r0
 800705c:	1f40003f 	svcne	0x0040003f
 8007060:	1f204020 	svcne	0x00204020
 8007064:	403f4000 	eorsmi	r4, pc, r0
 8007068:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 800706c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8007070:	40006314 	andmi	r6, r0, r4, lsl r3
 8007074:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8007078:	61400003 	cmpvs	r0, r3
 800707c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8007080:	7f004000 	svcvc	0x00004000
 8007084:	00414141 	subeq	r4, r1, r1, asr #2
 8007088:	08040240 	stmdaeq	r4, {r6, r9}
 800708c:	40002010 	andmi	r2, r0, r0, lsl r0
 8007090:	41414100 	mrsmi	r4, (UNDEF: 81)
 8007094:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8007098:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 800709c:	40404000 	submi	r4, r0, r0
 80070a0:	00404040 	subeq	r4, r0, r0, asr #32
 80070a4:	07030040 	streq	r0, [r3, -r0, asr #32]
 80070a8:	40000008 	andmi	r0, r0, r8
 80070ac:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80070b0:	7f400040 	svcvc	0x00400040
 80070b4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 80070b8:	44384000 	ldrtmi	r4, [r8], #-0
 80070bc:	00284444 	eoreq	r4, r8, r4, asr #8
 80070c0:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 80070c4:	40007f28 	andmi	r7, r0, r8, lsr #30
 80070c8:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 80070cc:	00400018 	subeq	r0, r0, r8, lsl r0
 80070d0:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 80070d4:	a4184000 	ldrge	r4, [r8], #-0
 80070d8:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80070dc:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80070e0:	40007804 	andmi	r7, r0, r4, lsl #16
 80070e4:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80070e8:	20400000 	subcs	r0, r0, r0
 80070ec:	003d4040 	eorseq	r4, sp, r0, asr #32
 80070f0:	107f4000 	rsbsne	r4, pc, r0
 80070f4:	00004428 	andeq	r4, r0, r8, lsr #8
 80070f8:	7f410040 	svcvc	0x00410040
 80070fc:	40000040 	andmi	r0, r0, r0, asr #32
 8007100:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8007104:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8007108:	78040408 	stmdavc	r4, {r3, sl}
 800710c:	44384000 	ldrtmi	r4, [r8], #-0
 8007110:	00384444 	eorseq	r4, r8, r4, asr #8
 8007114:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8007118:	40001824 	andmi	r1, r0, r4, lsr #16
 800711c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8007120:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8007124:	08040408 	stmdaeq	r4, {r3, sl}
 8007128:	54484000 	strbpl	r4, [r8], #-0
 800712c:	00245454 	eoreq	r5, r4, r4, asr r4
 8007130:	3f040440 	svccc	0x00040440
 8007134:	40002444 	andmi	r2, r0, r4, asr #8
 8007138:	2040403c 	subcs	r4, r0, ip, lsr r0
 800713c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8007140:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8007144:	403c4000 	eorsmi	r4, ip, r0
 8007148:	003c4030 	eorseq	r4, ip, r0, lsr r0
 800714c:	10284440 	eorne	r4, r8, r0, asr #8
 8007150:	40004428 	andmi	r4, r0, r8, lsr #8
 8007154:	9090904c 	addsls	r9, r0, ip, asr #32
 8007158:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 800715c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8007160:	08004000 	stmdaeq	r0, {lr}
 8007164:	00004136 	andeq	r4, r0, r6, lsr r1
 8007168:	77000040 	strvc	r0, [r0, -r0, asr #32]
 800716c:	40000000 	andmi	r0, r0, r0
 8007170:	08364100 	ldmdaeq	r6!, {r8, lr}
 8007174:	02400000 	subeq	r0, r0, #0
 8007178:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 800717c:	263c4000 	ldrtcs	r4, [ip], -r0
 8007180:	003c2623 	eorseq	r2, ip, r3, lsr #12

08007184 <oled_128x32_init>:
 8007184:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8007188:	4000d31f 	andmi	sp, r0, pc, lsl r3
 800718c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8007190:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8007194:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8007198:	a6a440db 	ssatge	r4, #5, fp, asr #1

0800719c <oled_128x64_init>:
 800719c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80071a0:	4000d33f 	andmi	sp, r0, pc, lsr r3
 80071a4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80071a8:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80071ac:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80071b0:	a6a440db 	ssatge	r4, #5, fp, asr #1

080071b4 <vtable for Ssd1306>:
	...
 80071bc:	08002391 	stmdaeq	r0, {r0, r4, r7, r8, r9, sp}
 80071c0:	080023bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sp}
 80071c4:	080026cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, sp}
 80071c8:	08002655 	stmdaeq	r0, {r0, r2, r4, r6, r9, sl, sp}
 80071cc:	08002521 	stmdaeq	r0, {r0, r5, r8, sl, sp}
 80071d0:	080023dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sp}
 80071d4:	08002405 	stmdaeq	r0, {r0, r2, sl, sp}
 80071d8:	080024f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, sl, sp}
 80071dc:	080024b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, sp}
 80071e0:	08002393 	stmdaeq	r0, {r0, r1, r4, r7, r8, r9, sp}
 80071e4:	0800255d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, sp}
 80071e8:	08002569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, sp}
 80071ec:	08002583 	stmdaeq	r0, {r0, r1, r7, r8, sl, sp}
 80071f0:	08002395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sp}
 80071f4:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80071f8:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 80071fc:	46004752 			; <UNDEFINED> instruction: 0x46004752
 8007200:	203a434d 	eorscs	r4, sl, sp, asr #6
 8007204:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 8007208:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 800720c:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8007210:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 8007214:	746f7420 	strbtvc	r7, [pc], #-1056	; 800721c <vtable for Ssd1306+0x68>
 8007218:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 800721c:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8007220:	20736574 	rsbscs	r6, r3, r4, ror r5
 8007224:	2064255b 	rsbcs	r2, r4, fp, asr r5
 8007228:	0a5d426b 	beq	9757bdc <__exidx_end+0x1750524>
 800722c:	00000000 	andeq	r0, r0, r0

08007230 <flashes>:
 8007230:	0000c800 	andeq	ip, r0, r0, lsl #16
 8007234:	08002e5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp, sp}
 8007238:	0000c200 	andeq	ip, r0, r0, lsl #4
 800723c:	08002ea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, sp}
 8007240:	0000ef00 	andeq	lr, r0, r0, lsl #30
 8007244:	08002d65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, sp}
 8007248:	50353257 	eorspl	r3, r5, r7, asr r2
 800724c:	57003038 	smladxpl	r0, r8, r0, r3
 8007250:	31503532 	cmpcc	r0, r2, lsr r5
 8007254:	32570036 	subscc	r0, r7, #54	; 0x36
 8007258:	32335035 	eorscc	r5, r3, #53	; 0x35
 800725c:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 8007260:	00303458 	eorseq	r3, r0, r8, asr r4
 8007264:	58353257 	ldmdapl	r5!, {r0, r1, r2, r4, r6, r9, ip, sp}
 8007268:	57003631 	smladxpl	r0, r1, r6, r3
 800726c:	33583532 	cmpcc	r8, #209715200	; 0xc800000
 8007270:	32570032 	subscc	r0, r7, #50	; 0x32
 8007274:	34365835 	ldrtcc	r5, [r6], #-2101	; 0xfffff7cb
 8007278:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 800727c:	42303851 	eorsmi	r3, r0, #5308416	; 0x510000
 8007280:	32572f4c 	subscc	r2, r7, #76, 30	; 0x130
 8007284:	30385135 	eorscc	r5, r8, r5, lsr r1
 8007288:	57005642 	strpl	r5, [r0, -r2, asr #12]
 800728c:	31513532 	cmpcc	r1, r2, lsr r5
 8007290:	2f4c4336 	svccs	0x004c4336
 8007294:	51353257 	teqpl	r5, r7, asr r2
 8007298:	56443631 			; <UNDEFINED> instruction: 0x56443631
 800729c:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 80072a0:	42323351 	eorsmi	r3, r2, #1140850689	; 0x44000001
 80072a4:	32572f56 	subscc	r2, r7, #344	; 0x158
 80072a8:	32335135 	eorscc	r5, r3, #1073741837	; 0x4000000d
 80072ac:	535f5646 	cmppl	pc, #73400320	; 0x4600000
 80072b0:	57004950 	smlsdpl	r0, r0, r9, r4
 80072b4:	36513532 			; <UNDEFINED> instruction: 0x36513532
 80072b8:	2f564334 	svccs	0x00564334
 80072bc:	51353257 	teqpl	r5, r7, asr r2
 80072c0:	56463436 			; <UNDEFINED> instruction: 0x56463436
 80072c4:	4950535f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
 80072c8:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 80072cc:	38323151 	ldmdacc	r2!, {r0, r4, r6, r8, ip, sp}
 80072d0:	572f5642 	strpl	r5, [pc, -r2, asr #12]!
 80072d4:	31513532 	cmpcc	r1, r2, lsr r5
 80072d8:	56463832 			; <UNDEFINED> instruction: 0x56463832
 80072dc:	4950535f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
 80072e0:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 80072e4:	36353251 			; <UNDEFINED> instruction: 0x36353251
 80072e8:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 80072ec:	42303851 	eorsmi	r3, r0, #5308416	; 0x510000
 80072f0:	32570057 	subscc	r0, r7, #87	; 0x57
 80072f4:	36315135 			; <UNDEFINED> instruction: 0x36315135
 80072f8:	57005744 	strpl	r5, [r0, -r4, asr #14]
 80072fc:	33513532 	cmpcc	r1, #209715200	; 0xc800000
 8007300:	2f574432 	svccs	0x00574432
 8007304:	51353257 	teqpl	r5, r7, asr r2
 8007308:	56463233 			; <UNDEFINED> instruction: 0x56463233
 800730c:	4950515f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, ip, lr}^
 8007310:	35325700 	ldrcc	r5, [r2, #-1792]!	; 0xfffff900
 8007314:	44343651 	ldrtmi	r3, [r4], #-1617	; 0xfffff9af
 8007318:	32572f57 	subscc	r2, r7, #348	; 0x15c
 800731c:	34365135 	ldrtcc	r5, [r6], #-309	; 0xfffffecb
 8007320:	515f5646 	cmppl	pc, r6, asr #12
 8007324:	57004950 	smlsdpl	r0, r0, r9, r4
 8007328:	31513532 	cmpcc	r1, r2, lsr r5
 800732c:	57463832 	smlaldxpl	r3, r6, r2, r8
 8007330:	3532572f 	ldrcc	r5, [r2, #-1839]!	; 0xfffff8d1
 8007334:	38323151 	ldmdacc	r2!, {r0, r4, r6, r8, ip, sp}
 8007338:	515f5646 	cmppl	pc, r6, asr #12
 800733c:	00004950 	andeq	r4, r0, r0, asr r9

08007340 <winbond_spi_flash_table>:
 8007340:	00102014 	andseq	r2, r0, r4, lsl r0
 8007344:	08007248 	stmdaeq	r0, {r3, r6, r9, ip, sp, lr}
 8007348:	00202015 	eoreq	r2, r0, r5, lsl r0
 800734c:	0800724f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r9, ip, sp, lr}
 8007350:	00402016 	subeq	r2, r0, r6, lsl r0
 8007354:	08007256 	stmdaeq	r0, {r1, r2, r4, r6, r9, ip, sp, lr}
 8007358:	00083013 	andeq	r3, r8, r3, lsl r0
 800735c:	0800725d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, ip, sp, lr}
 8007360:	00203015 	eoreq	r3, r0, r5, lsl r0
 8007364:	08007264 	stmdaeq	r0, {r2, r5, r6, r9, ip, sp, lr}
 8007368:	00403016 	subeq	r3, r0, r6, lsl r0
 800736c:	0800726b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, ip, sp, lr}
 8007370:	00803017 	addeq	r3, r0, r7, lsl r0
 8007374:	08007272 	stmdaeq	r0, {r1, r4, r5, r6, r9, ip, sp, lr}
 8007378:	00104014 	andseq	r4, r0, r4, lsl r0
 800737c:	08007279 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, ip, sp, lr}
 8007380:	00204015 	eoreq	r4, r0, r5, lsl r0
 8007384:	0800728b 	stmdaeq	r0, {r0, r1, r3, r7, r9, ip, sp, lr}
 8007388:	00404016 	subeq	r4, r0, r6, lsl r0
 800738c:	0800729d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, ip, sp, lr}
 8007390:	00804017 	addeq	r4, r0, r7, lsl r0
 8007394:	080072b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9, ip, sp, lr}
 8007398:	01004018 	tsteq	r0, r8, lsl r0
 800739c:	080072c9 	stmdaeq	r0, {r0, r3, r6, r7, r9, ip, sp, lr}
 80073a0:	02004019 	andeq	r4, r0, #25
 80073a4:	080072e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, ip, sp, lr}
 80073a8:	00105014 	andseq	r5, r0, r4, lsl r0
 80073ac:	080072e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, ip, sp, lr}
 80073b0:	00206015 	eoreq	r6, r0, r5, lsl r0
 80073b4:	080072f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, ip, sp, lr}
 80073b8:	00406016 	subeq	r6, r0, r6, lsl r0
 80073bc:	080072fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 80073c0:	00806017 	addeq	r6, r0, r7, lsl r0
 80073c4:	08007311 	stmdaeq	r0, {r0, r4, r8, r9, ip, sp, lr}
 80073c8:	01006018 	tsteq	r0, r8, lsl r0
 80073cc:	08007327 	stmdaeq	r0, {r0, r1, r2, r5, r8, r9, ip, sp, lr}
 80073d0:	35324447 	ldrcc	r4, [r2, #-1095]!	; 0xfffffbb9
 80073d4:	4700514c 	strmi	r5, [r0, -ip, asr #2]
 80073d8:	51353244 	teqpl	r5, r4, asr #4
 80073dc:	00423436 	subeq	r3, r2, r6, lsr r4

080073e0 <gigadevice_spi_flash_table>:
 80073e0:	00406016 	subeq	r6, r0, r6, lsl r0
 80073e4:	080073d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, ip, sp, lr}
 80073e8:	00804017 	addeq	r4, r0, r7, lsl r0
 80073ec:	080073d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, r9, ip, sp, lr}
 80073f0:	3532584d 	ldrcc	r5, [r2, #-2125]!	; 0xfffff7b3
 80073f4:	3030344c 	eorscc	r3, r0, ip, asr #8
 80073f8:	584d0035 	stmdapl	sp, {r0, r2, r4, r5}^
 80073fc:	384c3532 	stmdacc	ip, {r1, r4, r5, r8, sl, ip, sp}^
 8007400:	00353030 	eorseq	r3, r5, r0, lsr r0
 8007404:	3532584d 	ldrcc	r5, [r2, #-2125]!	; 0xfffff7b3
 8007408:	3036314c 	eorscc	r3, r6, ip, asr #2
 800740c:	4d004435 	cfstrsmi	mvf4, [r0, #-212]	; 0xffffff2c
 8007410:	4c353258 	lfmmi	f3, 4, [r5], #-352	; 0xfffffea0
 8007414:	35303233 	ldrcc	r3, [r0, #-563]!	; 0xfffffdcd
 8007418:	584d0044 	stmdapl	sp, {r2, r6}^
 800741c:	364c3532 			; <UNDEFINED> instruction: 0x364c3532
 8007420:	44353034 	ldrtmi	r3, [r5], #-52	; 0xffffffcc
 8007424:	32584d00 	subscc	r4, r8, #0, 26
 8007428:	32314c35 	eorscc	r4, r1, #13568	; 0x3500
 800742c:	44353038 	ldrtmi	r3, [r5], #-56	; 0xffffffc8
 8007430:	32584d00 	subscc	r4, r8, #0, 26
 8007434:	32314c35 	eorscc	r4, r1, #13568	; 0x3500
 8007438:	45353538 	ldrmi	r3, [r5, #-1336]!	; 0xfffffac8
 800743c:	00000000 	andeq	r0, r0, r0

08007440 <macronix_spi_flash_table>:
 8007440:	00082013 	andeq	r2, r8, r3, lsl r0
 8007444:	080073f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, ip, sp, lr}
 8007448:	00102014 	andseq	r2, r0, r4, lsl r0
 800744c:	080073fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 8007450:	00202015 	eoreq	r2, r0, r5, lsl r0
 8007454:	08007404 	stmdaeq	r0, {r2, sl, ip, sp, lr}
 8007458:	00402016 	subeq	r2, r0, r6, lsl r0
 800745c:	0800740f 	stmdaeq	r0, {r0, r1, r2, r3, sl, ip, sp, lr}
 8007460:	00802017 	addeq	r2, r0, r7, lsl r0
 8007464:	0800741a 	stmdaeq	r0, {r1, r3, r4, sl, ip, sp, lr}
 8007468:	01002018 	tsteq	r0, r8, lsl r0
 800746c:	08007425 	stmdaeq	r0, {r0, r2, r5, sl, ip, sp, lr}
 8007470:	01002618 	tsteq	r0, r8, lsl r6
 8007474:	08007431 	stmdaeq	r0, {r0, r4, r5, sl, ip, sp, lr}
 8007478:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 800747c:	626e7500 	rsbvs	r7, lr, #0, 10
 8007480:	0a646e69 	beq	9922e2c <__exidx_end+0x191b774>
 8007484:	50524100 	subspl	r4, r2, r0, lsl #2
 8007488:	6f6f6c20 	svcvs	0x006f6c20
 800748c:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8007490:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8007494:	2d206465 	cfstrscs	mvf6, [r0, #-404]!	; 0xfffffe6c
 8007498:	6564203e 	strbvs	r2, [r4, #-62]!	; 0xffffffc2
 800749c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 80074a0:	61672074 	smcvs	29188	; 0x7204
 80074a4:	61776574 	cmnvs	r7, r4, ror r5
 80074a8:	41000a79 	tstmi	r0, r9, ror sl
 80074ac:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80074b0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80074b4:	61662070 	smcvs	25088	; 0x6200
 80074b8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80074bc:	6e49000a 	cdpvs	0, 4, cr0, cr9, cr10, {0}
 80074c0:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
 80074c4:	706f2064 	rsbvc	r2, pc, r4, rrx
 80074c8:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
 80074cc:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 80074d0:	61766e49 	cmnvs	r6, r9, asr #28
 80074d4:	2064696c 	rsbcs	r6, r4, ip, ror #18
 80074d8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80074dc:	6d616e20 	stclvs	14, cr6, [r1, #-128]!	; 0xffffff80
 80074e0:	636f0065 	cmnvs	pc, #101	; 0x65
 80074e4:	00746574 	rsbseq	r6, r4, r4, ror r5
 80074e8:	6174656e 	cmnvs	r4, lr, ror #10
 80074ec:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80074f0:	6c694600 	stclvs	6, cr4, [r9], #-0
 80074f4:	6f6e2065 	svcvs	0x006e2065
 80074f8:	6f662074 	svcvs	0x00662074
 80074fc:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8007500:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
 8007504:	76207373 			; <UNDEFINED> instruction: 0x76207373
 8007508:	616c6f69 	cmnvs	ip, r9, ror #30
 800750c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8007510:	69725700 	ldmdbvs	r2!, {r8, r9, sl, ip, lr}^
 8007514:	66206574 			; <UNDEFINED> instruction: 0x66206574
 8007518:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 800751c:	00000064 	andeq	r0, r0, r4, rrx

08007520 <vtable for TFTPDaemon>:
	...
 8007548:	30687465 	rsbcc	r7, r8, r5, ror #8
 800754c:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8007550:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8007554:	5f656369 	svcpl	0x00656369
 8007558:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 800755c:	6b726f77 	blvs	9ca3340 <__exidx_end+0x1c9bc88>
 8007560:	4820000a 	stmdami	r0!, {r1, r3}
 8007564:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8007568:	20656d61 	rsbcs	r6, r5, r1, ror #26
 800756c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8007570:	20000a73 	andcs	r0, r0, r3, ror sl
 8007574:	614e6649 	cmpvs	lr, r9, asr #12
 8007578:	2020656d 	eorcs	r6, r0, sp, ror #10
 800757c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8007580:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8007584:	000a7325 	andeq	r7, sl, r5, lsr #6
 8007588:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 800758c:	20202074 	eorcs	r2, r0, r4, ror r0
 8007590:	3a202020 	bcc	880f618 <__exidx_end+0x807f60>
 8007594:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8007598:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 800759c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80075a0:	0a64252f 	beq	9910a64 <__exidx_end+0x19093ac>
 80075a4:	654e2000 	strbvs	r2, [lr, #-0]
 80075a8:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80075ac:	2020206b 	eorcs	r2, r0, fp, rrx
 80075b0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80075b4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80075b8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80075bc:	20000a64 	andcs	r0, r0, r4, ror #20
 80075c0:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80075c4:	20796177 	rsbscs	r6, r9, r7, ror r1
 80075c8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80075cc:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80075d0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80075d4:	0a64252e 	beq	9910a94 <__exidx_end+0x19093dc>
 80075d8:	72422000 	subvc	r2, r2, #0
 80075dc:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80075e0:	20747361 	rsbscs	r7, r4, r1, ror #6
 80075e4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80075e8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80075ec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80075f0:	20000a64 	andcs	r0, r0, r4, ror #20
 80075f4:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80075f8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80075fc:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8007600:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8007604:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8007608:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 800760c:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8007610:	3a78322e 	bcc	9e13ed0 <__exidx_end+0x1e0c818>
 8007614:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8007618:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 800761c:	20000a78 	andcs	r0, r0, r8, ror sl
 8007620:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8007624:	20202020 	eorcs	r2, r0, r0, lsr #32
 8007628:	203a2020 	eorscs	r2, sl, r0, lsr #32
 800762c:	000a6325 	andeq	r6, sl, r5, lsr #6
 8007630:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8007634:	5b1b006d 	blpl	86c77f0 <__exidx_end+0x6c0138>
 8007638:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 800763c:	30335b1b 	eorscc	r5, r3, fp, lsl fp
 8007640:	5b1b006d 	blpl	86c77fc <__exidx_end+0x6c0144>
 8007644:	006d3133 	rsbeq	r3, sp, r3, lsr r1
 8007648:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 800764c:	5b1b006d 	blpl	86c7808 <__exidx_end+0x6c0150>
 8007650:	006d3333 	rsbeq	r3, sp, r3, lsr r3
 8007654:	39335b1b 	ldmdbcc	r3!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
 8007658:	565b006d 	ldrbpl	r0, [fp], -sp, rrx
 800765c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8007660:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 8007664:	6d6f4320 	stclvs	3, cr4, [pc, #-128]!	; 80075ec <vtable for TFTPDaemon+0xcc>
 8007668:	656c6970 	strbvs	r6, [ip, #-2416]!	; 0xfffff690
 800766c:	6e6f2064 	cdpvs	0, 6, cr2, cr15, cr4, {3}
 8007670:	2a2e2520 	bcs	8b90af8 <__exidx_end+0xb89440>
 8007674:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 8007678:	2a2e2520 	bcs	8b90b00 <__exidx_end+0xb89448>
 800767c:	00000073 	andeq	r0, r0, r3, ror r0

08007680 <days_of_month>:
 8007680:	0000001f 	andeq	r0, r0, pc, lsl r0
 8007684:	0000001c 	andeq	r0, r0, ip, lsl r0
 8007688:	0000001f 	andeq	r0, r0, pc, lsl r0
 800768c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8007690:	0000001f 	andeq	r0, r0, pc, lsl r0
 8007694:	0000001e 	andeq	r0, r0, lr, lsl r0
 8007698:	0000001f 	andeq	r0, r0, pc, lsl r0
 800769c:	0000001f 	andeq	r0, r0, pc, lsl r0
 80076a0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80076a4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80076a8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80076ac:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080076b0 <__exidx_start>:
 80076b0:	7fff9974 	svcvc	0x00ff9974
 80076b4:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080076b8 <.ARM.attributes>:
 80076b8:	00002e41 	andeq	r2, r0, r1, asr #28
 80076bc:	61656100 	cmnvs	r5, r0, lsl #2
 80076c0:	01006962 	tsteq	r0, r2, ror #18
 80076c4:	00000024 	andeq	r0, r0, r4, lsr #32
 80076c8:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80076cc:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80076d0:	0600334d 	streq	r3, [r0], -sp, asr #6
 80076d4:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 80076d8:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 80076dc:	17011501 	strne	r1, [r1, -r1, lsl #10]
 80076e0:	1a011803 	bne	804d6f4 <__exidx_end+0x4603c>
 80076e4:	Address 0x00000000080076e4 is out of bounds.


Disassembly of section .data:

20000000 <s_flash>:
20000000:	08006a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp, sp, lr}
	...
20000010:	00000005 	andeq	r0, r0, r5

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <next_block>:
2000001c:	20005000 	andcs	r5, r0, r0

20000020 <s_block_bucket>:
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000040 	andeq	r0, r0, r0, asr #32
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000060 	andeq	r0, r0, r0, rrx
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000080 	andeq	r0, r0, r0, lsl #1
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000100 	andeq	r0, r0, r0, lsl #2
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000140 	andeq	r0, r0, r0, asr #2
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000180 	andeq	r0, r0, r0, lsl #3
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000200 	andeq	r0, r0, r0, lsl #4
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000300 	andeq	r0, r0, r0, lsl #6
20000064:	00000000 	andeq	r0, r0, r0
20000068:	00000400 	andeq	r0, r0, r0, lsl #8
2000006c:	00000000 	andeq	r0, r0, r0
20000070:	0003a800 	andeq	sl, r3, r0, lsl #16
	...

20000080 <SystemCoreClock>:
20000080:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

20000088 <outptr>:
20000088:	00000000 	andeq	r0, r0, r0

2000008c <RemoteConfig::s_pUdpBuffer>:
2000008c:	00000000 	andeq	r0, r0, r0

20000090 <RemoteConfig::s_RemoteConfigListBin>:
	...

200000b4 <RemoteConfig::s_pThis>:
200000b4:	00000000 	andeq	r0, r0, r0

200000b8 <FlashCodeInstall::s_pThis>:
200000b8:	00000000 	andeq	r0, r0, r0

200000bc <ConfigStore::s_nWaitMillis>:
200000bc:	00000000 	andeq	r0, r0, r0

200000c0 <ConfigStore::s_SpiFlashData>:
	...

200010c0 <ConfigStore::s_nStartAddress>:
200010c0:	00000000 	andeq	r0, r0, r0

200010c4 <ConfigStore::s_bHaveFlashChip>:
200010c4:	00000000 	andeq	r0, r0, r0

200010c8 <ConfigStore::s_nSpiFlashStoreSize>:
200010c8:	00000000 	andeq	r0, r0, r0

200010cc <ConfigStore::s_State>:
200010cc:	00000000 	andeq	r0, r0, r0

200010d0 <ConfigStore::s_pThis>:
200010d0:	00000000 	andeq	r0, r0, r0

200010d4 <ConfigStore::s_bIsNew>:
200010d4:	00000000 	andeq	r0, r0, r0

200010d8 <StoreNetwork::s_pThis>:
200010d8:	00000000 	andeq	r0, r0, r0

200010dc <StoreRemoteConfig::s_pThis>:
200010dc:	00000000 	andeq	r0, r0, r0

200010e0 <Display::s_pThis>:
200010e0:	00000000 	andeq	r0, r0, r0

200010e4 <_ClearBuffer>:
	...

2000116c <Ssd1306::s_pThis>:
2000116c:	00000000 	andeq	r0, r0, r0

20001170 <FlashCode::s_pThis>:
20001170:	00000000 	andeq	r0, r0, r0

20001174 <flashcode::s_nAddress>:
20001174:	00000000 	andeq	r0, r0, r0

20001178 <flashcode::s_State>:
20001178:	00000000 	andeq	r0, r0, r0

2000117c <flashcode::s_nPage>:
2000117c:	00000000 	andeq	r0, r0, r0

20001180 <flashcode::s_pData>:
20001180:	00000000 	andeq	r0, r0, r0

20001184 <flashcode::s_isBank0>:
20001184:	00000000 	andeq	r0, r0, r0

20001188 <flashcode::s_nLength>:
20001188:	00000000 	andeq	r0, r0, r0

2000118c <g_ip_info>:
	...

20001198 <g_mac_address>:
20001198:	00000000 	andeq	r0, r0, r0
	...

2000119e <s_is_dhcp>:
	...

200011a0 <s_p>:
200011a0:	00000000 	andeq	r0, r0, r0

200011a4 <s_ticker>:
200011a4:	00000000 	andeq	r0, r0, r0

200011a8 <s_mac_address>:
	...

200011b0 <s_mac_address_arp_reply>:
	...

200011b8 <s_tcp>:
	...

200017a4 <broadcast_mask>:
200017a4:	00000000 	andeq	r0, r0, r0

200017a8 <gw_ip>:
200017a8:	00000000 	andeq	r0, r0, r0

200017ac <on_network_mask>:
200017ac:	00000000 	andeq	r0, r0, r0

200017b0 <s_id>:
200017b0:	00000000 	andeq	r0, r0, r0

200017b4 <s_ports_allowed>:
	...

200017bc <s_recv_queue>:
	...

20002ee4 <s_send_packet>:
	...

200034d0 <TFTPDaemon::s_pThis>:
200034d0:	00000000 	andeq	r0, r0, r0

200034d4 <Network::s_pThis>:
200034d4:	00000000 	andeq	r0, r0, r0

200034d8 <s_arp_announce>:
	...

20003504 <s_arp_reply>:
	...

20003530 <s_arp_request>:
	...

2000355c <s_arp_records>:
	...

200036dc <s_entry_current>:
200036dc:	00000000 	andeq	r0, r0, r0

200036e0 <s_dhcp_allocated_gw>:
200036e0:	00000000 	andeq	r0, r0, r0

200036e4 <s_dhcp_allocated_ip>:
200036e4:	00000000 	andeq	r0, r0, r0

200036e8 <s_dhcp_allocated_netmask>:
200036e8:	00000000 	andeq	r0, r0, r0

200036ec <s_dhcp_message>:
	...

20003910 <s_dhcp_server_ip>:
20003910:	00000000 	andeq	r0, r0, r0

20003914 <s_groups>:
	...

2000391c <s_id>:
2000391c:	00000000 	andeq	r0, r0, r0

20003920 <s_joins_allowed_index>:
20003920:	00000000 	andeq	r0, r0, r0

20003924 <s_leave>:
	...

20003954 <s_multicast_mac>:
	...

2000395c <s_report>:
	...

2000398a <FirmwareVersion::s_FirmwareVersion>:
	...

200039a0 <FirmwareVersion::s_Print>:
	...

200039e0 <FirmwareVersion::s_pThis>:
200039e0:	00000000 	andeq	r0, r0, r0

200039e4 <LedBlink::s_pThis>:
200039e4:	00000000 	andeq	r0, r0, r0

200039e8 <Hardware::s_pThis>:
	...

200039f0 <s_micros>:
	...

200039f8 <set_timer>:
200039f8:	00000000 	andeq	r0, r0, r0

200039fc <s_nSysTickMillis>:
200039fc:	00000000 	andeq	r0, r0, r0

20003a00 <dma_current_ptp_rxdesc>:
20003a00:	00000000 	andeq	r0, r0, r0

20003a04 <dma_current_ptp_txdesc>:
20003a04:	00000000 	andeq	r0, r0, r0

20003a08 <dma_current_rxdesc>:
20003a08:	00000000 	andeq	r0, r0, r0

20003a0c <dma_current_txdesc>:
20003a0c:	00000000 	andeq	r0, r0, r0

20003a10 <enet_initpara>:
	...

20003a4c <rx_buff>:
	...

20004634 <rxdesc_tab>:
	...

20004654 <tx_buff>:
	...

20004c48 <txdesc_tab>:
	...

20004c58 <s_nAddress>:
	...

20004c59 <s_nChipSelect>:
20004c59:	Address 0x0000000020004c59 is out of bounds.


Disassembly of section .heap:

20005000 <heap_low>:
	...

Disassembly of section .stack:

2003fc00 <_sp-0x400>:
	...
